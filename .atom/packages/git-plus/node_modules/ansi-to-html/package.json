{
  "_args": [
    [
      {
        "raw": "ansi-to-html@^0.4.1",
        "scope": null,
        "escapedName": "ansi-to-html",
        "name": "ansi-to-html",
        "rawSpec": "^0.4.1",
        "spec": ">=0.4.1 <0.5.0",
        "type": "range"
      },
      "/tmp/d-117419-8053-id6uvf.6zrv841jor/package.tgz"
    ]
  ],
  "_from": "ansi-to-html@>=0.4.1 <0.5.0",
  "_id": "ansi-to-html@0.4.2",
  "_inCache": true,
  "_location": "/git-plus/ansi-to-html",
  "_nodeVersion": "0.12.7",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ansi-to-html-0.4.2.tgz_1474873793278_0.8167830959428102"
  },
  "_npmUser": {
    "name": "rburns",
    "email": "rburns@paiges.net"
  },
  "_npmVersion": "2.11.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ansi-to-html@^0.4.1",
    "scope": null,
    "escapedName": "ansi-to-html",
    "name": "ansi-to-html",
    "rawSpec": "^0.4.1",
    "spec": ">=0.4.1 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/git-plus"
  ],
  "_resolved": "https://registry.npmjs.org/ansi-to-html/-/ansi-to-html-0.4.2.tgz",
  "_shasum": "5102e0273a598be2f8d08896603b179b0fdfcf11",
  "_shrinkwrap": null,
  "_spec": "ansi-to-html@^0.4.1",
  "_where": "/tmp/d-117419-8053-id6uvf.6zrv841jor/package.tgz",
  "author": {
    "name": "Rob Burns",
    "email": "rburns@paiges.net",
    "url": "http://rburns.paiges.net/"
  },
  "bin": {
    "ansi-to-html": "./bin/ansi-to-html"
  },
  "bugs": {
    "url": "https://github.com/rburns/ansi-to-html/issues"
  },
  "contributors": [
    {
      "name": "Michael",
      "email": "michael@riesd.com"
    },
    {
      "name": "Thorsten Kohnhorst",
      "email": "monsterkodi@gmx.net"
    },
    {
      "name": "Yoram Grahame",
      "email": "yoz@yoz.com"
    }
  ],
  "dependencies": {
    "entities": "^1.1.1"
  },
  "description": "Convert ansi escaped text streams to html.",
  "devDependencies": {
    "chai": "~3.5.0",
    "grunt": "~0.4.5",
    "grunt-contrib-coffee": "^0.13.0",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-simple-mocha": "~0.4.1"
  },
  "directories": {},
  "dist": {
    "shasum": "5102e0273a598be2f8d08896603b179b0fdfcf11",
    "tarball": "https://registry.npmjs.org/ansi-to-html/-/ansi-to-html-0.4.2.tgz"
  },
  "engines": {
    "node": "*"
  },
  "gitHead": "4dbebe56b7fdd3153413a265d11e52a505525895",
  "homepage": "https://github.com/rburns/ansi-to-html#readme",
  "keywords": [
    "ansi",
    "html"
  ],
  "license": "MIT",
  "main": "lib/ansi_to_html.js",
  "maintainers": [
    {
      "name": "rburns",
      "email": "rburns@paiges.net"
    }
  ],
  "name": "ansi-to-html",
  "optionalDependencies": {},
  "readme": "## Ansi to Html\n\n![](https://img.shields.io/npm/v/ansi-to-html.svg) ![](https://img.shields.io/npm/dm/ansi-to-html.svg) ![](https://img.shields.io/travis/rburns/ansi-to-html.svg)\n\nThis is a port of the ansi to html converter from [bcat](https://github.com/rtomayko/bcat/blob/master/lib/bcat/ansi.rb) to Javascript.\n\nIt has a few additions:\n\n* The API has been altered to accept options in the constructor, and input in <code>toHtml()</code>.\n* ANSI codes for setting the foreground or background color to default are handled\n* the 'erase in line' escape code (\\x1b[K) is dropped from the output.\n\n## Installation\n\n\tnpm install ansi-to-html\n\n## Usage\n\n\tvar Convert = require('ansi-to-html');\n\tvar convert = new Convert();\n\n\tconsole.log(convert.toHtml('\\x1b[30mblack\\x1b[37mwhite'));\n\n\t/*\n\t\tprints:\n\t\t<span style=\"color:#000\">black<span style=\"color:#AAA\">white</span></span>\n\t*/\n\n## Command line usage\n\nProcess a file:\n\n```bash\nansi-to-html the_filename\n```\n\nFrom STDIN:\n\n```bash\ngit log | ansi-to-html\n```\n\nWhen using ansi-to-html from the command line the stream option is set to `true`. Other options can\nbe provided. See `ansi-to-html -h` for more detail.\n\n## Options\n\nOptions can be be passed to the constructor to customize behaviour.\n\n**fg** <code>CSS color values</code> The default foreground color used when reset color codes are encountered.\n\n**bg** <code>CSS color values</code> The default background color used when reset color codes are encountered.\n\n**newline** <code>true or false</code> Convert newline characters to <code>&lt;br/&gt;</code>.\n\n**escapeXML** <code>true or false</code> Generate HTML/XML entities.\n\n**stream** <code>true or false</code> save style state across invocations of toHtml().\n\n### Default options\n\n```coffee\nfg: '#FFF'\nbg: '#000'\nnewline: false\nescapeXML: false\nstream: false\n```\n\n## Development\n\n[![](http://issuestats.com/github/rburns/ansi-to-html/badge/issue?style=flat)](http://issuestats.com/github/rburns/ansi-to-html)\n[![](http://issuestats.com/github/rburns/ansi-to-html/badge/pr?style=flat)](http://issuestats.com/github/rburns/ansi-to-html)\n\nOnce you have the git repository cloned, install the dependencies:\n\n\tcd ansi-to-html\n\tnpm install\n\nIf you don't have it already, install the grunt command-line tool:\n\n\tnpm install -g grunt-cli\n\nBuild and test\n\n\tgrunt\n\nAll the time\n\n\tgrunt watch\n\nOr separately\n\n\tgrunt coffee\n\tgrunt simplemocha  # or npm test\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rburns/ansi-to-html.git"
  },
  "scripts": {
    "test": "grunt simplemocha"
  },
  "version": "0.4.2"
}
