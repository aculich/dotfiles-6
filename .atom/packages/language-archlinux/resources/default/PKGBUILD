# Maintainer <NAME> <<EMAIL>>
# The maintainer's email address should be encoded appropriately,
# with @ replaced with "at" and . replaced with "dot", for example


# Variables other than the ones mentioned below (e.g., some PKGBUILDs
# include a _pkgname variable) should have an underscore (_) before them

pkgname=<PKG>           # This is the name of the package. It can be an array of multiple pkgnames,
                            # but for each pkgname a separate package() function should be defined.

pkgver=                     # This is the package version of the PKGBUILD
pkgrel=1                    # This is the revision number of the PKGBUILD. If this PKGBUILD is new it should be 1
pkgdesc=""                  # Here you need to place a description of the package
arch=('i686' 'x86_64')      # The supported architectures of this package
url=""                      # URL to homepage.
license=()                  # License of the package. Check /usr/share/licenses/common for the name of recognized licenses
depends=()                  # Dependencies of the package. These packages are runtime dependencies for the package.
makedepends=()              # Build dependencies of the package. These are not required to use the package once installed
optdepends=()               # Optional (recommended) dependencies
install=<PKG>.install   # Install file, which is not absolutely necessary.
source=()                   # Source file(s), like patches and the upstream package source. If your upstream source is a git
                            # repository you may wish to include a pkgver() function before the prepare() function
sha256sums=()               # checksums, permissible alternative checksum variables include md5sums, sha1sums and sha512sums

# This function prepares the source, applying any necessary patches to the upstream source.
prepare() {
 cd $srcdir/$pkgname    # This should be adjusted (in all three of these functions), according
                        # to where the upstream source code for the package is stored in $srcdir
}

# Compile the source code. Usually commands like python setup.py, make or npm install appear in this function
build() {
 cd $srcdir/$pkgname
}

# Build the package. This involves moving the package contents to the $pkgdir directory
package() {
 cd $srcdir/$pkgname
}
