{
  "_args": [
    [
      {
        "raw": "sb-promisify@^1.0.0",
        "scope": null,
        "escapedName": "sb-promisify",
        "name": "sb-promisify",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/tmp/apm-install-dir-11752-12689-10luftk.lqi4lvj9k9/node_modules/autocomplete-flow/node_modules/atom-linter"
    ]
  ],
  "_from": "sb-promisify@>=1.0.0 <2.0.0",
  "_id": "sb-promisify@1.3.0",
  "_inCache": true,
  "_location": "/autocomplete-flow/sb-promisify",
  "_nodeVersion": "5.9.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/sb-promisify-1.3.0.tgz_1459313184565_0.3948246203362942"
  },
  "_npmUser": {
    "name": "steelbrain",
    "email": "de.steelbrain@gmail.com"
  },
  "_npmVersion": "3.7.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sb-promisify@^1.0.0",
    "scope": null,
    "escapedName": "sb-promisify",
    "name": "sb-promisify",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/autocomplete-flow/atom-linter",
    "/autocomplete-flow/sb-npm-path"
  ],
  "_resolved": "https://registry.npmjs.org/sb-promisify/-/sb-promisify-1.3.0.tgz",
  "_shasum": "3af6f1fa9ffc833f14de86916eefc1f559b1b051",
  "_shrinkwrap": null,
  "_spec": "sb-promisify@^1.0.0",
  "_where": "/tmp/apm-install-dir-11752-12689-10luftk.lqi4lvj9k9/node_modules/autocomplete-flow/node_modules/atom-linter",
  "author": {
    "name": "steelbrain"
  },
  "bugs": {
    "url": "https://github.com/steelbrain/promisify/issues"
  },
  "dependencies": {},
  "description": "Node module for simple promisification",
  "devDependencies": {
    "babel-preset-steelbrain": "^2.0.1",
    "ucompiler": "^3.1.8",
    "ucompiler-plugin-babel": "^3.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "3af6f1fa9ffc833f14de86916eefc1f559b1b051",
    "tarball": "https://registry.npmjs.org/sb-promisify/-/sb-promisify-1.3.0.tgz"
  },
  "gitHead": "25876f6b5e15edb9e44ddc97dde789025aedc5a8",
  "homepage": "https://github.com/steelbrain/promisify#readme",
  "keywords": [
    "promisify",
    "es6",
    "promise"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "steelbrain",
      "email": "de.steelbrain@gmail.com"
    }
  ],
  "name": "sb-promisify",
  "optionalDependencies": {},
  "readme": "# Promisify\nA node module to help you convert callback-style functions to promises\n\n## Installation\n\n```js\nnpm install --save sb-promisify\n```\n\n## API\n\n```js\nexport function promisifyAll(object, throwError = true)\nexport default function promisify(callback, throwError = true)\n```\n\n## Example Usage\n\nHere's the default behavior\n\n```js\n'use babel'\n\nimport promisify from 'sb-promisify'\nimport fs from 'fs'\n\nconst readFile = promisify(fs.readFile)\n\nreadFile('/etc/passwd').then(function(contents) {\n  console.log(contents.toString('utf8'))\n}, function() {\n  console.error('Unable to read file')\n})\n```\n\nBut if you set throwError to false, here's how it would react\n\n```js\n'use babel'\n\nimport promisify from 'sb-promisify'\nimport fs from 'fs'\n\nconst readFile = promisify(fs.readFile, false)\n\nreadFile('/etc/passwd').then(function(contents) {\n  if (contents === null) {\n    console.error('Unable to read file')\n  } else {\n    console.log(contents.toString('utf8'))\n  }\n})\n```\n\n## License\nThis module is licensed under the terms of MIT License. Check the LICENSE file for more info.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/steelbrain/promisify.git"
  },
  "scripts": {
    "compile": "ucompiler go",
    "test": "apm test"
  },
  "version": "1.3.0"
}
