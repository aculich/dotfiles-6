{
  "_args": [
    [
      {
        "raw": "atom-linter@^4.7.0",
        "scope": null,
        "escapedName": "atom-linter",
        "name": "atom-linter",
        "rawSpec": "^4.7.0",
        "spec": ">=4.7.0 <5.0.0",
        "type": "range"
      },
      "/tmp/d-11752-12689-1moqxst.2d95f2bj4i/package.tgz"
    ]
  ],
  "_from": "atom-linter@>=4.7.0 <5.0.0",
  "_id": "atom-linter@4.7.0",
  "_inCache": true,
  "_location": "/autocomplete-flow/atom-linter",
  "_nodeVersion": "5.10.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/atom-linter-4.7.0.tgz_1460686472327_0.6962483099196106"
  },
  "_npmUser": {
    "name": "steelbrain",
    "email": "de.steelbrain@gmail.com"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "atom-linter@^4.7.0",
    "scope": null,
    "escapedName": "atom-linter",
    "name": "atom-linter",
    "rawSpec": "^4.7.0",
    "spec": ">=4.7.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/autocomplete-flow"
  ],
  "_resolved": "https://registry.npmjs.org/atom-linter/-/atom-linter-4.7.0.tgz",
  "_shasum": "1a3bc5ddadee9840094e198037fdb6ec159a0ba2",
  "_shrinkwrap": null,
  "_spec": "atom-linter@^4.7.0",
  "_where": "/tmp/d-11752-12689-1moqxst.2d95f2bj4i/package.tgz",
  "author": {
    "name": "steelbrain"
  },
  "bugs": {
    "url": "https://github.com/AtomLinter/atom-linter/issues"
  },
  "dependencies": {
    "named-js-regexp": "^1.3.1",
    "sb-exec": "^1.0.4",
    "sb-promisify": "^1.0.0",
    "tmp": "~0.0.28"
  },
  "description": "Helper module for atom linter providers",
  "devDependencies": {
    "babel-eslint": "^6.0.0-beta.6",
    "babel-preset-steelbrain": "^2.0.1",
    "eslint": "^2.4.0",
    "eslint-config-airbnb": "^6.0.2",
    "ucompiler": "^3.0.1",
    "ucompiler-plugin-babel": "^3.0.0",
    "ucompiler-plugin-newline": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "1a3bc5ddadee9840094e198037fdb6ec159a0ba2",
    "tarball": "https://registry.npmjs.org/atom-linter/-/atom-linter-4.7.0.tgz"
  },
  "eslintConfig": {
    "rules": {
      "no-param-reassign": [
        2,
        {
          "props": false
        }
      ],
      "func-names": 0,
      "comma-dangle": 0,
      "no-extra-semi": 1,
      "no-loop-func": 0,
      "semi": [
        2,
        "never"
      ],
      "prefer-arrow-callback": 0
    },
    "extends": "airbnb/base",
    "parser": "babel-eslint",
    "globals": {
      "atom": "true"
    },
    "env": {
      "es6": true,
      "node": true
    }
  },
  "gitHead": "f3b2f609fa5c9b47e4a8b405fb6ee90403f825dd",
  "homepage": "https://github.com/AtomLinter/atom-linter#readme",
  "keywords": [
    "atom",
    "linter"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "arcanemagus",
      "email": "landonabney@gmail.com"
    },
    {
      "name": "steelbrain",
      "email": "fakedemail@email.com"
    }
  ],
  "name": "atom-linter",
  "optionalDependencies": {},
  "readme": "atom-linter\n===========\n\natom-linter is an npm helper module that you can import in your Linter Providers\nand make things easier for yourself.\n\n#### API\n\nFor full documentation of `exec` and `execNode` API, please refer to [`sb-exec README`](https://github.com/steelbrain/exec/blob/master/README.md)\n\n```js\nexport const FindCache: Map\nexport function exec(command: String, args: Array<string> = [], options: Object): Promise\nexport function execNode(filePath: String, args: Array<string> = [], options: Object): Promise\nexport function parse(data: String, regex: String, options: Object = {flags: 'g'}): Array<Linter$Message>\nexport function rangeFromLineNumber(textEditor: TextEditor, lineNumber: Number = 0, colStart: Number = <firstTextColumn>): Array\nexport function find(directory: String, names: String | Array<string>): ?String\nexport function findCached(directory: String, names: String | Array<string>): ?String\nexport function findAsync(directory: String, names: String | Array<string>): Promise<?String>\nexport function findCachedAsync(directory: String, names: String | Array<string>): Promise<?String>\nexport function tempFile<T>(fileName: String, fileContents: String, callback: Function<T>): Promise<T>\nexport function tempFiles<T>(filesNames: Array<{ name: String, contents: String }>, callback: Function<T>): Promise<T>\n```\n\n#### License\n\nThis project is licensed under the terms of MIT License, see the LICENSE file for more info\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/AtomLinter/atom-linter.git"
  },
  "scripts": {
    "compile": "ucompiler go",
    "test": "apm test",
    "watch": "ucompiler watch"
  },
  "version": "4.7.0"
}
