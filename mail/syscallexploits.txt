## Linux System Call Vectors

[chroot]

A chroot() call does not change the current working directory.

Open file descriptors are not changed and may allow access to files
outside of the chroot.

[close]

A successful close does not guarantee that the data has been successfully
saved to disk, as the kernel uses the buffer cache to defer writes.

You shouldn't retry close() on failure.

[execve]

File descriptors without the close-on-exec flag are left open when the
process image is replaced.

[fork]

The child may exit before fork returns (due to process scheduling).

[fsync]

EIO may relate to data written to some other file descriptor on the
same file.

Since Linux 4.13, errors from write-back will be reported to all
file descriptors that might have written the data which triggered
the error.

[mmap]

If the MAP_FIXED flag is specified, and the address is 0 (NULL), then
the mapped address will be 0 (NULL).

MAP_FIXED forcibly removes previous mappings.

[read]

You should read() in a loop, checking errno for EINTR or EAGAIN (if
the fd is async) oh -1 return.

[signal]

The behavior of a process is undefined after it ignores a SIGFPE, SIGILL,
or SIGSEGV signal that was not generated by kill(2) or raise(3) (POSIX).

Only async-signal-safe functions should be called from signal handlers
and none of the stdio functions are signal safe.

[write]

You should write() in a loop, checking errno for EINTR or EAGAIN (if
applicable) oh -1 return.
