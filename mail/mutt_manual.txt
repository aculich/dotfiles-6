The NeoMutt E-Mail Client

Michael Elkins

   <mmee@@ccss..hhmmcc..eedduu>

   version 20180716

   _A_b_s_t_r_a_c_t

   "All mail clients suck. This one just sucks less." -- me, circa 1995
     __________________________________________________________________

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  IInnttrroodduuccttiioonn

        11..  NNeeooMMuutttt  HHoommee  PPaaggee
        22..  MMaaiilliinngg  LLiissttss
        33..  NNeeooMMuutttt  OOnnlliinnee  RReessoouurrcceess
        44..  CCoonnttrriibbuuttiinngg  ttoo  NNeeooMMuutttt
        55..  TTyyppooggrraapphhiiccaall  CCoonnvveennttiioonnss
        66..  CCooppyyrriigghhtt

   22..  GGeettttiinngg  SSttaarrtteedd

        11..  CCoorree  CCoonncceeppttss
        22..  SSccrreeeennss  aanndd  MMeennuuss

              22..11..  IInnddeexx
              22..22..  PPaaggeerr
              22..33..  FFiillee  BBrroowwsseerr
              22..44..  SSiiddeebbaarr
              22..55..  HHeellpp
              22..66..  CCoommppoossee  MMeennuu
              22..77..  AAlliiaass  MMeennuu
              22..88..  AAttttaacchhmmeenntt  MMeennuu

        33..  MMoovviinngg  AArroouunndd  iinn  MMeennuuss
        44..  EEddiittiinngg  IInnppuutt  FFiieellddss

              44..11..  IInnttrroodduuccttiioonn
              44..22..  HHiissttoorryy

        55..  RReeaaddiinngg  MMaaiill

              55..11..  TThhee  MMeessssaaggee  IInnddeexx
              55..22..  TThhee  PPaaggeerr
              55..33..  TThhrreeaaddeedd  MMooddee
              55..44..  MMiisscceellllaanneeoouuss  FFuunnccttiioonnss

        66..  SSeennddiinngg  MMaaiill

              66..11..  IInnttrroodduuccttiioonn
              66..22..  EEddiittiinngg  tthhee  MMeessssaaggee  HHeeaaddeerr
              66..33..  SSeennddiinngg  CCrryyppttooggrraapphhiiccaallllyy  SSiiggnneedd//EEnnccrryypptteedd  MMeessssaaggeess
              66..44..  SSeennddiinngg  FFoorrmmaatt==FFlloowweedd  MMeessssaaggeess

        77..  FFoorrwwaarrddiinngg  aanndd  BBoouunncciinngg  MMaaiill
        88..  PPoossttppoonniinngg  MMaaiill
        99..  LLooggggiinngg

   33..  CCoonnffiigguurraattiioonn

        11..  LLooccaattiioonn  ooff  IInniittiiaalliizzaattiioonn  FFiilleess

              11..11..  LLooccaattiioonn  ooff  ssyysstteemm  ccoonnffiigg  ffiilleess
              11..22..  LLooccaattiioonn  ooff  uusseerr  ccoonnffiigg  ffiilleess
              11..33..  CCoonnffiigg  PPrriioorriittyy

        22..  SSyynnttaaxx  ooff  IInniittiiaalliizzaattiioonn  FFiilleess
        33..  AAddddrreessss  GGrroouuppss
        44..  DDeeffiinniinngg//UUssiinngg  AAlliiaasseess
        55..  CChhaannggiinngg  tthhee  DDeeffaauulltt  KKeeyy  BBiinnddiinnggss

              55..11..  WWaarrnniinnggss  aabboouutt  DDuupplliiccaatteedd  BBiinnddiinnggss

        66..  DDeeffiinniinngg  AAlliiaasseess  ffoorr  CChhaarraacctteerr  SSeettss
        77..  SSeettttiinngg  VVaarriiaabblleess  BBaasseedd  UUppoonn  MMaaiillbbooxx
        88..  KKeeyybbooaarrdd  MMaaccrrooss
        99..  UUssiinngg  CCoolloorr  aanndd  MMoonnoo  VViiddeeoo  AAttttrriibbuutteess
        1100..  MMeessssaaggee  HHeeaaddeerr  DDiissppllaayy

              1100..11..  HHeeaaddeerr  DDiissppllaayy
              1100..22..  SSeelleeccttiinngg  HHeeaaddeerrss
              1100..33..  OOrrddeerriinngg  DDiissppllaayyeedd  HHeeaaddeerrss

        1111..  AAlltteerrnnaattiivvee  AAddddrreesssseess
        1122..  MMaaiilliinngg  LLiissttss
        1133..  UUssiinngg  MMuullttiippllee  SSppooooll  MMaaiillbbooxxeess
        1144..  MMoonniittoorriinngg  IInnccoommiinngg  MMaaiill
        1155..  UUsseerr--DDeeffiinneedd  HHeeaaddeerrss
        1166..  SSppeecciiffyy  DDeeffaauulltt  FFcccc::  aanndd//oorr  SSaavvee  MMaaiillbbooxx
        1177..  CChhaannggee  SSeettttiinnggss  BBaasseedd  UUppoonn  MMeessssaaggee  RReecciippiieennttss
        1188..  CChhaannggee  SSeettttiinnggss  BBeeffoorree  FFoorrmmaattttiinngg  aa  MMeessssaaggee
        1199..  CChhoooossiinngg  tthhee  CCrryyppttooggrraapphhiicc  KKeeyy  ooff  tthhee  RReecciippiieenntt
        2200..  AAddddiinngg  KKeeyy  SSeeqquueenncceess  ttoo  tthhee  KKeeyybbooaarrdd  BBuuffffeerr
        2211..  EExxeeccuuttiinngg  FFuunnccttiioonnss
        2222..  MMeessssaaggee  SSccoorriinngg
        2233..  SSppaamm  DDeetteeccttiioonn
        2244..  SSeettttiinngg  aanndd  QQuueerryyiinngg  VVaarriiaabblleess

              2244..11..  VVaarriiaabbllee  TTyyppeess
              2244..22..  CCoommmmaannddss
              2244..33..  UUsseerr--DDeeffiinneedd  VVaarriiaabblleess
              2244..44..  TTyyppee  CCoonnvveerrssiioonnss

        2255..  RReeaaddiinngg  IInniittiiaalliizzaattiioonn  CCoommmmaannddss  FFrroomm  AAnnootthheerr  FFiillee
        2266..  RReemmoovviinngg  HHooookkss
        2277..  FFoorrmmaatt  SSttrriinnggss

              2277..11..  BBaassiicc  uussaaggee
              2277..22..  CCoonnddiittiioonnaallss
              2277..33..  FFiilltteerrss
              2277..44..  PPaaddddiinngg
              2277..55..  CCoonnddiittiioonnaall  DDaatteess

        2288..  CCoonnttrrooll  aalllloowweedd  hheeaaddeerr  ffiieellddss  iinn  aa  mmaaiillttoo::  UURRLL

   44..  AAddvvaanncceedd  UUssaaggee

        11..  CChhaarraacctteerr  SSeett  HHaannddlliinngg
        22..  RReegguullaarr  EExxpprreessssiioonnss
        33..  PPaatttteerrnnss::  SSeeaarrcchhiinngg,,  LLiimmiittiinngg  aanndd  TTaaggggiinngg

              33..11..  PPaatttteerrnn  MMooddiiffiieerr
              33..22..  SSiimmppllee  SSeeaarrcchheess
              33..33..  NNeessttiinngg  aanndd  BBoooolleeaann  OOppeerraattoorrss
              33..44..  SSeeaarrcchhiinngg  bbyy  DDaattee
              33..55..  GGMMaaiill  PPaatttteerrnnss

        44..  MMaarrkkiinngg  MMeessssaaggeess
        55..  UUssiinngg  TTaaggss
        66..  UUssiinngg  HHooookkss

              66..11..  MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss
              66..22..  MMaaiillbbooxx  MMaattcchhiinngg  iinn  HHooookkss

        77..  MMaannaaggiinngg  tthhee  EEnnvviirroonnmmeenntt
        88..  EExxtteerrnnaall  AAddddrreessss  QQuueerriieess
        99..  MMaaiillbbooxx  FFoorrmmaattss
        1100..  MMaaiillbbooxx  SShhoorrttccuuttss
        1111..  HHaannddlliinngg  MMaaiilliinngg  LLiissttss
        1122..  DDiissppllaayy  MMuunnggiinngg
        1133..  NNeeww  MMaaiill  DDeetteeccttiioonn

              1133..11..  HHooww  NNeeww  MMaaiill  DDeetteeccttiioonn  WWoorrkkss
              1133..22..  PPoolllliinngg  FFoorr  NNeeww  MMaaiill
              1133..33..  CCaallccuullaattiinngg  MMaaiillbbooxx  MMeessssaaggee  CCoouunnttss

        1144..  EEddiittiinngg  TThhrreeaaddss

              1144..11..  LLiinnkkiinngg  TThhrreeaaddss
              1144..22..  BBrreeaakkiinngg  TThhrreeaaddss

        1155..  DDeelliivveerryy  SSttaattuuss  NNoottiiffiiccaattiioonn  ((DDSSNN))  SSuuppppoorrtt
        1166..  SSttaarrtt  aa  WWWWWW  BBrroowwsseerr  oonn  UURRLLss
        1177..  EEcchhooiinngg  TTeexxtt
        1188..  MMiisscceellllaannyy

   55..  NNeeooMMuutttt''ss  MMIIMMEE  SSuuppppoorrtt

        11..  UUssiinngg  MMIIMMEE  iinn  NNeeooMMuutttt

              11..11..  MMIIMMEE  OOvveerrvviieeww
              11..22..  VViieewwiinngg  MMIIMMEE  MMeessssaaggeess  iinn  tthhee  PPaaggeerr
              11..33..  TThhee  AAttttaacchhmmeenntt  MMeennuu
              11..44..  TThhee  CCoommppoossee  MMeennuu

        22..  MMIIMMEE  TTyyppee  CCoonnffiigguurraattiioonn  wwiitthh  mmiimmee..ttyyppeess
        33..  MMIIMMEE  VViieewweerr  CCoonnffiigguurraattiioonn  wwiitthh  MMaaiillccaapp

              33..11..  TThhee  BBaassiiccss  ooff  tthhee  MMaaiillccaapp  FFiillee
              33..22..  SSeeccuurree  UUssee  ooff  MMaaiillccaapp
              33..33..  AAddvvaanncceedd  MMaaiillccaapp  UUssaaggee
              33..44..  EExxaammppllee  MMaaiillccaapp  FFiilleess

        44..  MMIIMMEE  AAuuttoovviieeww
        55..  MMIIMMEE  MMuullttiippaarrtt//AAlltteerrnnaattiivvee

              55..11..  RReeaaddiinngg  MMuullttiippaarrtt//AAlltteerrnnaattiivvee  EEmmaaiillss
              55..22..  CCoommppoossiinngg  MMuullttiippaarrtt//AAlltteerrnnaattiivvee  EEmmaaiillss

        66..  MMIIMMEE  MMuullttiippaarrtt//MMuullttiilliinngguuaall

              66..11..  RReeaaddiinngg  MMuullttiippaarrtt//MMuullttiilliinngguuaall  EEmmaaiillss
              66..22..  CCoommppoossiinngg  MMuullttiippaarrtt//MMuullttiilliinngguuaall  EEmmaaiillss

        77..  AAttttaacchhmmeenntt  SSeeaarrcchhiinngg  aanndd  CCoouunnttiinngg
        88..  MMIIMMEE  LLooookkuupp

   66..  OOppttiioonnaall  FFeeaattuurreess

        11..  GGeenneerraall  NNootteess

              11..11..  EEnnaabblliinngg//DDiissaabblliinngg  FFeeaattuurreess
              11..22..  UURRLL  SSyynnttaaxx

        22..  SSSSLL//TTLLSS  SSuuppppoorrtt
        33..  PPOOPP33  SSuuppppoorrtt
        44..  IIMMAAPP  SSuuppppoorrtt

              44..11..  TThhee  IIMMAAPP  FFoollddeerr  BBrroowwsseerr
              44..22..  AAuutthheennttiiccaattiioonn

        55..  SSMMTTPP  SSuuppppoorrtt
        66..  MMaannaaggiinngg  MMuullttiippllee  AAccccoouunnttss
        77..  LLooccaall  CCaacchhiinngg

              77..11..  HHeeaaddeerr  CCaacchhiinngg
              77..22..  BBooddyy  CCaacchhiinngg
              77..33..  CCaacchhee  DDiirreeccttoorriieess
              77..44..  MMaaiinntteennaannccee

        88..  SSeennddiinngg  AAnnoonnyymmoouuss  MMeessssaaggeess  vviiaa  MMiixxmmaasstteerr
        99..  AAttttaacchh  HHeeaaddeerrss  CCoolloorr  FFeeaattuurree

              99..11..  SSuuppppoorrtt
              99..22..  IInnttrroodduuccttiioonn
              99..33..  UUssaaggee
              99..44..  nneeoommuuttttrrcc
              99..55..  SSeeee  AAllssoo
              99..66..  KKnnoowwnn  BBuuggss
              99..77..  CCrreeddiittss

        1100..  CCoommppoossee  ttoo  SSeennddeerr  FFeeaattuurree

              1100..11..  SSuuppppoorrtt
              1100..22..  IInnttrroodduuccttiioonn
              1100..33..  FFuunnccttiioonnss
              1100..44..  nneeoommuuttttrrcc
              1100..55..  KKnnoowwnn  BBuuggss
              1100..66..  CCrreeddiittss

        1111..  CCoommpprreesssseedd  FFoollddeerrss  FFeeaattuurree

              1111..11..  SSuuppppoorrtt
              1111..22..  IInnttrroodduuccttiioonn
              1111..33..  CCoommmmaannddss
              1111..44..  nneeoommuuttttrrcc
              1111..55..  SSeeee  AAllssoo
              1111..66..  CCrreeddiittss

        1122..  CCoonnddiittiioonnaall  DDaatteess  FFeeaattuurree

              1122..11..  SSuuppppoorrtt
              1122..22..  IInnttrroodduuccttiioonn
              1122..33..  VVaarriiaabblleess
              1122..44..  nneeoommuuttttrrcc
              1122..55..  SSeeee  AAllssoo
              1122..66..  KKnnoowwnn  BBuuggss
              1122..77..  CCrreeddiittss

        1133..  EEnnccrryypptt--ttoo--SSeellff  FFeeaattuurree

              1133..11..  SSuuppppoorrtt
              1133..22..  IInnttrroodduuccttiioonn
              1133..33..  VVaarriiaabblleess
              1133..44..  nneeoommuuttttrrcc
              1133..55..  KKnnoowwnn  BBuuggss
              1133..66..  CCrreeddiittss

        1144..  FFmmeemmooppeenn  FFeeaattuurree

              1144..11..  SSuuppppoorrtt
              1144..22..  IInnttrroodduuccttiioonn
              1144..33..  SSeeee  AAllssoo
              1144..44..  KKnnoowwnn  BBuuggss
              1144..55..  CCrreeddiittss

        1155..  FFoorrggootttteenn  AAttttaacchhmmeenntt  FFeeaattuurree

              1155..11..  SSuuppppoorrtt
              1155..22..  IInnttrroodduuccttiioonn
              1155..33..  VVaarriiaabblleess
              1155..44..  nneeoommuuttttrrcc
              1155..55..  SSeeee  AAllssoo
              1155..66..  KKnnoowwnn  BBuuggss
              1155..77..  CCrreeddiittss

        1166..  GGlloobbaall  HHooookkss

              1166..11..  IInnttrroodduuccttiioonn
              1166..22..  CCoommmmaannddss
              1166..33..  nneeoommuuttttrrcc
              1166..44..  SSeeee  AAllssoo
              1166..55..  KKnnoowwnn  BBuuggss
              1166..66..  CCrreeddiittss

        1177..  IIffddeeff  FFeeaattuurree

              1177..11..  SSuuppppoorrtt
              1177..22..  IInnttrroodduuccttiioonn
              1177..33..  CCoommmmaannddss
              1177..44..  nneeoommuuttttrrcc
              1177..55..  KKnnoowwnn  BBuuggss
              1177..66..  CCrreeddiittss

        1188..  IInnddeexx  CCoolloorr  FFeeaattuurree

              1188..11..  SSuuppppoorrtt
              1188..22..  IInnttrroodduuccttiioonn
              1188..33..  CCoolloorrss
              1188..44..  nneeoommuuttttrrcc
              1188..55..  SSeeee  AAllssoo
              1188..66..  KKnnoowwnn  BBuuggss
              1188..77..  CCrreeddiittss

        1199..  IInniittiiaallss  EExxppaannddoo  FFeeaattuurree

              1199..11..  SSuuppppoorrtt
              1199..22..  IInnttrroodduuccttiioonn
              1199..33..  VVaarriiaabblleess
              1199..44..  nneeoommuuttttrrcc
              1199..55..  SSeeee  AAllssoo
              1199..66..  KKnnoowwnn  BBuuggss
              1199..77..  CCrreeddiittss

        2200..  KKyyoottoo  CCaabbiinneett  FFeeaattuurree

              2200..11..  SSuuppppoorrtt
              2200..22..  IInnttrroodduuccttiioonn
              2200..33..  SSeeee  AAllssoo
              2200..44..  KKnnoowwnn  BBuuggss
              2200..55..  CCrreeddiittss

        2211..  LLiimmiitt  CCuurrrreenntt  TThhrreeaadd  FFeeaattuurree

              2211..11..  SSuuppppoorrtt
              2211..22..  IInnttrroodduuccttiioonn
              2211..33..  FFuunnccttiioonnss
              2211..44..  nneeoommuuttttrrcc
              2211..55..  KKnnoowwnn  BBuuggss
              2211..66..  CCrreeddiittss

        2222..  LLMMDDBB  FFeeaattuurree

              2222..11..  SSuuppppoorrtt
              2222..22..  IInnttrroodduuccttiioonn
              2222..33..  SSeeee  AAllssoo
              2222..44..  KKnnoowwnn  BBuuggss
              2222..55..  CCrreeddiittss

        2233..  MMuullttiippllee  FFCCCC  FFeeaattuurree

              2233..11..  SSuuppppoorrtt
              2233..22..  IInnttrroodduuccttiioonn
              2233..33..  SSeeee  AAllssoo
              2233..44..  KKnnoowwnn  BBuuggss
              2233..55..  CCrreeddiittss

        2244..  NNeesstteedd  IIff  FFeeaattuurree

              2244..11..  SSuuppppoorrtt
              2244..22..  IInnttrroodduuccttiioonn
              2244..33..  VVaarriiaabblleess
              2244..44..  nneeoommuuttttrrcc
              2244..55..  SSeeee  AAllssoo
              2244..66..  KKnnoowwnn  BBuuggss
              2244..77..  CCrreeddiittss

        2255..  NNeeww  MMaaiill  FFeeaattuurree

              2255..11..  SSuuppppoorrtt
              2255..22..  IInnttrroodduuccttiioonn
              2255..33..  VVaarriiaabblleess
              2255..44..  nneeoommuuttttrrcc
              2255..55..  SSeeee  AAllssoo
              2255..66..  KKnnoowwnn  BBuuggss
              2255..77..  CCrreeddiittss

        2266..  NNNNTTPP  FFeeaattuurree

              2266..11..  SSuuppppoorrtt
              2266..22..  IInnttrroodduuccttiioonn
              2266..33..  VVaarriiaabblleess
              2266..44..  FFuunnccttiioonnss
              2266..55..  nneeoommuuttttrrcc
              2266..66..  KKnnoowwnn  BBuuggss
              2266..77..  CCrreeddiittss

        2277..  CCuussttoomm  bbaacckkeenndd  bbaasseedd  TTaaggss  FFeeaattuurree

              2277..11..  SSuuppppoorrtt
              2277..22..  IInnttrroodduuccttiioonn
              2277..33..  VVaarriiaabblleess
              2277..44..  FFuunnccttiioonnss
              2277..55..  CCoommmmaannddss
              2277..66..  CCoolloorrss
              2277..77..  nneeoommuuttttrrcc
              2277..88..  CCrreeddiittss

        2288..  NNoottmmuucchh  FFeeaattuurree

              2288..11..  SSuuppppoorrtt
              2288..22..  IInnttrroodduuccttiioonn
              2288..33..  UUssiinngg  NNoottmmuucchh
              2288..44..  VVaarriiaabblleess
              2288..55..  FFuunnccttiioonnss
              2288..66..  CCoommmmaannddss
              2288..77..  CCoolloorrss
              2288..88..  nneeoommuuttttrrcc
              2288..99..  SSeeee  AAllssoo
              2288..1100..  KKnnoowwnn  BBuuggss
              2288..1111..  CCrreeddiittss

        2299..  PPrrooggrreessss  BBaarr  FFeeaattuurree

              2299..11..  SSuuppppoorrtt
              2299..22..  IInnttrroodduuccttiioonn
              2299..33..  CCoolloorrss
              2299..44..  nneeoommuuttttrrcc
              2299..55..  SSeeee  AAllssoo
              2299..66..  KKnnoowwnn  BBuuggss
              2299..77..  CCrreeddiittss

        3300..  QQuuaassii--DDeelleettee  FFeeaattuurree

              3300..11..  SSuuppppoorrtt
              3300..22..  IInnttrroodduuccttiioonn
              3300..33..  FFuunnccttiioonnss
              3300..44..  nneeoommuuttttrrcc
              3300..55..  SSeeee  AAllssoo
              3300..66..  KKnnoowwnn  BBuuggss
              3300..77..  CCrreeddiittss

        3311..  RReeppllyy  WWiitthh  XX--OOrriiggiinnaall--TToo  FFeeaattuurree

              3311..11..  SSuuppppoorrtt
              3311..22..  IInnttrroodduuccttiioonn
              3311..33..  VVaarriiaabblleess
              3311..44..  nneeoommuuttttrrcc
              3311..55..  CCrreeddiittss

        3322..  SSeennssiibbllee  BBrroowwsseerr  FFeeaattuurree

              3322..11..  SSuuppppoorrtt
              3322..22..  IInnttrroodduuccttiioonn
              3322..33..  SSeeee  AAllssoo
              3322..44..  KKnnoowwnn  BBuuggss
              3322..55..  CCrreeddiittss

        3333..  SSiiddeebbaarr  FFeeaattuurree

              3333..11..  SSuuppppoorrtt
              3333..22..  IInnttrroodduuccttiioonn
              3333..33..  VVaarriiaabblleess
              3333..44..  FFuunnccttiioonnss
              3333..55..  CCoommmmaannddss
              3333..66..  CCoolloorrss
              3333..77..  SSoorrtt
              3333..88..  nneeoommuuttttrrcc
              3333..99..  SSeeee  AAllssoo
              3333..1100..  KKnnoowwnn  BBuuggss
              3333..1111..  CCrreeddiittss

        3344..  SSkkiipp  QQuuootteedd  FFeeaattuurree

              3344..11..  SSuuppppoorrtt
              3344..22..  IInnttrroodduuccttiioonn
              3344..33..  VVaarriiaabblleess
              3344..44..  nneeoommuuttttrrcc
              3344..55..  KKnnoowwnn  BBuuggss
              3344..66..  CCrreeddiittss

        3355..  SSttaattuuss  CCoolloorr  FFeeaattuurree

              3355..11..  SSuuppppoorrtt
              3355..22..  IInnttrroodduuccttiioonn
              3355..33..  CCoommmmaannddss
              3355..44..  CCoolloorrss
              3355..55..  nneeoommuuttttrrcc
              3355..66..  SSeeee  AAllssoo
              3355..77..  KKnnoowwnn  BBuuggss
              3355..88..  CCrreeddiittss

        3366..  TTLLSS--SSNNII  FFeeaattuurree

              3366..11..  SSuuppppoorrtt
              3366..22..  IInnttrroodduuccttiioonn
              3366..33..  KKnnoowwnn  BBuuggss
              3366..44..  CCrreeddiittss

        3377..  TTrraasshh  FFoollddeerr  FFeeaattuurree

              3377..11..  SSuuppppoorrtt
              3377..22..  IInnttrroodduuccttiioonn
              3377..33..  VVaarriiaabblleess
              3377..44..  FFuunnccttiioonnss
              3377..55..  nneeoommuuttttrrcc
              3377..66..  SSeeee  AAllssoo
              3377..77..  KKnnoowwnn  BBuuggss
              3377..88..  CCrreeddiittss

   77..  SSeeccuurriittyy  CCoonnssiiddeerraattiioonnss

        11..  PPaasssswwoorrddss
        22..  TTeemmppoorraarryy  FFiilleess
        33..  IInnffoorrmmaattiioonn  LLeeaakkss

              33..11..  MMeessssaaggee--IIdd::  hheeaaddeerrss
              33..22..  mmaaiillttoo::--ssttyyllee  LLiinnkkss

        44..  EExxtteerrnnaall  AApppplliiccaattiioonnss

   88..  PPeerrffoorrmmaannccee  TTuunniinngg

        11..  RReeaaddiinngg  aanndd  WWrriittiinngg  MMaaiillbbooxxeess
        22..  RReeaaddiinngg  MMeessssaaggeess  ffrroomm  RReemmoottee  FFoollddeerrss
        33..  SSeeaarrcchhiinngg  aanndd  LLiimmiittiinngg

   99..  RReeffeerreennccee

        11..  CCoommmmaanndd--LLiinnee  OOppttiioonnss
        22..  CCoonnffiigguurraattiioonn  CCoommmmaannddss
        33..  CCoonnffiigguurraattiioonn  VVaarriiaabblleess

              33..11..  aabboorrtt__nnooaattttaacchh
              33..22..  aabboorrtt__nnooaattttaacchh__rreeggeexx
              33..33..  aabboorrtt__nnoossuubbjjeecctt
              33..44..  aabboorrtt__uunnmmooddiiffiieedd
              33..55..  aalliiaass__ffiillee
              33..66..  aalliiaass__ffoorrmmaatt
              33..77..  aallllooww__88bbiitt
              33..88..  aallllooww__aannssii
              33..99..  aarrrrooww__ccuurrssoorr
              33..1100..  aasscciiii__cchhaarrss
              33..1111..  aasskk__ffoollllooww__uupp
              33..1122..  aasskk__xx__ccoommmmeenntt__ttoo
              33..1133..  aasskkbbcccc
              33..1144..  aasskkcccc
              33..1155..  aassssuummeedd__cchhaarrsseett
              33..1166..  aattttaacchh__cchhaarrsseett
              33..1177..  aattttaacchh__ffoorrmmaatt
              33..1188..  aattttaacchh__sseepp
              33..1199..  aattttaacchh__sspplliitt
              33..2200..  aattttrriibbuuttiioonn
              33..2211..  aattttrriibbuuttiioonn__llooccaallee
              33..2222..  aauuttoo__ttaagg
              33..2233..  aauuttooeeddiitt
              33..2244..  bbeeeepp
              33..2255..  bbeeeepp__nneeww
              33..2266..  bboouunnccee
              33..2277..  bboouunnccee__ddeelliivveerreedd
              33..2288..  bbrraaiillllee__ffrriieennddllyy
              33..2299..  bbrroowwsseerr__aabbbbrreevviiaattee__mmaaiillbbooxxeess
              33..3300..  ccaattcchhuupp__nneewwssggrroouupp
              33..3311..  cceerrttiiffiiccaattee__ffiillee
              33..3322..  cchhaannggee__ffoollddeerr__nneexxtt
              33..3333..  cchhaarrsseett
              33..3344..  cchheecckk__mmbbooxx__ssiizzee
              33..3355..  cchheecckk__nneeww
              33..3366..  ccoollllaappssee__aallll
              33..3377..  ccoollllaappssee__ffllaaggggeedd
              33..3388..  ccoollllaappssee__uunnrreeaadd
              33..3399..  ccoommppoossee__ffoorrmmaatt
              33..4400..  ccoonnffiigg__cchhaarrsseett
              33..4411..  ccoonnffiirrmmaappppeenndd
              33..4422..  ccoonnffiirrmmccrreeaattee
              33..4433..  ccoonnnneecctt__ttiimmeeoouutt
              33..4444..  ccoonntteenntt__ttyyppee
              33..4455..  ccooppyy
              33..4466..  ccrryypptt__aauuttooeennccrryypptt
              33..4477..  ccrryypptt__aauuttooppggpp
              33..4488..  ccrryypptt__aauuttoossiiggnn
              33..4499..  ccrryypptt__aauuttoossmmiimmee
              33..5500..  ccrryypptt__ccoonnffiirrmmhhooookk
              33..5511..  ccrryypptt__ooppppoorrttuunniissttiicc__eennccrryypptt
              33..5522..  ccrryypptt__rreeppllyyeennccrryypptt
              33..5533..  ccrryypptt__rreeppllyyssiiggnn
              33..5544..  ccrryypptt__rreeppllyyssiiggnneennccrryypptteedd
              33..5555..  ccrryypptt__ttiimmeessttaammpp
              33..5566..  ccrryypptt__uussee__ggppggmmee
              33..5577..  ccrryypptt__uussee__ppkkaa
              33..5588..  ccrryypptt__vveerriiffyy__ssiigg
              33..5599..  ddaattee__ffoorrmmaatt
              33..6600..  ddeebbuugg__ffiillee
              33..6611..  ddeebbuugg__lleevveell
              33..6622..  ddeeffaauulltt__hhooookk
              33..6633..  ddeelleettee
              33..6644..  ddeelleettee__uunnttaagg
              33..6655..  ddiiggeesstt__ccoollllaappssee
              33..6666..  ddiissppllaayy__ffiilltteerr
              33..6677..  ddssnn__nnoottiiffyy
              33..6688..  ddssnn__rreettuurrnn
              33..6699..  dduupplliiccaattee__tthhrreeaaddss
              33..7700..  eeddiitt__hheeaaddeerrss
              33..7711..  eeddiittoorr
              33..7722..  eemmppttyy__ssuubbjjeecctt
              33..7733..  eennccooddee__ffrroomm
              33..7744..  eennttrrooppyy__ffiillee
              33..7755..  eennvveellooppee__ffrroomm__aaddddrreessss
              33..7766..  eessccaappee
              33..7777..  ffaasstt__rreeppllyy
              33..7788..  ffcccc__aattttaacchh
              33..7799..  ffcccc__cclleeaarr
              33..8800..  ffllaagg__cchhaarrss
              33..8811..  ffllaagg__ssaaffee
              33..8822..  ffoollddeerr
              33..8833..  ffoollddeerr__ffoorrmmaatt
              33..8844..  ffoolllloowwuupp__ttoo
              33..8855..  ffoolllloowwuupp__ttoo__ppoosstteerr
              33..8866..  ffoorrccee__nnaammee
              33..8877..  ffoorrwwaarrdd__aattttrriibbuuttiioonn__iinnttrroo
              33..8888..  ffoorrwwaarrdd__aattttrriibbuuttiioonn__ttrraaiilleerr
              33..8899..  ffoorrwwaarrdd__ddeeccooddee
              33..9900..  ffoorrwwaarrdd__ddeeccrryypptt
              33..9911..  ffoorrwwaarrdd__eeddiitt
              33..9922..  ffoorrwwaarrdd__ffoorrmmaatt
              33..9933..  ffoorrwwaarrdd__qquuoottee
              33..9944..  ffoorrwwaarrdd__rreeffeerreenncceess
              33..9955..  ffrroomm
              33..9966..  ffrroomm__cchhaarrss
              33..9977..  ggeeccooss__mmaasskk
              33..9988..  ggrroouupp__iinnddeexx__ffoorrmmaatt
              33..9999..  hhddrrss
              33..110000..  hheeaaddeerr
              33..110011..  hheeaaddeerr__ccaacchhee
              33..110022..  hheeaaddeerr__ccaacchhee__bbaacckkeenndd
              33..110033..  hheeaaddeerr__ccaacchhee__ccoommpprreessss
              33..110044..  hheeaaddeerr__ccaacchhee__ppaaggeessiizzee
              33..110055..  hheeaaddeerr__ccoolloorr__ppaarrttiiaall
              33..110066..  hheellpp
              33..110077..  hhiiddddeenn__hhoosstt
              33..110088..  hhiiddddeenn__ttaaggss
              33..110099..  hhiiddee__lliimmiitteedd
              33..111100..  hhiiddee__mmiissssiinngg
              33..111111..  hhiiddee__tthhrreeaadd__ssuubbjjeecctt
              33..111122..  hhiiddee__ttoopp__lliimmiitteedd
              33..111133..  hhiiddee__ttoopp__mmiissssiinngg
              33..111144..  hhiissttoorryy
              33..111155..  hhiissttoorryy__ffiillee
              33..111166..  hhiissttoorryy__rreemmoovvee__dduuppss
              33..111177..  hhoonnoorr__ddiissppoossiittiioonn
              33..111188..  hhoonnoorr__ffoolllloowwuupp__ttoo
              33..111199..  hhoossttnnaammee
              33..112200..  iiddnn__ddeeccooddee
              33..112211..  iiddnn__eennccooddee
              33..112222..  iiggnnoorree__lliisstt__rreeppllyy__ttoo
              33..112233..  iimmaapp__aauutthheennttiiccaattoorrss
              33..112244..  iimmaapp__cchheecckk__ssuubbssccrriibbeedd
              33..112255..  iimmaapp__ddeelliimm__cchhaarrss
              33..112266..  iimmaapp__hheeaaddeerrss
              33..112277..  iimmaapp__iiddllee
              33..112288..  iimmaapp__kkeeeeppaalliivvee
              33..112299..  iimmaapp__lliisstt__ssuubbssccrriibbeedd
              33..113300..  iimmaapp__llooggiinn
              33..113311..  iimmaapp__ppaassss
              33..113322..  iimmaapp__ppaassssiivvee
              33..113333..  iimmaapp__ppeeeekk
              33..113344..  iimmaapp__ppiippeelliinnee__ddeepptthh
              33..113355..  iimmaapp__ppoollll__ttiimmeeoouutt
              33..113366..  iimmaapp__sseerrvveerrnnooiissee
              33..113377..  iimmaapp__uusseerr
              33..113388..  iimmpplliicciitt__aauuttoovviieeww
              33..113399..  iinncclluuddee
              33..114400..  iinncclluuddee__oonnllyyffiirrsstt
              33..114411..  iinnddeenntt__ssttrriinngg
              33..114422..  iinnddeexx__ffoorrmmaatt
              33..114433..  iinneewwss
              33..114444..  iissppeellll
              33..114455..  kkeeeepp__ffllaaggggeedd
              33..114466..  mmaaiill__cchheecckk
              33..114477..  mmaaiill__cchheecckk__rreecceenntt
              33..114488..  mmaaiill__cchheecckk__ssttaattss
              33..114499..  mmaaiill__cchheecckk__ssttaattss__iinntteerrvvaall
              33..115500..  mmaaiillccaapp__ppaatthh
              33..115511..  mmaaiillccaapp__ssaanniittiizzee
              33..115522..  mmaaiillddiirr__cchheecckk__ccuurr
              33..115533..  mmaaiillddiirr__hheeaaddeerr__ccaacchhee__vveerriiffyy
              33..115544..  mmaaiillddiirr__ttrraasshh
              33..115555..  mmaarrkk__mmaaccrroo__pprreeffiixx
              33..115566..  mmaarrkk__oolldd
              33..115577..  mmaarrkkeerrss
              33..115588..  mmaasskk
              33..115599..  mmbbooxx
              33..116600..  mmbbooxx__ttyyppee
              33..116611..  mmeennuu__ccoonntteexxtt
              33..116622..  mmeennuu__mmoovvee__ooffff
              33..116633..  mmeennuu__ssccrroollll
              33..116644..  mmeessssaaggee__ccaacchhee__cclleeaann
              33..116655..  mmeessssaaggee__ccaacchheeddiirr
              33..116666..  mmeessssaaggee__ffoorrmmaatt
              33..116677..  mmeettaa__kkeeyy
              33..116688..  mmeettoooo
              33..116699..  mmhh__ppuurrggee
              33..117700..  mmhh__sseeqq__ffllaaggggeedd
              33..117711..  mmhh__sseeqq__rreepplliieedd
              33..117722..  mmhh__sseeqq__uunnsseeeenn
              33..117733..  mmiimmee__ffoorrwwaarrdd
              33..117744..  mmiimmee__ffoorrwwaarrdd__ddeeccooddee
              33..117755..  mmiimmee__ffoorrwwaarrdd__rreesstt
              33..117766..  mmiimmee__ssuubbjjeecctt
              33..117777..  mmiimmee__ttyyppee__qquueerryy__ccoommmmaanndd
              33..117788..  mmiimmee__ttyyppee__qquueerryy__ffiirrsstt
              33..117799..  mmoovvee
              33..118800..  nnaarrrrooww__ttrreeee
              33..118811..  nneett__iinncc
              33..118822..  nneeww__mmaaiill__ccoommmmaanndd
              33..118833..  nneewwss__ccaacchhee__ddiirr
              33..118844..  nneewwss__sseerrvveerr
              33..118855..  nneewwssggrroouuppss__cchhaarrsseett
              33..118866..  nneewwssrrcc
              33..118877..  nnmm__ddbb__lliimmiitt
              33..118888..  nnmm__ddeeffaauulltt__uurrii
              33..118899..  nnmm__eexxcclluuddee__ttaaggss
              33..119900..  nnmm__ooppeenn__ttiimmeeoouutt
              33..119911..  nnmm__qquueerryy__ttyyppee
              33..119922..  nnmm__qquueerryy__wwiinnddooww__ccuurrrreenntt__ppoossiittiioonn
              33..119933..  nnmm__qquueerryy__wwiinnddooww__ccuurrrreenntt__sseeaarrcchh
              33..119944..  nnmm__qquueerryy__wwiinnddooww__dduurraattiioonn
              33..119955..  nnmm__qquueerryy__wwiinnddooww__ttiimmeebbaassee
              33..119966..  nnmm__rreeccoorrdd
              33..119977..  nnmm__rreeccoorrdd__ttaaggss
              33..119988..  nnmm__uunnrreeaadd__ttaagg
              33..119999..  nnnnttpp__aauutthheennttiiccaattoorrss
              33..220000..  nnnnttpp__ccoonntteexxtt
              33..220011..  nnnnttpp__lliissttggrroouupp
              33..220022..  nnnnttpp__llooaadd__ddeessccrriippttiioonn
              33..220033..  nnnnttpp__ppaassss
              33..220044..  nnnnttpp__ppoollll
              33..220055..  nnnnttpp__uusseerr
              33..220066..  ppaaggeerr
              33..220077..  ppaaggeerr__ccoonntteexxtt
              33..220088..  ppaaggeerr__ffoorrmmaatt
              33..220099..  ppaaggeerr__iinnddeexx__lliinneess
              33..221100..  ppaaggeerr__ssttoopp
              33..221111..  ppggpp__aauuttoo__ddeeccooddee
              33..221122..  ppggpp__aauuttooiinnlliinnee
              33..221133..  ppggpp__cchheecckk__eexxiitt
              33..221144..  ppggpp__cchheecckk__ggppgg__ddeeccrryypptt__ssttaattuuss__ffdd
              33..221155..  ppggpp__cclleeaarrssiiggnn__ccoommmmaanndd
              33..221166..  ppggpp__ddeeccooddee__ccoommmmaanndd
              33..221177..  ppggpp__ddeeccrryypptt__ccoommmmaanndd
              33..221188..  ppggpp__ddeeccrryyppttiioonn__ookkaayy
              33..221199..  ppggpp__ddeeffaauulltt__kkeeyy
              33..222200..  ppggpp__eennccrryypptt__oonnllyy__ccoommmmaanndd
              33..222211..  ppggpp__eennccrryypptt__ssiiggnn__ccoommmmaanndd
              33..222222..  ppggpp__eennttrryy__ffoorrmmaatt
              33..222233..  ppggpp__eexxppoorrtt__ccoommmmaanndd
              33..222244..  ppggpp__ggeettkkeeyyss__ccoommmmaanndd
              33..222255..  ppggpp__ggoooodd__ssiiggnn
              33..222266..  ppggpp__iiggnnoorree__ssuubbkkeeyyss
              33..222277..  ppggpp__iimmppoorrtt__ccoommmmaanndd
              33..222288..  ppggpp__lliisstt__ppuubbrriinngg__ccoommmmaanndd
              33..222299..  ppggpp__lliisstt__sseeccrriinngg__ccoommmmaanndd
              33..223300..  ppggpp__lloonngg__iiddss
              33..223311..  ppggpp__mmiimmee__aauuttoo
              33..223322..  ppggpp__rreeppllyyiinnlliinnee
              33..223333..  ppggpp__rreettaaiinnaabbllee__ssiiggss
              33..223344..  ppggpp__sseellff__eennccrryypptt
              33..223355..  ppggpp__sshhooww__uunnuussaabbllee
              33..223366..  ppggpp__ssiiggnn__aass
              33..223377..  ppggpp__ssiiggnn__ccoommmmaanndd
              33..223388..  ppggpp__ssoorrtt__kkeeyyss
              33..223399..  ppggpp__ssttrriicctt__eenncc
              33..224400..  ppggpp__ttiimmeeoouutt
              33..224411..  ppggpp__uussee__ggppgg__aaggeenntt
              33..224422..  ppggpp__vveerriiffyy__ccoommmmaanndd
              33..224433..  ppggpp__vveerriiffyy__kkeeyy__ccoommmmaanndd
              33..224444..  ppiippee__ddeeccooddee
              33..224455..  ppiippee__sseepp
              33..224466..  ppiippee__sspplliitt
              33..224477..  ppoopp__aauutthh__ttrryy__aallll
              33..224488..  ppoopp__aauutthheennttiiccaattoorrss
              33..224499..  ppoopp__cchheecckkiinntteerrvvaall
              33..225500..  ppoopp__ddeelleettee
              33..225511..  ppoopp__hhoosstt
              33..225522..  ppoopp__llaasstt
              33..225533..  ppoopp__ppaassss
              33..225544..  ppoopp__rreeccoonnnneecctt
              33..225555..  ppoopp__uusseerr
              33..225566..  ppoosstt__iinnddeenntt__ssttrriinngg
              33..225577..  ppoosstt__mmooddeerraatteedd
              33..225588..  ppoossttppoonnee
              33..225599..  ppoossttppoonnee__eennccrryypptt
              33..226600..  ppoossttppoonnee__eennccrryypptt__aass
              33..226611..  ppoossttppoonneedd
              33..226622..  pprreeccoonnnneecctt
              33..226633..  pprreeffeerrrreedd__llaanngguuaaggeess
              33..226644..  pprriinntt
              33..226655..  pprriinntt__ccoommmmaanndd
              33..226666..  pprriinntt__ddeeccooddee
              33..226677..  pprriinntt__sspplliitt
              33..226688..  pprroommpptt__aafftteerr
              33..226699..  qquueerryy__ccoommmmaanndd
              33..227700..  qquueerryy__ffoorrmmaatt
              33..227711..  qquuiitt
              33..227722..  qquuoottee__rreeggeexx
              33..227733..  rreeaadd__iinncc
              33..227744..  rreeaadd__oonnllyy
              33..227755..  rreeaallnnaammee
              33..227766..  rreeccaallll
              33..227777..  rreeccoorrdd
              33..227788..  rreeffllooww__ssppaaccee__qquuootteess
              33..227799..  rreeffllooww__tteexxtt
              33..228800..  rreeffllooww__wwrraapp
              33..228811..  rreeppllyy__rreeggeexx
              33..228822..  rreeppllyy__sseellff
              33..228833..  rreeppllyy__ttoo
              33..228844..  rreeppllyy__wwiitthh__xxoorriigg
              33..228855..  rreessoollvvee
              33..228866..  rreessuummee__ddrraafftt__ffiilleess
              33..228877..  rreessuummee__eeddiitteedd__ddrraafftt__ffiilleess
              33..228888..  rreevveerrssee__aalliiaass
              33..228899..  rreevveerrssee__nnaammee
              33..229900..  rreevveerrssee__rreeaallnnaammee
              33..229911..  rrffcc22004477__ppaarraammeetteerrss
              33..229922..  ssaavvee__aaddddrreessss
              33..229933..  ssaavvee__eemmppttyy
              33..229944..  ssaavvee__hhiissttoorryy
              33..229955..  ssaavvee__nnaammee
              33..229966..  ssaavvee__uunnssuubbssccrriibbeedd
              33..229977..  ssccoorree
              33..229988..  ssccoorree__tthhrreesshhoolldd__ddeelleettee
              33..229999..  ssccoorree__tthhrreesshhoolldd__ffllaagg
              33..330000..  ssccoorree__tthhrreesshhoolldd__rreeaadd
              33..330011..  sseeaarrcchh__ccoonntteexxtt
              33..330022..  sseenndd__cchhaarrsseett
              33..330033..  sseennddmmaaiill
              33..330044..  sseennddmmaaiill__wwaaiitt
              33..330055..  sshheellll
              33..330066..  sshhooww__mmuullttiippaarrtt__aalltteerrnnaattiivvee
              33..330077..  sshhooww__nneeww__nneewwss
              33..330088..  sshhooww__oonnllyy__uunnrreeaadd
              33..330099..  ssiiddeebbaarr__ccoommppoonneenntt__ddeepptthh
              33..331100..  ssiiddeebbaarr__ddeelliimm__cchhaarrss
              33..331111..  ssiiddeebbaarr__ddiivviiddeerr__cchhaarr
              33..331122..  ssiiddeebbaarr__ffoollddeerr__iinnddeenntt
              33..331133..  ssiiddeebbaarr__ffoorrmmaatt
              33..331144..  ssiiddeebbaarr__iinnddeenntt__ssttrriinngg
              33..331155..  ssiiddeebbaarr__nneeww__mmaaiill__oonnllyy
              33..331166..  ssiiddeebbaarr__nneexxtt__nneeww__wwrraapp
              33..331177..  ssiiddeebbaarr__oonn__rriigghhtt
              33..331188..  ssiiddeebbaarr__sshhoorrtt__ppaatthh
              33..331199..  ssiiddeebbaarr__ssoorrtt__mmeetthhoodd
              33..332200..  ssiiddeebbaarr__vviissiibbllee
              33..332211..  ssiiddeebbaarr__wwiiddtthh
              33..332222..  ssiigg__ddaasshheess
              33..332233..  ssiigg__oonn__ttoopp
              33..332244..  ssiiggnnaattuurree
              33..332255..  ssiimmppllee__sseeaarrcchh
              33..332266..  sskkiipp__qquuootteedd__ooffffsseett
              33..332277..  sslleeeepp__ttiimmee
              33..332288..  ssmmaarrtt__wwrraapp
              33..332299..  ssmmiilleeyyss
              33..333300..  ssmmiimmee__aasskk__cceerrtt__llaabbeell
              33..333311..  ssmmiimmee__ccaa__llooccaattiioonn
              33..333322..  ssmmiimmee__cceerrttiiffiiccaatteess
              33..333333..  ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd
              33..333344..  ssmmiimmee__ddeeccrryypptt__uussee__ddeeffaauulltt__kkeeyy
              33..333355..  ssmmiimmee__ddeeffaauulltt__kkeeyy
              33..333366..  ssmmiimmee__eennccrryypptt__ccoommmmaanndd
              33..333377..  ssmmiimmee__eennccrryypptt__wwiitthh
              33..333388..  ssmmiimmee__ggeett__cceerrtt__ccoommmmaanndd
              33..333399..  ssmmiimmee__ggeett__cceerrtt__eemmaaiill__ccoommmmaanndd
              33..334400..  ssmmiimmee__ggeett__ssiiggnneerr__cceerrtt__ccoommmmaanndd
              33..334411..  ssmmiimmee__iimmppoorrtt__cceerrtt__ccoommmmaanndd
              33..334422..  ssmmiimmee__iiss__ddeeffaauulltt
              33..334433..  ssmmiimmee__kkeeyyss
              33..334444..  ssmmiimmee__ppkk77oouutt__ccoommmmaanndd
              33..334455..  ssmmiimmee__sseellff__eennccrryypptt
              33..334466..  ssmmiimmee__ssiiggnn__aass
              33..334477..  ssmmiimmee__ssiiggnn__ccoommmmaanndd
              33..334488..  ssmmiimmee__ssiiggnn__ddiiggeesstt__aallgg
              33..334499..  ssmmiimmee__ttiimmeeoouutt
              33..335500..  ssmmiimmee__vveerriiffyy__ccoommmmaanndd
              33..335511..  ssmmiimmee__vveerriiffyy__ooppaaqquuee__ccoommmmaanndd
              33..335522..  ssmmttpp__aauutthheennttiiccaattoorrss
              33..335533..  ssmmttpp__ppaassss
              33..335544..  ssmmttpp__uurrll
              33..335555..  ssoorrtt
              33..335566..  ssoorrtt__aalliiaass
              33..335577..  ssoorrtt__aauuxx
              33..335588..  ssoorrtt__bbrroowwsseerr
              33..335599..  ssoorrtt__rree
              33..336600..  ssppaamm__sseeppaarraattoorr
              33..336611..  ssppoooollffiillee
              33..336622..  ssssll__cciipphheerrss
              33..336633..  ssssll__cclliieenntt__cceerrtt
              33..336644..  ssssll__ffoorrccee__ttllss
              33..336655..  ssssll__ssttaarrttttllss
              33..336666..  ssssll__uussee__ssssllvv22
              33..336677..  ssssll__uussee__ssssllvv33
              33..336688..  ssssll__uussee__ttllssvv11
              33..336699..  ssssll__uussee__ttllssvv11__11
              33..337700..  ssssll__uussee__ttllssvv11__22
              33..337711..  ssssll__uusseessyysstteemmcceerrttss
              33..337722..  ssssll__vveerriiffyy__ddaatteess
              33..337733..  ssssll__vveerriiffyy__hhoosstt
              33..337744..  ssssll__vveerriiffyy__ppaarrttiiaall__cchhaaiinnss
              33..337755..  ssttaattuuss__cchhaarrss
              33..337766..  ssttaattuuss__ffoorrmmaatt
              33..337777..  ssttaattuuss__oonn__ttoopp
              33..337788..  ssttrriicctt__tthhrreeaaddss
              33..337799..  ssuussppeenndd
              33..338800..  tteexxtt__fflloowweedd
              33..338811..  tthhoorroouugghh__sseeaarrcchh
              33..338822..  tthhrreeaadd__rreecceeiivveedd
              33..338833..  ttiillddee
              33..338844..  ttiimmee__iinncc
              33..338855..  ttiimmeeoouutt
              33..338866..  ttmmppddiirr
              33..338877..  ttoo__cchhaarrss
              33..338888..  ttrraasshh
              33..338899..  ttss__eennaabblleedd
              33..339900..  ttss__iiccoonn__ffoorrmmaatt
              33..339911..  ttss__ssttaattuuss__ffoorrmmaatt
              33..339922..  ttuunnnneell
              33..339933..  uunnccoollllaappssee__jjuummpp
              33..339944..  uunnccoollllaappssee__nneeww
              33..339955..  uussee__88bbiittmmiimmee
              33..339966..  uussee__ddoommaaiinn
              33..339977..  uussee__eennvveellooppee__ffrroomm
              33..339988..  uussee__ffrroomm
              33..339999..  uussee__iippvv66
              33..440000..  uusseerr__aaggeenntt
              33..440011..  vvffoollddeerr__ffoorrmmaatt
              33..440022..  vviirrttuuaall__ssppoooollffiillee
              33..440033..  vviissuuaall
              33..440044..  wwaaiitt__kkeeyy
              33..440055..  wweeeedd
              33..440066..  wwrraapp
              33..440077..  wwrraapp__hheeaaddeerrss
              33..440088..  wwrraapp__sseeaarrcchh
              33..440099..  wwrriittee__bbcccc
              33..441100..  wwrriittee__iinncc
              33..441111..  xx__ccoommmmeenntt__ttoo

        44..  FFuunnccttiioonnss

              44..11..  GGeenneerriicc  MMeennuu
              44..22..  IInnddeexx  MMeennuu
              44..33..  PPaaggeerr  MMeennuu
              44..44..  AAlliiaass  MMeennuu
              44..55..  QQuueerryy  MMeennuu
              44..66..  AAttttaacchhmmeenntt  MMeennuu
              44..77..  CCoommppoossee  MMeennuu
              44..88..  PPoossttppoonnee  MMeennuu
              44..99..  BBrroowwsseerr  MMeennuu
              44..1100..  PPggpp  MMeennuu
              44..1111..  SSmmiimmee  MMeennuu
              44..1122..  EEddiittoorr  MMeennuu

   1100..  MMiisscceellllaannyy

        11..  AAcckknnoowwlleeddggeemmeennttss
        22..  AAbboouutt  TThhiiss  DDooccuummeenntt

   _L_i_s_t_ _o_f_ _T_a_b_l_e_s

   1.1. TTyyppooggrraapphhiiccaall  ccoonnvveennttiioonnss  ffoorr  ssppeecciiaall  tteerrmmss
   2.1. ssiiddeebbaarr__ffoorrmmaatt
   2.2. ssiiddeebbaarr__ffoorrmmaatt  eexxaammpplleess
   2.3. SSiiddeebbaarr  CCoolloorr  PPrriioorriittyy
   2.4. CCoonnffiigg  CChhaannggeess
   2.5. MMoosstt  ccoommmmoonn  nnaavviiggaattiioonn  kkeeyyss  iinn  eennttrryy--bbaasseedd  mmeennuuss
   2.6. MMoosstt  ccoommmmoonn  nnaavviiggaattiioonn  kkeeyyss  iinn  ppaaggee--bbaasseedd  mmeennuuss
   2.7. MMoosstt  ccoommmmoonn  lliinnee  eeddiittoorr  kkeeyyss
   2.8. MMoosstt  ccoommmmoonn  mmeessssaaggee  iinnddeexx  kkeeyyss
   2.9. MMeessssaaggee  ssttaattuuss  ffllaaggss
   2.10. MMeessssaaggee  rreecciippiieenntt  ffllaaggss
   2.11. MMoosstt  ccoommmmoonn  ppaaggeerr  kkeeyyss
   2.12. AANNSSII  eessccaappee  sseeqquueenncceess
   2.13. CCoolloorr  sseeqquueenncceess
   2.14. MMoosstt  ccoommmmoonn  tthhrreeaadd  mmooddee  kkeeyyss
   2.15. MMoosstt  ccoommmmoonn  mmaaiill  sseennddiinngg  kkeeyyss
   2.16. MMoosstt  ccoommmmoonn  ccoommppoossee  mmeennuu  kkeeyyss
   2.17. PPGGPP  kkeeyy  mmeennuu  ffllaaggss
   3.1. NNeeooMMuutttt  ccoonnffiigg  ffiillee  sseeaarrcchh  oorrddeerr
   3.2. NNeeooMMuutttt  ssyysstteemm  ccoonnffiigg  ffiillee  llooccaattiioonnss
   3.3. NNeeooMMuutttt  uusseerr  ccoonnffiigg  ffiillee  llooccaattiioonnss
   3.4. CCoonnffiigg  PPrriioorriittyy
   3.5. SSyymmbboolliicc  kkeeyy  nnaammeess
   4.1. PPOOSSIIXX  rreegguullaarr  eexxpprreessssiioonn  cchhaarraacctteerr  ccllaasssseess
   4.2. RReegguullaarr  eexxpprreessssiioonn  rreeppeettiittiioonn  ooppeerraattoorrss
   4.3. GGNNUU  rreegguullaarr  eexxpprreessssiioonn  eexxtteennssiioonnss
   4.4. PPaatttteerrnn  mmooddiiffiieerrss
   4.5. RReellaattiivvee  MMeessssaaggee  NNuummbbeerr  RRaannggeess
   4.6. MMeessssaaggee  NNuummbbeerr  SShhoorrttccuuttss
   4.7. AAbbssoolluuttee  MMeessssaaggee  NNuummbbeerr  RRaannggeess
   4.8. SSiimmppllee  sseeaarrcchh  kkeeyywwoorrddss
   4.9. DDaattee  uunniittss
   4.10. GGMMaaiill  EExxaammppllee  PPaatttteerrnnss
   4.11. MMaaiillbbooxx  sshhoorrttccuuttss
   5.1. SSuuppppoorrtteedd  MMIIMMEE  ttyyppeess
   6.1. ccoommppoossee--ttoo--sseennddeerr  FFuunnccttiioonnss
   6.2. NNoott  aallll  HHooookkss  aarree  RReeqquuiirreedd
   6.3. PPootteennttiiaall  FFoorrmmaattttiinngg  SScchheemmee
   6.4. DDaattee  FFoorrmmaattttiinngg  CCooddeess
   6.5. EExxaammppllee  DDaattee  TTeessttss
   6.6. EExxaammppllee  11
   6.7. EExxaammppllee  22
   6.8. eennccrryypptt--sseellff  VVaarriiaabblleess
   6.9. ffoorrggootttteenn--aattttaacchhmmeenntt  VVaarriiaabblleess
   6.10. IInnddeexx  CCoolloorrss
   6.11. LLiimmiitt--CCuurrrreenntt--TThhrreeaadd  FFuunnccttiioonnss
   6.12. NNeeww  MMaaiill  CCoommmmaanndd  VVaarriiaabblleess
   6.13. NNNNTTPP  VVaarriiaabblleess
   6.14. NNNNTTPP  FFuunnccttiioonnss
   6.15. CCuussttoomm  ttaaggss  VVaarriiaabblleess
   6.16. NNoottmmuucchh//IIMMAAPP  FFuunnccttiioonnss
   6.17. IInnddeexx  CCoolloorrss
   6.18. NNoottmmuucchh  VVaarriiaabblleess
   6.19. NNoottmmuucchh  FFuunnccttiioonnss
   6.20. PPrrooggrreessss  CCoolloorrss
   6.21. QQuuaassii--DDeelleettee  FFuunnccttiioonnss
   6.22. RReeppllyy  WWiitthh  XX--OOrriiggiinnaall--TToo  VVaarriiaabblleess
   6.23. SSiiddeebbaarr  VVaarriiaabblleess
   6.24. SSiiddeebbaarr  FFuunnccttiioonnss
   6.25. SSiiddeebbaarr  CCoolloorrss
   6.26. SSiiddeebbaarr  SSoorrtt
   6.27. SSkkiipp--QQuuootteedd  VVaarriiaabblleess
   6.28. SSttaattuuss  CCoolloorrss
   6.29. TTrraasshh  VVaarriiaabblleess
   6.30. TTrraasshh  FFuunnccttiioonnss
   9.1. CCoommmmaanndd  lliinnee  ooppttiioonnss
   9.2. DDeeffaauulltt  GGeenneerriicc  MMeennuu  BBiinnddiinnggss
   9.3. DDeeffaauulltt  IInnddeexx  MMeennuu  BBiinnddiinnggss
   9.4. DDeeffaauulltt  PPaaggeerr  MMeennuu  BBiinnddiinnggss
   9.5. DDeeffaauulltt  AAlliiaass  MMeennuu  BBiinnddiinnggss
   9.6. DDeeffaauulltt  QQuueerryy  MMeennuu  BBiinnddiinnggss
   9.7. DDeeffaauulltt  AAttttaacchhmmeenntt  MMeennuu  BBiinnddiinnggss
   9.8. DDeeffaauulltt  CCoommppoossee  MMeennuu  BBiinnddiinnggss
   9.9. DDeeffaauulltt  PPoossttppoonnee  MMeennuu  BBiinnddiinnggss
   9.10. DDeeffaauulltt  BBrroowwsseerr  MMeennuu  BBiinnddiinnggss
   9.11. DDeeffaauulltt  PPggpp  MMeennuu  BBiinnddiinnggss
   9.12. DDeeffaauulltt  SSmmiimmee  MMeennuu  BBiinnddiinnggss
   9.13. DDeeffaauulltt  EEddiittoorr  MMeennuu  BBiinnddiinnggss

   _L_i_s_t_ _o_f_ _E_x_a_m_p_l_e_s

   3.1. MMuullttiippllee  ccoonnffiigguurraattiioonn  ccoommmmaannddss  ppeerr  lliinnee
   3.2. CCoommmmeennttiinngg  ccoonnffiigguurraattiioonn  ffiilleess
   3.3. EEssccaappiinngg  qquuootteess  iinn  ccoonnffiigguurraattiioonn  ffiilleess
   3.4. SSpplliittttiinngg  lloonngg  ccoonnffiigguurraattiioonn  ccoommmmaannddss  oovveerr  sseevveerraall  lliinneess
   3.5. UUssiinngg  eexxtteerrnnaall  ccoommmmaanndd''ss  oouuttppuutt  iinn  ccoonnffiigguurraattiioonn  ffiilleess
   3.6. UUssiinngg  eennvviirroonnmmeenntt  vvaarriiaabblleess  iinn  ccoonnffiigguurraattiioonn  ffiilleess
   3.7. CCoonnffiigguurriinngg  eexxtteerrnnaall  aalliiaass  ffiilleess
   3.8. SSeettttiinngg  ssoorrtt  mmeetthhoodd  bbaasseedd  oonn  mmaaiillbbooxx  nnaammee
   3.9. HHeeaaddeerr  wweeeeddiinngg
   3.10. CCoonnffiigguurriinngg  hheeaaddeerr  ddiissppllaayy  oorrddeerr
   3.11. DDeeffiinniinngg  ccuussttoomm  hheeaaddeerrss
   3.12. UUssiinngg  %%--eexxppaannddooss  iinn  ssaavvee--hhooookk
   3.13. EEmmbbeeddddiinngg  ppuusshh  iinn  ffoollddeerr--hhooookk
   3.14. CCoonnffiigguurriinngg  ssppaamm  ddeetteeccttiioonn
   3.15. UUssiinngg  uusseerr--ddeeffiinneedd  vvaarriiaabblleess  ffoorr  ccoonnffiigg  ffiillee  rreeaaddaabbiilliittyy
   3.16. UUssiinngg  uusseerr--ddeeffiinneedd  vvaarriiaabblleess  ffoorr  bbaacckkiinngg  uupp  ootthheerr  ccoonnffiigg  ooppttiioonn
          vvaalluueess

   3.17. DDeeffeerrrriinngg  uusseerr--ddeeffiinneedd  vvaarriiaabbllee  eexxppaannssiioonn  ttoo  rruunnttiimmee
   3.18. TTyyppee  ccoonnvveerrssiioonnss  uussiinngg  vvaarriiaabblleess
   3.19. UUssiinngg  eexxtteerrnnaall  ffiilltteerrss  iinn  ffoorrmmaatt  ssttrriinnggss
   4.1. MMaattcchhiinngg  aallll  aaddddrreesssseess  iinn  aaddddrreessss  lliissttss
   4.2. MMaattcchhiinngg  rreessttrriicctteedd  ttoo  aalliiaasseess
   4.3. MMaattcchhiinngg  aannyy  ddeeffiinneedd  aalliiaass
   4.4. UUssiinngg  bboooolleeaann  ooppeerraattoorrss  iinn  ppaatttteerrnnss
   4.5. SSppeecciiffyyiinngg  aa  ""ddeeffaauulltt""  hhooookk
   4.6. SSuubbjjeecctt  MMuunnggiinngg
   5.1. mmiimmee..ttyyppeess
   5.2. AAttttaacchhmmeenntt  ccoouunnttiinngg
   6.1. UURRLLss
   6.2. MMaannaaggiinngg  mmuullttiippllee  aaccccoouunnttss

Chapter 1. Introduction

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  NNeeooMMuutttt  HHoommee  PPaaggee
   22..  MMaaiilliinngg  LLiissttss
   33..  NNeeooMMuutttt  OOnnlliinnee  RReessoouurrcceess
   44..  CCoonnttrriibbuuttiinngg  ttoo  NNeeooMMuutttt
   55..  TTyyppooggrraapphhiiccaall  CCoonnvveennttiioonnss
   66..  CCooppyyrriigghhtt

   _N_e_o_M_u_t_t is a small but very powerful text-based MIME mail client.
   NeoMutt is highly configurable, and is well suited to the mail power
   user with advanced features like key bindings, keyboard macros, mail
   threading, regular expression searches and a powerful pattern matching
   language for selecting groups of messages.

1. NeoMutt Home Page

   The homepage can be found at hhttttppss::////nneeoommuutttt..oorrgg.

2. Mailing Lists

     * <nneeoommuutttt--uusseerrss@@nneeoommuutttt..oorrgg> - help, bug reports and feature
       requests. To subscribe to this list, please send a mail to
       <nneeoommuutttt--uusseerrss--rreeqquueesstt@@nneeoommuutttt..oorrgg> with the subject "subscribe".
     * <nneeoommuutttt--ddeevveell@@nneeoommuutttt..oorrgg> - development mailing list. To
       subscribe to this list, please send a mail to
       <nneeoommuutttt--ddeevveell--rreeqquueesstt@@nneeoommuutttt..oorrgg> with the subject "subscribe".

3. NeoMutt Online Resources

   Issue Tracking System
          Bugs may be reported on the devel mailing list, or on GitHub:
          hhttttppss::////ggiitthhuubb..ccoomm//nneeoommuutttt//nneeoommuutttt//iissssuueess

   IRC
          For the IRC user community, visit channel _#_n_e_o_m_u_t_t on
          iirrcc..ffrreeeennooddee..nneett.

4. Contributing to NeoMutt

   There are various ways to contribute to the NeoMutt project.

   Especially for new users it may be helpful to meet other new and
   experienced users to chat about NeoMutt, talk about problems and share
   tricks.

   Since translations of NeoMutt into other languages are highly
   appreciated, the NeoMutt developers always look for skilled translators
   that help improve and continue to maintain stale translations.

   For contributing code patches for new features and bug fixes, please
   refer to the developer pages at hhttttppss::////nneeoommuutttt..oorrgg//ddeevv..hhttmmll for more
   details.

5. Typographical Conventions

   This section lists typographical conventions followed throughout this
   manual. See table TTaabbllee  11..11,,  ""TTyyppooggrraapphhiiccaall  ccoonnvveennttiioonnss  ffoorr  ssppeecciiaall
   tteerrmmss"" for typographical conventions for special terms.

   _T_a_b_l_e_ _1_._1_._ _T_y_p_o_g_r_a_p_h_i_c_a_l_ _c_o_n_v_e_n_t_i_o_n_s_ _f_o_r_ _s_p_e_c_i_a_l_ _t_e_r_m_s
        Item                    Refers to...
   printf(3)      UNIX manual pages, execute man 3 printf
   <PageUp>       named keys
   <create-alias> named NeoMutt function
   ^G             Control+G key combination
   $mail_check    NeoMutt configuration option
   $HOME          environment variable

   Examples are presented as:
neomutt -v

   Within command synopsis, curly brackets ("{}") denote a set of options
   of which one is mandatory, square brackets ("[]") denote optional
   arguments, three dots denote that the argument may be repeated
   arbitrary times.

6. Copyright

   NeoMutt is Copyright (c) 1996-2018 Michael R. Elkins <mmee@@nneeoommuutttt..oorrgg>
   and others.

   This program is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by the
   Free Software Foundation; either version 2 of the License, or (at your
   option) any later version.

   This program is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License along
   with this program; if not, write to the Free Software Foundation, Inc.,
   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

Chapter 2. Getting Started

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  CCoorree  CCoonncceeppttss
   22..  SSccrreeeennss  aanndd  MMeennuuss

        22..11..  IInnddeexx
        22..22..  PPaaggeerr
        22..33..  FFiillee  BBrroowwsseerr
        22..44..  SSiiddeebbaarr
        22..55..  HHeellpp
        22..66..  CCoommppoossee  MMeennuu
        22..77..  AAlliiaass  MMeennuu
        22..88..  AAttttaacchhmmeenntt  MMeennuu

   33..  MMoovviinngg  AArroouunndd  iinn  MMeennuuss
   44..  EEddiittiinngg  IInnppuutt  FFiieellddss

        44..11..  IInnttrroodduuccttiioonn
        44..22..  HHiissttoorryy

   55..  RReeaaddiinngg  MMaaiill

        55..11..  TThhee  MMeessssaaggee  IInnddeexx
        55..22..  TThhee  PPaaggeerr
        55..33..  TThhrreeaaddeedd  MMooddee
        55..44..  MMiisscceellllaanneeoouuss  FFuunnccttiioonnss

   66..  SSeennddiinngg  MMaaiill

        66..11..  IInnttrroodduuccttiioonn
        66..22..  EEddiittiinngg  tthhee  MMeessssaaggee  HHeeaaddeerr
        66..33..  SSeennddiinngg  CCrryyppttooggrraapphhiiccaallllyy  SSiiggnneedd//EEnnccrryypptteedd  MMeessssaaggeess
        66..44..  SSeennddiinngg  FFoorrmmaatt==FFlloowweedd  MMeessssaaggeess

   77..  FFoorrwwaarrddiinngg  aanndd  BBoouunncciinngg  MMaaiill
   88..  PPoossttppoonniinngg  MMaaiill
   99..  LLooggggiinngg

   This section is intended as a brief overview of how to use NeoMutt.
   There are many other features which are described elsewhere in the
   manual. There is even more information available in the NeoMutt FAQ and
   various web pages. See the NNeeooMMuutttt  hhoommeeppaaggee for more details.

   The keybindings described in this section are the defaults as
   distributed. Your local system administrator may have altered the
   defaults for your site. You can always type "?" in any menu to display
   the current bindings.

   The first thing you need to do is invoke NeoMutt, simply by typing
   neomutt at the command line. There are various command-line options,
   see either the NeoMutt man page or the rreeffeerreennccee.

1. Core Concepts

   NeoMutt is a text-based application which interacts with users through
   different menus which are mostly line-/entry-based or page-based. A
   line-based menu is the so-called "index" menu (listing all messages of
   the currently opened folder) or the "alias" menu (allowing you to
   select recipients from a list). Examples for page-based menus are the
   "pager" (showing one message at a time) or the "help" menu listing all
   available key bindings.

   The user interface consists of a context sensitive help line at the
   top, the menu's contents followed by a context sensitive status line
   and finally the command line. The command line is used to display
   informational and error messages as well as for prompts and for
   entering interactive commands.

   NeoMutt is configured through variables which, if the user wants to
   permanently use a non-default value, are written to configuration
   files. NeoMutt supports a rich config file syntax to make even complex
   configuration files readable and commentable.

   Because NeoMutt allows for customizing almost all key bindings, there
   are so-called "functions" which can be executed manually (using the
   command line) or in macros. Macros allow the user to bind a sequence of
   commands to a single key or a short key sequence instead of repeating a
   sequence of actions over and over.

   Many commands (such as saving or copying a message to another folder)
   can be applied to a single message or a set of messages (so-called
   "tagged" messages). To help selecting messages, NeoMutt provides a rich
   set of message patterns (such as recipients, sender, body contents,
   date sent/received, etc.) which can be combined into complex
   expressions using the boolean _a_n_d and _o_r operations as well as
   negating. These patterns can also be used to (for example) search for
   messages or to limit the index to show only matching messages.

   NeoMutt supports a "hook" concept which allows the user to execute
   arbitrary configuration commands and functions in certain situations
   such as entering a folder, starting a new message or replying to an
   existing one. These hooks can be used to highly customize NeoMutt's
   behavior including managing multiple identities, customizing the
   display for a folder or even implementing auto-archiving based on a
   per-folder basis and much more.

   Besides an interactive mode, NeoMutt can also be used as a command-line
   tool only send messages. It also supports a mailx(1)-compatible
   interface, see TTaabbllee  99..11,,  ""CCoommmmaanndd  lliinnee  ooppttiioonnss"" for a complete list of
   command-line options.

2. Screens and Menus

2.1. Index

   The index is the screen that you usually see first when you start
   NeoMutt. It gives an overview over your emails in the currently opened
   mailbox. By default, this is your system mailbox. The information you
   see in the index is a list of emails, each with its number on the left,
   its flags (new email, important email, email that has been forwarded or
   replied to, tagged email, ...), the date when email was sent, its
   sender, the email size, and the subject. Additionally, the index also
   shows thread hierarchies: when you reply to an email, and the other
   person replies back, you can see the other person's email in a
   "sub-tree" below. This is especially useful for personal email between
   a group of people or when you've subscribed to mailing lists.

2.2. Pager

   The pager is responsible for showing the email content. On the top of
   the pager you have an overview over the most important email headers
   like the sender, the recipient, the subject, and much more information.
   How much information you actually see depends on your configuration,
   which we'll describe below.

   Below the headers, you see the email body which usually contains the
   message. If the email contains any attachments, you will see more
   information about them below the email body, or, if the attachments are
   text files, you can view them directly in the pager.

   To give the user a good overview, it is possible to configure NeoMutt
   to show different things in the pager with different colors. Virtually
   everything that can be described with a regular expression can be
   colored, e.g. URLs, email addresses or smileys.

2.3. File Browser

   The file browser is the interface to the local or remote file system.
   When selecting a mailbox to open, the browser allows custom sorting of
   items, limiting the items shown by a regular expression and a freely
   adjustable format of what to display in which way. It also allows for
   easy navigation through the file system when selecting file(s) to
   attach to a message, select multiple files to attach and many more.

2.4. Sidebar

   The Sidebar shows a list of all your mailboxes. The list can be turned
   on and off, it can be themed and the list style can be configured.

   This part of the manual is suitable for beginners. If you already know
   NeoMutt you could skip ahead to the main SSiiddeebbaarr  gguuiiddee. If you just
   want to get started, you could use the sample SSiiddeebbaarr  nneeoommuuttttrrcc.

   To check if NeoMutt supports "Sidebar", look for the string +sidebar in
   the neomutt version.
neomutt -v

   _L_e_t_'_s_ _t_u_r_n_ _o_n_ _t_h_e_ _S_i_d_e_b_a_r_:
set sidebar_visible
set sidebar_format = "%B%?F? [%F]?%* %?N?%N/?%S"
set mail_check_stats

   You will see something like this. A list of mailboxes on the left. A
   list of emails, from the selected mailbox, on the right.
Fruit [1]     3/8|  1    + Jan 24  Rhys Lee         (192)  Yew
Animals [1]   2/6|  2    + Feb 11  Grace Hall       (167)  Ilama
Cars            4|  3      Feb 23  Aimee Scott      (450)  Nectarine
Seas          1/7|  4    ! Feb 28  Summer Jackson   (264)  Lemon
                 |  5      Mar 07  Callum Harrison  (464)  Raspberry
                 |  6 N  + Mar 24  Samuel Harris    (353)  Tangerine
                 |  7 N  + Sep 05  Sofia Graham     (335)  Cherry
                 |  8 N    Sep 16  Ewan Brown       (105)  Ugli
                 |
                 |

   This user has four mailboxes: "Fruit", "Cars", "Animals" and "Seas".

   The current, open, mailbox is "Fruit". We can also see information
   about the other mailboxes. For example: The "Animals" mailbox contains,
   1 flagged email, 2 new emails out of a total of 6 emails.

2.4.1. Navigation

   The Sidebar adds some new ffuunnccttiioonnss to NeoMutt.

   The user pressed the "c" key to <change-folder> to the "Animals"
   mailbox. The Sidebar automatically updated the indicator to match.
Fruit [1]     3/8|  1      Jan 03  Tia Gibson       (362)  Caiman
Animals [1]   2/6|  2    + Jan 22  Rhys Lee         ( 48)  Dolphin
Cars            4|  3    ! Aug 16  Ewan Brown       (333)  Hummingbird
Seas          1/7|  4      Sep 25  Grace Hall       ( 27)  Capybara
                 |  5 N  + Nov 12  Evelyn Rogers    (453)  Tapir
                 |  6 N  + Nov 16  Callum Harrison  (498)  Hedgehog
                 |
                 |
                 |
                 |

   Let's map some functions:
bind index,pager \CP sidebar-prev       # Ctrl-Shift-P - Previous Mailbox
bind index,pager \CN sidebar-next       # Ctrl-Shift-N - Next Mailbox
bind index,pager \CO sidebar-open       # Ctrl-Shift-O - Open Highlighted Mailbo
x

   Press "Ctrl-Shift-N" (Next mailbox) twice will move the Sidebar
   _h_i_g_h_l_i_g_h_t to down to the "Seas" mailbox.
Fruit [1]     3/8|  1      Jan 03  Tia Gibson       (362)  Caiman
Animals [1]   2/6|  2    + Jan 22  Rhys Lee         ( 48)  Dolphin
Cars            4|  3    ! Aug 16  Ewan Brown       (333)  Hummingbird
Seas          1/7|  4      Sep 25  Grace Hall       ( 27)  Capybara
                 |  5 N  + Nov 12  Evelyn Rogers    (453)  Tapir
                 |  6 N  + Nov 16  Callum Harrison  (498)  Hedgehog
                 |
                 |
                 |
                 |

Note

   Functions <sidebar-next> and <sidebar-prev> move the Sidebar _h_i_g_h_l_i_g_h_t.
   They _d_o_ _n_o_t change the open mailbox.

   Press "Ctrl-Shift-O" (<sidebar-open>) to open the highlighted mailbox.
Fruit [1]     3/8|  1    ! Mar 07  Finley Jones     (139)  Molucca Sea
Animals [1]   2/6|  2    + Mar 24  Summer Jackson   ( 25)  Arafura Sea
Cars            4|  3    + Feb 28  Imogen Baker     (193)  Pechora Sea
Seas          1/7|  4 N  + Feb 23  Isla Hussain     (348)  Balearic Sea
                 |
                 |
                 |
                 |
                 |
                 |

2.4.2. Features

   The Sidebar shows a list of mailboxes in a panel.

   Everything about the Sidebar can be configured.

   SSttaattee  ooff  tthhee  SSiiddeebbaarr
     * Visibility
     * Width

   WWhhiicchh  mmaaiillbbooxxeess  aarree  ddiissppllaayyeedd
     * Display all
     * Limit to mailboxes with new mail
     * Whitelist mailboxes to display always

   TThhee  oorrddeerr  iinn  wwhhiicchh  mmaaiillbbooxxeess  aarree  ddiissppllaayyeedd
     * Unsorted (order of mailboxes commands)
     * Sorted alphabetically
     * Sorted by number of new mails

   CCoolloorr
     * Sidebar indicators and divider
     * Mailboxes depending on their type
     * Mailboxes depending on their contents

   KKeeyy  bbiinnddiinnggss
     * Hide/Unhide the Sidebar
     * Select previous/next mailbox
     * Select previous/next mailbox with new mail
     * Page up/down through a list of mailboxes

   _M_i_s_c
     * FFoorrmmaattttiinngg  ssttrriinngg  ffoorr  mmaaiillbbooxx
     * WWrraappaarroouunndd  sseeaarrcchhiinngg
     * FFlleexxiibbllee  mmaaiillbbooxx  aabbbbrreevviiaattiioonnss
     * Support for Unicode mailbox names (UTF-8)

2.4.3. Display

   Everything about the Sidebar can be configured.

   _F_o_r_ _a_ _q_u_i_c_k_ _r_e_f_e_r_e_n_c_e_:
     * SSiiddeebbaarr  vvaarriiaabblleess  ttoo  sseett
     * SSiiddeebbaarr  ccoolloorrss  ttoo  aappppllyy
     * SSiiddeebbaarr  ssoorrtt  mmeetthhooddss

2.4.3.1. Sidebar Basics

   The most important variable is $sidebar_visible. You can set this in
   your "neomuttrc", or bind a key to the function
   <sidebar-toggle-visible>.
set sidebar_visible                         # Make the Sidebar visible by defaul
t
bind index,pager B sidebar-toggle-visible   # Use 'B' to switch the Sidebar on a
nd off

   Next, decide how wide you want the Sidebar to be. 25 characters might
   be enough for the mailbox name and some numbers. Remember, you can
   hide/show the Sidebar at the press of button.

   Finally, you might want to change the divider character. By default,
   Sidebar draws an ASCII line between it and the Index panel If your
   terminal supports it, you can use a Unicode line-drawing character.
set sidebar_width = 25                  # Plenty of space
set sidebar_divider_char = '|'          # Pretty line-drawing character

2.4.3.2. Sidebar Format String

   $sidebar_format allows you to customize the Sidebar display. For an
   introduction, read ffoorrmmaatt  ssttrriinnggss including the section about
   ccoonnddiittiioonnaallss.

   The default value is: %B%* %n

   A more detailed value is: %B%?F? [%F]?%* %?N?%N/?%S

   _W_h_i_c_h_ _b_r_e_a_k_s_ _d_o_w_n_ _a_s_:
     * %B - Mailbox name
     * %?F? [%F]? - If flagged emails [%F], otherwise nothing
     * %* - Pad with spaces
     * %?N?%N/? - If new emails %N/, otherwise nothing
     * %S - Total number of emails

   _T_a_b_l_e_ _2_._1_._ _s_i_d_e_b_a_r___f_o_r_m_a_t
   Format Notes Description
   %B   Name of the mailbox
   %S * /- Size of mailbox (total number of messages)
   %F * /- Number of Flagged messages in the mailbox
   %N * /- Number of New messages in the mailbox
   %n * If there's new mail, display "N", otherwise nothing
   %!   "!": one flagged message; "!!": two flagged messages; "n!": n
   flagged messages (for n > 2). Otherwise prints nothing.
   %d * /= Number of deleted messages
   %L * /= Number of messages after limiting
   %t * /= Number of tagged messages
   %>X   Right justify the rest of the string and pad with "X"
   %|X   Pad to the end of the line with "X"
   %*X   Soft-fill with character "X" as pad

   * = Can be optionally printed if nonzero

   /- = To use this expandos, you must first:
set mail_check_stats

   /= = Only applicable to the current folder

   Here are some examples. They show the number of (F)lagged, (N)ew and
   (S)ize.

   _T_a_b_l_e_ _2_._2_._ _s_i_d_e_b_a_r___f_o_r_m_a_t_ _e_x_a_m_p_l_e_s
            Format           Example
   %B%?F? [%F]?%* %?N?%N/?%S
mailbox [F]            N/S

   %B%* %F:%N:%S
mailbox              F:N:S

   %B %?N?(%N)?%* %S
mailbox (N)              S

   %B%* ?F?%F/?%N
mailbox                F/S

2.4.3.3. Abbreviating Mailbox Names

   $sidebar_delim_chars tells Sidebar how to split up mailbox paths. For
   local directories use "/"; for IMAP folders use "."

2.4.3.3.1. Example 1

   This example works well if your mailboxes have unique names after the
   last separator.

   Add some mailboxes of different depths.
set folder="~/mail"
mailboxes =fruit/apple          =fruit/banana          =fruit/cherry
mailboxes =water/sea/sicily     =water/sea/archipelago =water/sea/sibuyan
mailboxes =water/ocean/atlantic =water/ocean/pacific   =water/ocean/arctic

   Shorten the names:
set sidebar_short_path                  # Shorten mailbox names (truncate all su
bdirs)
set sidebar_component_depth=1           # Shorten mailbox names (truncate 1 subd
irs)
set sidebar_delim_chars="/"             # Delete everything up to the last or Nt
h / character

   The screenshot below shows what the Sidebar would look like before and
   after shortening using sidebar_short_path.
|fruit/apple                            |apple
|fruit/banana                           |banana
|fruit/cherry                           |cherry
|water/sea/sicily                       |sicily
|water/sea/archipelago                  |archipelago
|water/sea/sibuyan                      |sibuyan
|water/ocean/atlantic                   |atlantic
|water/ocean/pacific                    |pacific
|water/ocean/arctic                     |arctic

   The screenshot below shows what the Sidebar would look like before and
   after shortening using sidebar_component_depth=1.
|fruit/apple                            |apple
|fruit/banana                           |banana
|fruit/cherry                           |cherry
|water/sea/sicily                       |sea/sicily
|water/sea/archipelago                  |sea/archipelago
|water/sea/sibuyan                      |sea/sibuyan
|water/ocean/atlantic                   |ocean/atlantic
|water/ocean/pacific                    |ocean/pacific
|water/ocean/arctic                     |ocean/arctic

2.4.3.3.2. Example 2

   This example works well if you have lots of mailboxes which are
   arranged in a tree.

   Add some mailboxes of different depths.
set folder="~/mail"
mailboxes =fruit
mailboxes =fruit/apple =fruit/banana =fruit/cherry
mailboxes =water
mailboxes =water/sea
mailboxes =water/sea/sicily =water/sea/archipelago =water/sea/sibuyan
mailboxes =water/ocean
mailboxes =water/ocean/atlantic =water/ocean/pacific =water/ocean/arctic

   Shorten the names:
set sidebar_short_path                  # Shorten mailbox names
set sidebar_delim_chars="/"             # Delete everything up to the last / cha
racter
set sidebar_folder_indent               # Indent folders whose names we've short
ened
set sidebar_indent_string="  "          # Indent with two spaces

   The screenshot below shows what the Sidebar would look like before and
   after shortening.
|fruit                                  |fruit
|fruit/apple                            |  apple
|fruit/banana                           |  banana
|fruit/cherry                           |  cherry
|water                                  |water
|water/sea                              |  sea
|water/sea/sicily                       |    sicily
|water/sea/archipelago                  |    archipelago
|water/sea/sibuyan                      |    sibuyan
|water/ocean                            |  ocean
|water/ocean/atlantic                   |    atlantic
|water/ocean/pacific                    |    pacific
|water/ocean/arctic                     |    arctic

   Sometimes, it will be necessary to add mailboxes, that you don't use,
   to fill in part of the tree. This will trade vertical space for
   horizontal space (but it looks good).

2.4.3.4. Limiting the Number of Mailboxes

   If you have a lot of mailboxes, sometimes it can be useful to hide the
   ones you aren't using. $sidebar_new_mail_only tells Sidebar to only
   show mailboxes that contain new, or flagged, email.

   If you want some mailboxes to be always visible, then use the
   sidebar_whitelist command. It takes a list of mailboxes as parameters.
set sidebar_new_mail_only               # Only mailboxes with new/flagged email
sidebar_whitelist fruit fruit/apple     # Always display these two mailboxes

2.4.4. Colors

   Here is a sample color scheme:
color sidebar_indicator default color17     # Dark blue background
color sidebar_highlight white   color238    # Grey background
color sidebar_spoolfile yellow  default     # Yellow
color sidebar_new       green   default     # Green
color sidebar_ordinary  default default     # Default colors
color sidebar_flagged   red     default     # Red
color sidebar_divider   color8  default     # Dark grey

   There is a priority order when coloring Sidebar mailboxes. e.g. If a
   mailbox has new mail it will have the sidebar_new color, even if it
   also contains flagged mails.

   _T_a_b_l_e_ _2_._3_._ _S_i_d_e_b_a_r_ _C_o_l_o_r_ _P_r_i_o_r_i_t_y
   Priority       Color                          Description
   Highest  sidebar_indicator Mailbox is open
            sidebar_highlight Mailbox is highlighted
            sidebar_spoolfile Mailbox is the spoolfile (receives incoming mail)
            sidebar_new       Mailbox contains new mail
            sidebar_flagged   Mailbox contains flagged mail
   Lowest   sidebar_ordinary  Mailbox does not match above

2.4.5. Config Changes

   If you haven't used Sidebar before, you can ignore this section.

   Some of the Sidebar config has been changed to make its meaning
   clearer. These changes have been made since the previous Sidebar
   release: 2015-11-11.

   _T_a_b_l_e_ _2_._4_._ _C_o_n_f_i_g_ _C_h_a_n_g_e_s
         Old Name               New Name
   $sidebar_delim        $sidebar_divider_char
   $sidebar_folderindent $sidebar_folder_indent
   $sidebar_indentstr    $sidebar_indent_string
   $sidebar_newmail_only $sidebar_new_mail_only
   $sidebar_shortpath    $sidebar_short_path
   $sidebar_sort         $sidebar_sort_method
   <sidebar-scroll-down> <sidebar-page-down>
   <sidebar-scroll-up>   <sidebar-page-up>

2.5. Help

   The help screen is meant to offer a quick help to the user. It lists
   the current configuration of key bindings and their associated commands
   including a short description, and currently unbound functions that
   still need to be associated with a key binding (or alternatively, they
   can be called via the NeoMutt command prompt).

2.6. Compose Menu

   The compose menu features a split screen containing the information
   which really matter before actually sending a message by mail: who gets
   the message as what (recipients and who gets what kind of copy).
   Additionally, users may set security options like deciding whether to
   sign, encrypt or sign and encrypt a message with/for what keys. Also,
   it's used to attach messages, to re-edit any attachment including the
   message itself.

2.7. Alias Menu

   The alias menu is used to help users finding the recipients of
   messages. For users who need to contact many people, there's no need to
   remember addresses or names completely because it allows for searching,
   too. The alias mechanism and thus the alias menu also features grouping
   several addresses by a shorter nickname, the actual alias, so that
   users don't have to select each single recipient manually.

2.8. Attachment Menu

   As will be later discussed in detail, NeoMutt features a good and
   stable MIME implementation, that is, it supports sending and receiving
   messages of arbitrary MIME types. The attachment menu displays a
   message's structure in detail: what content parts are attached to which
   parent part (which gives a true tree structure), which type is of what
   type and what size. Single parts may saved, deleted or modified to
   offer great and easy access to message's internals.

3. Moving Around in Menus

   The most important navigation keys common to line- or entry-based menus
   are shown in TTaabbllee  22..55,,  ""MMoosstt  ccoommmmoonn  nnaavviiggaattiioonn  kkeeyyss  iinn  eennttrryy--bbaasseedd
   mmeennuuss"" and in TTaabbllee  22..66,,  ""MMoosstt  ccoommmmoonn  nnaavviiggaattiioonn  kkeeyyss  iinn  ppaaggee--bbaasseedd
   mmeennuuss"" for page-based menus.

   _T_a_b_l_e_ _2_._5_._ _M_o_s_t_ _c_o_m_m_o_n_ _n_a_v_i_g_a_t_i_o_n_ _k_e_y_s_ _i_n_ _e_n_t_r_y_-_b_a_s_e_d_ _m_e_n_u_s
        Key          Function                    Description
   j or <Down>   <next-entry>     move to the next entry
   k or <Up>     <previous-entry> move to the previous entry
   z or <PageDn> <page-down>      go to the next page
   Z or <PageUp> <page-up>        go to the previous page
   = or <Home>   <first-entry>    jump to the first entry
   * or <End>    <last-entry>     jump to the last entry
   q             <quit>           exit the current menu
   ?             <help>           list all keybindings for the current menu

   _T_a_b_l_e_ _2_._6_._ _M_o_s_t_ _c_o_m_m_o_n_ _n_a_v_i_g_a_t_i_o_n_ _k_e_y_s_ _i_n_ _p_a_g_e_-_b_a_s_e_d_ _m_e_n_u_s
            Key              Function          Description
   J or <Return>          <next-line>     scroll down one line
   <Backspace>            <previous-line> scroll up one line
   K, <Space> or <PageDn> <next-page>     move to the next page
   - or <PageUp>          <previous-page> move the previous page
   <Home>                 <top>           move to the top
   <End>                  <bottom>        move to the bottom

4. Editing Input Fields

4.1. Introduction

   NeoMutt has a built-in line editor for inputting text, e.g. email
   addresses or filenames. The keys used to manipulate text input are very
   similar to those of Emacs. See TTaabbllee  22..77,,  ""MMoosstt  ccoommmmoonn  lliinnee  eeddiittoorr
   kkeeyyss"" for a full reference of available functions, their default key
   bindings, and short descriptions.

   _T_a_b_l_e_ _2_._7_._ _M_o_s_t_ _c_o_m_m_o_n_ _l_i_n_e_ _e_d_i_t_o_r_ _k_e_y_s
        Key           Function                  Description
   ^A or <Home>   <bol>             move to the start of the line
   ^B or <Left>   <backward-char>   move back one char
   Esc B          <backward-word>   move back one word
   ^D or <Delete> <delete-char>     delete the char under the cursor
   ^E or <End>    <eol>             move to the end of the line
   ^F or <Right>  <forward-char>    move forward one char
   Esc F          <forward-word>    move forward one word
   <Tab>          <complete>        complete filename, alias, or label
   ^T             <complete-query>  complete address with query
   ^K             <kill-eol>        delete to the end of the line
   Esc d          <kill-eow>        delete to the end of the word
   ^W             <kill-word>       kill the word in front of the cursor
   ^U             <kill-line>       delete entire line
   ^V             <quote-char>      quote the next typed key
   <Up>           <history-up>      recall previous string from history
   <Down>         <history-down>    recall next string from history
   ^R             <history-search>  use current input to search history
   <BackSpace>    <backspace>       kill the char in front of the cursor
   Esc u          <upcase-word>     convert word to upper case
   Esc l          <downcase-word>   convert word to lower case
   Esc c          <capitalize-word> capitalize the word
   ^G             n/a               abort
   <Return>       n/a               finish editing

   You can remap the _e_d_i_t_o_r functions using the bbiinndd command. For example,
   to make the <Delete> key delete the character in front of the cursor
   rather than under, you could use:
bind editor <delete> backspace

4.2. History

   NeoMutt maintains a history for the built-in editor. The number of
   items is controlled by the $$hhiissttoorryy variable and can be made persistent
   using an external file specified using $$hhiissttoorryy__ffiillee and $$ssaavvee__hhiissttoorryy.
   You may cycle through them at an editor prompt by using the
   <history-up> and/or <history-down> commands. NeoMutt will remember the
   currently entered text as you cycle through history, and will wrap
   around to the initial entry line.

   NeoMutt maintains several distinct history lists, one for each of the
   following categories:
     * .neomuttrc commands
     * addresses and aliases
     * shell commands
     * filenames
     * patterns
     * everything else

   NeoMutt automatically filters out consecutively repeated items from the
   history. If $$hhiissttoorryy__rreemmoovvee__dduuppss is set, all repeated items are removed
   from the history. It also mimics the behavior of some shells by
   ignoring items starting with a space. The latter feature can be useful
   in macros to not clobber the history's valuable entries with unwanted
   entries.

5. Reading Mail

   Similar to many other mail clients, there are two modes in which mail
   is read in NeoMutt. The first is a list of messages in the mailbox,
   which is called the "index" menu in NeoMutt. The second mode is the
   display of the message contents. This is called the "pager."

   The next few sections describe the functions provided in each of these
   modes.

5.1. The Message Index

   Common keys used to navigate through and manage messages in the index
   are shown in TTaabbllee  22..88,,  ""MMoosstt  ccoommmmoonn  mmeessssaaggee  iinnddeexx  kkeeyyss"". How messages
   are presented in the index menu can be customized using the
   $$iinnddeexx__ffoorrmmaatt variable.

   _T_a_b_l_e_ _2_._8_._ _M_o_s_t_ _c_o_m_m_o_n_ _m_e_s_s_a_g_e_ _i_n_d_e_x_ _k_e_y_s
     Key                    Description
   c        change to a different mailbox
   Esc c    change to a folder in read-only mode
   C        copy the current message to another mailbox
   Esc C    decode a message and copy it to a folder
   Esc s    decode a message and save it to a folder
   D        delete messages matching a pattern
   d        delete the current message
   F        mark as important
   l        show messages matching a pattern
   N        mark message as new
   o        change the current sort method
   O        reverse sort the mailbox
   q        save changes and exit
   s        save-message
   T        tag messages matching a pattern
   t        toggle the tag on a message
   Esc t    toggle tag on entire message thread
   U        undelete messages matching a pattern
   u        undelete-message
   v        view-attachments
   x        abort changes and exit
   <Return> display-message
   <Tab>    jump to the next new or unread message
   @        show the author's full e-mail address
   $        save changes to mailbox
   /        search
   Esc /    search-reverse
   ^L       clear and redraw the screen
   ^T       untag messages matching a pattern

   In addition to who sent the message and the subject, a short summary of
   the disposition of each message is printed beside the message number.
   Zero or more of the "flags" in TTaabbllee  22..99,,  ""MMeessssaaggee  ssttaattuuss  ffllaaggss"" may
   appear, some of which can be turned on or off using these functions:
   <set-flag> and <clear-flag> bound by default to "w" and "W"
   respectively.

   Furthermore, the flags in TTaabbllee  22..1100,,  ""MMeessssaaggee  rreecciippiieenntt  ffllaaggss"" reflect
   who the message is addressed to. They can be customized with the
   $$ttoo__cchhaarrss variable.

   _T_a_b_l_e_ _2_._9_._ _M_e_s_s_a_g_e_ _s_t_a_t_u_s_ _f_l_a_g_s
   Flag                          Description
   D    message is deleted (is marked for deletion)
   d    message has attachments marked for deletion
   K    contains a PGP public key
   N    message is new
   O    message is old
   P    message is PGP encrypted
   r    message has been replied to
   S    message is signed, and the signature is successfully verified
   s    message is signed
   !    message is flagged
   *    message is tagged
   n    thread contains new messages (only if collapsed)
   o    thread contains old messages (only if collapsed)

   _T_a_b_l_e_ _2_._1_0_._ _M_e_s_s_a_g_e_ _r_e_c_i_p_i_e_n_t_ _f_l_a_g_s
   Flag                    Description
   +    message is to you and you only
   T    message is to you, but also to or CC'ed to others
   C    message is CC'ed to you
   F    message is from you
   L    message is sent to a subscribed mailing list

5.2. The Pager

   By default, NeoMutt uses its built-in pager to display the contents of
   messages (an external pager such as less(1) can be configured, see
   $$ppaaggeerr variable). The pager is very similar to the Unix program less(1)
   though not nearly as featureful.

   _T_a_b_l_e_ _2_._1_1_._ _M_o_s_t_ _c_o_m_m_o_n_ _p_a_g_e_r_ _k_e_y_s
   Key Description
   <Return> go down one line
   <Space> display the next page (or next message if at the end of a
   message)
   - go back to the previous page
   n search for next match
   S skip beyond quoted text
   T toggle display of quoted text
   ? show keybindings
   / regular expression search
   Esc / backward regular expression search
   \ toggle highlighting of search matches
   ^ jump to the top of the message

   In addition to key bindings in TTaabbllee  22..1111,,  ""MMoosstt  ccoommmmoonn  ppaaggeerr  kkeeyyss"",
   many of the functions from the index menu are also available in the
   pager, such as <delete-message> or <copy-message> (this is one
   advantage over using an external pager to view messages).

   Also, the internal pager supports a couple other advanced features. For
   one, it will accept and translate the "standard" nroff sequences for
   bold and underline. These sequences are a series of either the letter,
   backspace ("^H"), the letter again for bold or the letter, backspace,
   "_" for denoting underline. NeoMutt will attempt to display these in
   bold and underline respectively if your terminal supports them. If not,
   you can use the bold and underline ccoolloorr objects to specify a _c_o_l_o_r or
   mono attribute for them.

   Additionally, the internal pager supports the ANSI escape sequences for
   character attributes. NeoMutt translates them into the correct color
   and character settings. The sequences NeoMutt supports are:
\e[
_P_s;
_P_s;..
_P_s;m

   where _P_s can be one of the codes shown in TTaabbllee  22..1122,,  ""AANNSSII  eessccaappee
   sseeqquueenncceess"".

   _T_a_b_l_e_ _2_._1_2_._ _A_N_S_I_ _e_s_c_a_p_e_ _s_e_q_u_e_n_c_e_s
   Escape code Description
   0 All attributes off
   1 Bold on
   4 Underline on
   5 Blink on
   7 Reverse video on
   3 _<_c_o_l_o_r_> Foreground color is _<_c_o_l_o_r_> (see TTaabbllee  22..1133,,  ""CCoolloorr
   sseeqquueenncceess"")
   4 _<_c_o_l_o_r_> Background color is _<_c_o_l_o_r_> (see TTaabbllee  22..1133,,  ""CCoolloorr
   sseeqquueenncceess"")

   _T_a_b_l_e_ _2_._1_3_._ _C_o_l_o_r_ _s_e_q_u_e_n_c_e_s
   Color code  Color
   0          Black
   1          Red
   2          Green
   3          Yellow
   4          Blue
   5          Magenta
   6          Cyan
   7          White

   NeoMutt uses these attributes for handling text/enriched messages, and
   they can also be used by an external aauuttoovviieeww script for highlighting
   purposes.

Note

   If you change the colors for your display, for example by changing the
   color associated with color2 for your xterm, then that color will be
   used instead of green.

Note

   Note that the search commands in the pager take regular expressions,
   which are not quite the same as the more complex ppaatttteerrnnss used by the
   search command in the index. This is because patterns are used to
   select messages by criteria whereas the pager already displays a
   selected message.

5.3. Threaded Mode

   So-called "threads" provide a hierarchy of messages where replies are
   linked to their parent message(s). This organizational form is
   extremely useful in mailing lists where different parts of the
   discussion diverge. NeoMutt displays threads as a tree structure.

   In NeoMutt, when a mailbox is ssoorrtteedd by _t_h_r_e_a_d_s, there are a few
   additional functions available in the _i_n_d_e_x and _p_a_g_e_r modes as shown in
   TTaabbllee  22..1144,,  ""MMoosstt  ccoommmmoonn  tthhrreeaadd  mmooddee  kkeeyyss"".

   _T_a_b_l_e_ _2_._1_4_._ _M_o_s_t_ _c_o_m_m_o_n_ _t_h_r_e_a_d_ _m_o_d_e_ _k_e_y_s
   Key Function Description
   ^D <delete-thread> delete all messages in the current thread
   ^U <undelete-thread> undelete all messages in the current thread
   ^N <next-thread> jump to the start of the next thread
   ^P <previous-thread> jump to the start of the previous thread
   ^R <read-thread> mark the current thread as read
   Esc d <delete-subthread> delete all messages in the current subthread
   Esc u <undelete-subthread> undelete all messages in the current
   subthread
   Esc n <next-subthread> jump to the start of the next subthread
   Esc p <previous-subthread> jump to the start of the previous subthread
   Esc r <read-subthread> mark the current subthread as read
   Esc t <tag-thread> toggle the tag on the current thread
   Esc v <collapse-thread> toggle collapse for the current thread
   Esc V <collapse-all> toggle collapse for all threads
   P <parent-message> jump to parent message in thread

   Collapsing a thread displays only the first message in the thread and
   hides the others. This is useful when threads contain so many messages
   that you can only see a handful of threads on the screen. See %M in
   $$iinnddeexx__ffoorrmmaatt. For example, you could use "%?M?(#%03M)&(%4l)?" in
   $$iinnddeexx__ffoorrmmaatt to optionally display the number of hidden messages if
   the thread is collapsed. The %?<char>?<if-part>&<else-part>? syntax is
   explained in detail in ffoorrmmaatt  ssttrriinngg  ccoonnddiittiioonnaallss.

   Technically, every reply should contain a list of its parent messages
   in the thread tree, but not all do. In these cases, NeoMutt groups them
   by subject which can be controlled using the $$ssttrriicctt__tthhrreeaaddss variable.

5.4. Miscellaneous Functions

   In addition, the _i_n_d_e_x and _p_a_g_e_r menus have these interesting
   functions:

   <check-stats>
          Calculate statistics for all monitored mailboxes declared using
          the _m_a_i_l_b_o_x_e_scommand. It will calculate statistics despite
          $$mmaaiill__cchheecckk__ssttaattss being unset.

   <create-alias> (default: a)
          Creates a new alias based upon the current message (or prompts
          for a new one). Once editing is complete, an aalliiaass command is
          added to the file specified by the $$aalliiaass__ffiillee variable for
          future use

Note

          NeoMutt does not read the $$aalliiaass__ffiillee upon startup so you must
          explicitly ssoouurrccee the file.

   <check-traditional-pgp> (default: Esc P)
          This function will search the current message for content signed
          or encrypted with PGP the "traditional" way, that is, without
          proper MIME tagging. Technically, this function will temporarily
          change the MIME content types of the body parts containing PGP
          data; this is similar to the <<eeddiitt--ttyyppee>> function's effect.

   <edit-raw-message>
          This command (available in the index and pager) allows you to
          edit the raw current message as it's present in the mail folder.
          After you have finished editing, the changed message will be
          appended to the current folder, and the original message will be
          marked for deletion; if the message is unchanged it won't be
          replaced.

          <<eeddiitt>> is a synonym of this for backwards compatibility.

          See also <<eeddiitt--oorr--vviieeww--rraaww--mmeessssaaggee>>, <<vviieeww--rraaww--mmeessssaaggee>>.

   <edit>
          Alias of <<eeddiitt--rraaww--mmeessssaaggee>> for backwards compatibility.

   <edit-or-view-raw-message> (default: e)
          This command (available in the index and pager) is the same as
          <<eeddiitt--rraaww--mmeessssaaggee>> if the mailbox is writable, otherwise it the
          same as <<vviieeww--rraaww--mmeessssaaggee>>.

   <edit-type> (default: ^E on the attachment menu, and in the pager and
          index menus; ^T on the compose menu)
          This command is used to temporarily edit an attachment's content
          type to fix, for instance, bogus character set parameters. When
          invoked from the index or from the pager, you'll have the
          opportunity to edit the top-level attachment's content type. On
          the aattttaacchhmmeenntt  mmeennuu, you can change any attachment's content
          type. These changes are not persistent, and get lost upon
          changing folders.

          Note that this command is also available on the ccoommppoossee  mmeennuu.
          There, it's used to fine-tune the properties of attachments you
          are going to send.

   <enter-command> (default: ":")
          This command is used to execute any command you would normally
          put in a configuration file. A common use is to check the
          settings of variables, or in conjunction with mmaaccrrooss to change
          settings on the fly.

   <extract-keys> (default: ^K)
          This command extracts PGP public keys from the current or tagged
          message(s) and adds them to your PGP public key ring.

   <forget-passphrase> (default: ^F)
          This command wipes the passphrase(s) from memory. It is useful,
          if you misspelled the passphrase.

   <list-reply> (default: L)
          Reply to the current or tagged message(s) by extracting any
          addresses which match the regular expressions given by the lliissttss
          or ssuubbssccrriibbee commands, but also honor any Mail-Followup-To
          header(s) if the $$hhoonnoorr__ffoolllloowwuupp__ttoo configuration variable is
          set. In addition, the List-Post header field is examined for
          mailto: URLs specifying a mailing list address. Using this when
          replying to messages posted to mailing lists helps avoid
          duplicate copies being sent to the author of the message you are
          replying to.

   <pipe-message> (default: |)
          Asks for an external Unix command and pipes the current or
          tagged message(s) to it. The variables $$ppiippee__ddeeccooddee,
          $$ppiippee__sspplliitt, $$ppiippee__sseepp and $$wwaaiitt__kkeeyy control the exact behavior
          of this function.

   <resend-message> (default: Esc e)
          NeoMutt takes the current message as a template for a new
          message. This function is best described as "recall from
          arbitrary folders". It can conveniently be used to forward MIME
          messages while preserving the original mail structure. Note that
          the amount of headers included here depends on the value of the
          $$wweeeedd variable.

          This function is also available from the attachment menu. You
          can use this to easily resend a message which was included with
          a bounce message as a message/rfc822 body part.

   <shell-escape> (default: !)
          Asks for an external Unix command and executes it. The $$wwaaiitt__kkeeyy
          can be used to control whether NeoMutt will wait for a key to be
          pressed when the command returns (presumably to let the user
          read the output of the command), based on the return status of
          the named command. If no command is given, an interactive shell
          is executed.

   <toggle-quoted> (default: T)
          The pager uses the $$qquuoottee__rreeggeexx variable to detect quoted text
          when displaying the body of the message. This function toggles
          the display of the quoted material in the message. It is
          particularly useful when being interested in just the response
          and there is a large amount of quoted text in the way.

   <view-raw-message>
          This command (available in the index and pager) opens the raw
          message read-only in an editor. This command does not allow
          editing the message, use <<eeddiitt--rraaww--mmeessssaaggee>> for this.

          See also <<eeddiitt--rraaww--mmeessssaaggee>>, <<eeddiitt--oorr--vviieeww--rraaww--mmeessssaaggee>>.

   <skip-quoted> (default: S)
          This function will go to the next line of non-quoted text which
          comes after a line of quoted text in the internal pager.

6. Sending Mail

6.1. Introduction

   The bindings shown in TTaabbllee  22..1155,,  ""MMoosstt  ccoommmmoonn  mmaaiill  sseennddiinngg  kkeeyyss"" are
   available in the _i_n_d_e_x and _p_a_g_e_r to start a new message.

   _T_a_b_l_e_ _2_._1_5_._ _M_o_s_t_ _c_o_m_m_o_n_ _m_a_i_l_ _s_e_n_d_i_n_g_ _k_e_y_s
    Key    Function              Description
   m     <compose>     compose a new message
   r     <reply>       reply to sender
   g     <group-reply> reply to all recipients
   L     <list-reply>  reply to mailing list address
   f     <forward>     forward message
   b     <bounce>      bounce (remail) message
   Esc k <mail-key>    mail a PGP public key to someone

   _B_o_u_n_c_i_n_g a message sends the message as-is to the recipient you
   specify. _F_o_r_w_a_r_d_i_n_g a message allows you to add comments or modify the
   message you are forwarding. These items are discussed in greater detail
   in the next section "FFoorrwwaarrddiinngg  aanndd  BBoouunncciinngg  MMaaiill".

   NeoMutt will then enter the _c_o_m_p_o_s_e menu and prompt you for the
   recipients to place on the "To:" header field when you hit m to start a
   new message. Next, it will ask you for the "Subject:" field for the
   message, providing a default if you are replying to or forwarding a
   message. You again have the chance to adjust recipients, subject, and
   security settings right before actually sending the message. See also
   $$aasskkcccc, $$aasskkbbcccc, $$aauuttooeeddiitt, $$bboouunnccee, $$ffaasstt__rreeppllyy, and $$iinncclluuddee for
   changing how and if NeoMutt asks these questions.

   When replying, NeoMutt fills these fields with proper values depending
   on the reply type. The types of replying supported are:

   Simple reply
          Reply to the author directly.

   Group reply
          Reply to the author as well to all recipients except you; this
          consults aalltteerrnnaatteess.

   List reply
          Reply to all mailing list addresses found, either specified via
          configuration or auto-detected. See SSeeccttiioonn  1122,,  ""MMaaiilliinngg  LLiissttss""
          for details.

   After getting recipients for new messages, forwards or replies, NeoMutt
   will then automatically start your $$eeddiittoorr on the message body. If the
   $$eeddiitt__hheeaaddeerrss variable is set, the headers will be at the top of the
   message in your editor; the message body should start on a new line
   after the existing blank line at the end of headers. Any messages you
   are replying to will be added in sort order to the message, with
   appropriate $$aattttrriibbuuttiioonn, $$iinnddeenntt__ssttrriinngg and $$ppoosstt__iinnddeenntt__ssttrriinngg. When
   forwarding a message, if the $$mmiimmee__ffoorrwwaarrdd variable is unset, a copy of
   the forwarded message will be included. If you have specified a
   $$ssiiggnnaattuurree, it will be appended to the message.

   Once you have finished editing the body of your mail message, you are
   returned to the _c_o_m_p_o_s_e menu providing the functions shown in
   TTaabbllee  22..1166,,  ""MMoosstt  ccoommmmoonn  ccoommppoossee  mmeennuu  kkeeyyss"" to modify, send or postpone
   the message.

   _T_a_b_l_e_ _2_._1_6_._ _M_o_s_t_ _c_o_m_m_o_n_ _c_o_m_p_o_s_e_ _m_e_n_u_ _k_e_y_s
    Key       Function                       Description
   a     <attach-file>       attach a file
   A     <attach-message>    attach message(s) to the message
   Esc k <attach-key>        attach a PGP public key
   d     <edit-description>  edit description on attachment
   D     <detach-file>       detach a file
   t     <edit-to>           edit the To field
   Esc f <edit-from>         edit the From field
   r     <edit-reply-to>     edit the Reply-To field
   c     <edit-cc>           edit the Cc field
   b     <edit-bcc>          edit the Bcc field
   y     <send-message>      send the message
   s     <edit-subject>      edit the Subject
   S     <smime-menu>        select S/MIME options
   f     <edit-fcc>          specify an "Fcc" mailbox
   p     <pgp-menu>          select PGP options
   P     <postpone-message>  postpone this message until later
   q     <quit>              quit (abort) sending the message
   w     <write-fcc>         write the message to a folder
   i     <ispell>            check spelling (if available on your system)
   ^F    <forget-passphrase> wipe passphrase(s) from memory

   The compose menu is also used to edit the attachments for a message
   which can be either files or other messages. The <attach-message>
   function to will prompt you for a folder to attach messages from. You
   can now tag messages in that folder and they will be attached to the
   message you are sending.

Note

   Note that certain operations like composing a new mail, replying,
   forwarding, etc. are not permitted when you are in that folder. The %r
   in $$ssttaattuuss__ffoorrmmaatt will change to a "A" to indicate that you are in
   attach-message mode.

6.2. Editing the Message Header

   When editing the header because of $$eeddiitt__hheeaaddeerrss being set, there are a
   several pseudo headers available which will not be included in sent
   messages but trigger special NeoMutt behavior.

6.2.1. Fcc: Pseudo Header

   If you specify

   Fcc: _f_i_l_e_n_a_m_e

   as a header, NeoMutt will pick up _f_i_l_e_n_a_m_e just as if you had used the
   <edit-fcc> function in the _c_o_m_p_o_s_e menu. It can later be changed from
   the compose menu.

6.2.2. Attach: Pseudo Header

   You can also attach files to your message by specifying

   Attach: _f_i_l_e_n_a_m_e [_d_e_s_c_r_i_p_t_i_o_n]

   where _f_i_l_e_n_a_m_e is the file to attach and _d_e_s_c_r_i_p_t_i_o_n is an optional
   string to use as the description of the attached file. Spaces in
   filenames have to be escaped using backslash ("\"). The file can be
   removed as well as more added from the compose menu.

6.2.3. Pgp: Pseudo Header

   If you want to use PGP, you can specify

   Pgp: [ E | S | S _<_i_d_> ]

   "E" selects encryption, "S" selects signing and "S<id>" selects signing
   with the given key, setting $$ppggpp__ssiiggnn__aass permanently. The selection can
   later be changed in the compose menu.

6.2.4. In-Reply-To: Header

   When replying to messages, the _I_n_-_R_e_p_l_y_-_T_o_: header contains the
   Message-Id of the message(s) you reply to. If you remove or modify its
   value, NeoMutt will not generate a _R_e_f_e_r_e_n_c_e_s_: field, which allows you
   to create a new message thread, for example to create a new message to
   a mailing list without having to enter the mailing list's address.

   If you intend to start a new thread by replying, please make really
   sure you remove the _I_n_-_R_e_p_l_y_-_T_o_: header in your editor. Otherwise,
   though you'll produce a technically valid reply, some netiquette
   guardians will be annoyed by this so-called "thread hijacking".

6.3. Sending Cryptographically Signed/Encrypted Messages

   If you have told NeoMutt to PGP or S/MIME encrypt a message, it will
   guide you through a key selection process when you try to send the
   message. NeoMutt will not ask you any questions about keys which have a
   certified user ID matching one of the message recipients' mail
   addresses. However, there may be situations in which there are several
   keys, weakly certified user ID fields, or where no matching keys can be
   found.

   In these cases, you are dropped into a menu with a list of keys from
   which you can select one. When you quit this menu, or NeoMutt can't
   find any matching keys, you are prompted for a user ID. You can, as
   usually, abort this prompt using ^G. When you do so, NeoMutt will
   return to the compose screen.

   Once you have successfully finished the key selection, the message will
   be encrypted using the selected public keys when sent out.

   To ensure you can view encrypted messages you have sent, you may wish
   to set $$ppggpp__sseellff__eennccrryypptt and $$ppggpp__ddeeffaauulltt__kkeeyy for PGP, or
   $$ssmmiimmee__sseellff__eennccrryypptt and $$ssmmiimmee__ddeeffaauulltt__kkeeyy for S/MIME.

   Most fields of the entries in the key selection menu (see also
   $$ppggpp__eennttrryy__ffoorrmmaatt) have obvious meanings. But some explanations on the
   capabilities, flags, and validity fields are in order.

   The flags sequence ("%f") will expand to one of the flags in
   TTaabbllee  22..1177,,  ""PPGGPP  kkeeyy  mmeennuu  ffllaaggss"".

   _T_a_b_l_e_ _2_._1_7_._ _P_G_P_ _k_e_y_ _m_e_n_u_ _f_l_a_g_s
   Flag                    Description
   R    The key has been revoked and can't be used.
   X    The key is expired and can't be used.
   d    You have marked the key as disabled.
   c    There are unknown critical self-signature packets.

   The capabilities field ("%c") expands to a two-character sequence
   representing a key's capabilities. The first character gives the key's
   encryption capabilities: A minus sign ("-") means that the key cannot
   be used for encryption. A dot (".") means that it's marked as a
   signature key in one of the user IDs, but may also be used for
   encryption. The letter "e" indicates that this key can be used for
   encryption.

   The second character indicates the key's signing capabilities. Once
   again, a "-" implies "not for signing", "." implies that the key is
   marked as an encryption key in one of the user-ids, and "s" denotes a
   key which can be used for signing.

   Finally, the validity field ("%t") indicates how well-certified a
   user-id is. A question mark ("?") indicates undefined validity, a minus
   character ("-") marks an untrusted association, a space character means
   a partially trusted association, and a plus character ("+") indicates
   complete validity.

6.4. Sending Format=Flowed Messages

6.4.1. Concept

   format=flowed-style messages (or f=f for short) are text/plain messages
   that consist of paragraphs which a receiver's mail client may reformat
   to its own needs which mostly means to customize line lengths
   regardless of what the sender sent. Technically this is achieved by
   letting lines of a "flowable" paragraph end in spaces except for the
   last line.

   While for text-mode clients like NeoMutt it's the best way to assume
   only a standard 80x25 character cell terminal, it may be desired to let
   the receiver decide completely how to view a message.

6.4.2. NeoMutt Support

   NeoMutt only supports setting the required format=flowed MIME parameter
   on outgoing messages if the $$tteexxtt__fflloowweedd variable is set, specifically
   it does not add the trailing spaces.

   After editing the initial message text and before entering the compose
   menu, NeoMutt properly space-stuffs the message. _S_p_a_c_e_-_s_t_u_f_f_i_n_g is
   required by RFC3676 defining format=flowed and means to prepend a space
   to:
     * all lines starting with a space
     * lines starting with the word "From" followed by space
     * all lines starting with ">" which is not intended to be a quote
       character

Note

   NeoMutt only supports space-stuffing for the first two types of lines
   but not for the third: It is impossible to safely detect whether a
   leading > character starts a quote or not. Furthermore, NeoMutt only
   applies space-stuffing _o_n_c_e after the initial edit is finished.

   All leading spaces are to be removed by receiving clients to restore
   the original message prior to further processing.

6.4.3. Editor Considerations

   As NeoMutt provides no additional features to compose f=f messages,
   it's completely up to the user and his editor to produce proper
   messages. Please consider your editor's documentation if you intend to
   send f=f messages.

   Please note that when editing messages from the compose menu several
   times before really sending a mail, it's up to the user to ensure that
   the message is properly space-stuffed.

   For example, _v_i_m provides the w flag for its formatoptions setting to
   assist in creating f=f messages, see :help fo-table for details.

6.4.4. Reformatting

   NeoMutt has some support for reformatting when viewing and replying to
   format=flowed messages. In order to take advantage of these,
   $$rreeffllooww__tteexxtt must be set.
     * Paragraphs are automatically reflowed and wrapped at a width
       specified by $$rreeffllooww__wwrraapp.
     * In its original format, the quoting style of format=flowed messages
       can be difficult to read, and doesn't intermix well with non-flowed
       replies. Setting $$rreeffllooww__ssppaaccee__qquuootteess adds spaces after each level
       of quoting when in the pager and replying in a non-flowed format
       (i.e. with $$tteexxtt__fflloowweedd unset).
     * If $$rreeffllooww__ssppaaccee__qquuootteess is unset, NeoMutt will still add one
       trailing space after all the quotes in the pager (but not when
       replying).

7. Forwarding and Bouncing Mail

   Bouncing and forwarding let you send an existing message to recipients
   that you specify. Bouncing a message sends a verbatim copy of a message
   to alternative addresses as if they were the message's original
   recipients specified in the Bcc header. Forwarding a message, on the
   other hand, allows you to modify the message before it is resent (for
   example, by adding your own comments). Bouncing is done using the
   <bounce> function and forwarding using the <forward> function bound to
   "b" and "f" respectively.

   Forwarding can be done by including the original message in the new
   message's body (surrounded by indicating lines) or including it as a
   MIME attachment, depending on the value of the $$mmiimmee__ffoorrwwaarrdd variable.
   Decoding of attachments, like in the pager, can be controlled by the
   $$ffoorrwwaarrdd__ddeeccooddee and $$mmiimmee__ffoorrwwaarrdd__ddeeccooddee variables, respectively. The
   desired forwarding format may depend on the content, therefore
   $$mmiimmee__ffoorrwwaarrdd is a quadoption which, for example, can be set to
   "ask-no".

   The inclusion of headers is controlled by the current setting of the
   $$wweeeedd variable, unless $$mmiimmee__ffoorrwwaarrdd is set.

   By default a forwarded message does not reference the messages it
   contains. When $$ffoorrwwaarrdd__rreeffeerreenncceess is set, a forwarded message includes
   the "In-Reply-To:" and "References:" headers, just like a reply would.
   Hence the forwarded message becomes part of the original thread instead
   of starting a new one.

   Editing the message to forward follows the same procedure as sending or
   replying to a message does.

8. Postponing Mail

   At times it is desirable to delay sending a message that you have
   already begun to compose. When the <postpone-message> function is used
   in the _c_o_m_p_o_s_e menu, the body of your message and attachments are
   stored in the mailbox specified by the $$ppoossttppoonneedd variable. This means
   that you can recall the message even if you exit NeoMutt and then
   restart it at a later time.

   Once a message is postponed, there are several ways to resume it. From
   the command line you can use the "-p" option, or if you compose a new
   message from the _i_n_d_e_x or _p_a_g_e_r you will be prompted if postponed
   messages exist. If multiple messages are currently postponed, the
   _p_o_s_t_p_o_n_e_d menu will pop up and you can select which message you would
   like to resume.

Note

   If you postpone a reply to a message, the reply setting of the message
   is only updated when you actually finish the message and send it. Also,
   you must be in the same folder with the message you replied to for the
   status of the message to be updated.

   See also the $$ppoossttppoonnee quad-option.

9. Logging

   NeoMutt has different types of logging/error messages
     * Primitive Errors: errors emitted by C library functions such as
       fopen().
     * Errors
     * Warnings
     * Message: Informational messages such as Sorting mailbox....
     * Debug: Debug messages usually only interesting while debugging.

   These log messages are shown in the command bar at the bottom of the UI
   (usually below the status line) and errors are shown in a different
   colour than the other message types. The colours used for displaying
   can be adjusted with color error ... and color message ...,
   respectively. See the ddeessccrriippttiioonn  ooff  ccoolloorr for the precise syntax.

   The command bar shows only the last message. To show the last 100
   messages (this includes all types of messages from debug to error) the
   function <<sshhooww--lloogg--mmeessssaaggeess>> can be used.

   Debug messages are not shown by default. To enable them NeoMutt must be
   compiled with +debug. Furthermore, the debug log level must be set with
   the --dd  ccoommmmaanndd  lliinnee  ppaarraammeetteerr at startup. The -d parameter expects a
   debug level which can range from 1 to 5 and affects verbosity of the
   debug messages. A value of 2 is recommended for the start. If debug
   logging is enabled, all log messages (i.e. errors, warnings, ...,
   debug) are additionally written to the file ~/.neomuttdebug0.

Chapter 3. Configuration

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  LLooccaattiioonn  ooff  IInniittiiaalliizzaattiioonn  FFiilleess

        11..11..  LLooccaattiioonn  ooff  ssyysstteemm  ccoonnffiigg  ffiilleess
        11..22..  LLooccaattiioonn  ooff  uusseerr  ccoonnffiigg  ffiilleess
        11..33..  CCoonnffiigg  PPrriioorriittyy

   22..  SSyynnttaaxx  ooff  IInniittiiaalliizzaattiioonn  FFiilleess
   33..  AAddddrreessss  GGrroouuppss
   44..  DDeeffiinniinngg//UUssiinngg  AAlliiaasseess
   55..  CChhaannggiinngg  tthhee  DDeeffaauulltt  KKeeyy  BBiinnddiinnggss

        55..11..  WWaarrnniinnggss  aabboouutt  DDuupplliiccaatteedd  BBiinnddiinnggss

   66..  DDeeffiinniinngg  AAlliiaasseess  ffoorr  CChhaarraacctteerr  SSeettss
   77..  SSeettttiinngg  VVaarriiaabblleess  BBaasseedd  UUppoonn  MMaaiillbbooxx
   88..  KKeeyybbooaarrdd  MMaaccrrooss
   99..  UUssiinngg  CCoolloorr  aanndd  MMoonnoo  VViiddeeoo  AAttttrriibbuutteess
   1100..  MMeessssaaggee  HHeeaaddeerr  DDiissppllaayy

        1100..11..  HHeeaaddeerr  DDiissppllaayy
        1100..22..  SSeelleeccttiinngg  HHeeaaddeerrss
        1100..33..  OOrrddeerriinngg  DDiissppllaayyeedd  HHeeaaddeerrss

   1111..  AAlltteerrnnaattiivvee  AAddddrreesssseess
   1122..  MMaaiilliinngg  LLiissttss
   1133..  UUssiinngg  MMuullttiippllee  SSppooooll  MMaaiillbbooxxeess
   1144..  MMoonniittoorriinngg  IInnccoommiinngg  MMaaiill
   1155..  UUsseerr--DDeeffiinneedd  HHeeaaddeerrss
   1166..  SSppeecciiffyy  DDeeffaauulltt  FFcccc::  aanndd//oorr  SSaavvee  MMaaiillbbooxx
   1177..  CChhaannggee  SSeettttiinnggss  BBaasseedd  UUppoonn  MMeessssaaggee  RReecciippiieennttss
   1188..  CChhaannggee  SSeettttiinnggss  BBeeffoorree  FFoorrmmaattttiinngg  aa  MMeessssaaggee
   1199..  CChhoooossiinngg  tthhee  CCrryyppttooggrraapphhiicc  KKeeyy  ooff  tthhee  RReecciippiieenntt
   2200..  AAddddiinngg  KKeeyy  SSeeqquueenncceess  ttoo  tthhee  KKeeyybbooaarrdd  BBuuffffeerr
   2211..  EExxeeccuuttiinngg  FFuunnccttiioonnss
   2222..  MMeessssaaggee  SSccoorriinngg
   2233..  SSppaamm  DDeetteeccttiioonn
   2244..  SSeettttiinngg  aanndd  QQuueerryyiinngg  VVaarriiaabblleess

        2244..11..  VVaarriiaabbllee  TTyyppeess
        2244..22..  CCoommmmaannddss
        2244..33..  UUsseerr--DDeeffiinneedd  VVaarriiaabblleess
        2244..44..  TTyyppee  CCoonnvveerrssiioonnss

   2255..  RReeaaddiinngg  IInniittiiaalliizzaattiioonn  CCoommmmaannddss  FFrroomm  AAnnootthheerr  FFiillee
   2266..  RReemmoovviinngg  HHooookkss
   2277..  FFoorrmmaatt  SSttrriinnggss

        2277..11..  BBaassiicc  uussaaggee
        2277..22..  CCoonnddiittiioonnaallss
        2277..33..  FFiilltteerrss
        2277..44..  PPaaddddiinngg
        2277..55..  CCoonnddiittiioonnaall  DDaatteess

   2288..  CCoonnttrrooll  aalllloowweedd  hheeaaddeerr  ffiieellddss  iinn  aa  mmaaiillttoo::  UURRLL

1. Location of Initialization Files

   When NeoMutt starts up it looks for two configuration files - one
   "system" file and one "user" file.

   NeoMutt first reads the system configuration file, then the user
   configuration file. The two files are merged in the sense that "last
   setting wins". That is, if a setting is defined in both files, the user
   configuration file's value for that setting is the one that takes
   precedence and becomes effective.

   NeoMutt searches for several different file names when looking for
   config. It looks for NeoMutt config files before Mutt config files and
   versioned config before plain config. For example:

   _T_a_b_l_e_ _3_._1_._ _N_e_o_M_u_t_t_ _c_o_n_f_i_g_ _f_i_l_e_ _s_e_a_r_c_h_ _o_r_d_e_r
   neomuttrc
   muttrc

   This allows the user to create separate NeoMutt and Mutt config files
   on the same system.

1.1. Location of system config files

   NeoMutt will search for a system config file in a neomutt directory in
   several places. First it searches the locations specified in the
   XDG_CONFIG_DIRS environment variable, which defaults to /etc/xdg. Next,
   it looks in /etc. Finally, it tries /usr/share.

   The system config file will not be read if the "-n" option is used on
   the ccoommmmaanndd  lliinnee.

   NeoMutt will read just one file, the first file it finds, from the list
   below.

   _T_a_b_l_e_ _3_._2_._ _N_e_o_M_u_t_t_ _s_y_s_t_e_m_ _c_o_n_f_i_g_ _f_i_l_e_ _l_o_c_a_t_i_o_n_s
          File Location                     Notes
   /etc/xdg/neomutt/neomuttrc
   /etc/xdg/neomutt/Muttrc      Note the case of the filename
   /etc/neomuttrc
   /etc/Muttrc                  Note the case of the filename
   /usr/share/neomutt/neomuttrc
   /usr/share/neomutt/Muttrc    Note the case of the filename

1.2. Location of user config files

   NeoMutt will search for a user config file in several places. First it
   looks in the directory specified in the XDG_CONFIG_HOME environment
   variable, which defaults to ~/.config/neomutt. Next, it looks in ~
   (your home directory). Finally, it tries ~/.neomutt.

   You may specify your own location for the user config file using the
   "-F" option on the ccoommmmaanndd  lliinnee.

   NeoMutt will read just one file, the first file it finds, from the list
   below.

   _T_a_b_l_e_ _3_._3_._ _N_e_o_M_u_t_t_ _u_s_e_r_ _c_o_n_f_i_g_ _f_i_l_e_ _l_o_c_a_t_i_o_n_s
          File Location
   ~/.config/neomutt/neomuttrc
   ~/.config/neomutt/muttrc
   ~/.config/mutt/neomuttrc
   ~/.config/mutt/muttrc
   ~/.neomutt/neomuttrc
   ~/.neomutt/muttrc
   ~/.mutt/neomuttrc
   ~/.mutt/muttrc
   ~/.neomuttrc
   ~/.muttrc

1.3. Config Priority

   The majority of NeoMutt's config will be read from two files: the
   system config in /etc and the user config in, e.g. ~/.neomuttrc

   The last file that gets read will overwrite any settings from previous
   config files. This means that an administrator can set some defaults
   which the user can override.

   Additionally, there are a handful of config items which can be set
   using an environment variable. They have a lower priority than the
   NeoMutt config files: $$eeddiittoorr, $$ffrroomm, $$mmaaiillccaapp__ppaatthh, $$nneewwss__sseerrvveerr,
   sshheellll, $$ssppoooollffiillee, $$ttmmppddiirr, $$vviissuuaall.

   Finally, it's possible to sseett  ssoommee  vvaarriiaabblleess  ddiirreeccttllyy on the
   command-line using the -e option.

   _T_a_b_l_e_ _3_._4_._ _C_o_n_f_i_g_ _P_r_i_o_r_i_t_y
   Priority Where Example
   Highest Command line neomutt -e 'set from="John Doe
   <john@example.com>"'
     User Config ~/.neomuttrc
     System Config /etc/neomuttrc
     Environment export EDITOR="/usr/bin/vim"
   Lowest Built-in Defaults hard-coded into NeoMutt

2. Syntax of Initialization Files

   An initialization file consists of a series of ccoommmmaannddss. Each line of
   the file may contain one or more commands. When multiple commands are
   used, they must be separated by a semicolon (";").

   _E_x_a_m_p_l_e_ _3_._1_._ _M_u_l_t_i_p_l_e_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _c_o_m_m_a_n_d_s_ _p_e_r_ _l_i_n_e
set realname='John Smith' ; ignore x-

   The hash mark, or pound sign ("#"), is used as a "comment" character.
   You can use it to annotate your initialization file. All text after the
   comment character to the end of the line is ignored.

   _E_x_a_m_p_l_e_ _3_._2_._ _C_o_m_m_e_n_t_i_n_g_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _f_i_l_e_s
my_hdr X-Disclaimer: Why are you listening to me?   # This is a comment

   Single quotes ("'") and double quotes (""") can be used to quote
   strings which contain spaces or other special characters. The
   difference between the two types of quotes is similar to that of many
   popular shell programs, namely that a single quote is used to specify a
   literal string (one that is not interpreted for shell variables or
   quoting with a backslash [see next paragraph]), while double quotes
   indicate a string for which should be evaluated. For example, backticks
   are evaluated inside of double quotes, but _n_o_t for single quotes.

   "\" quotes the next character, just as in shells such as bash and zsh.
   For example, if want to put quotes """ inside of a string, you can use
   "\" to force the next character to be a literal instead of interpreted
   character.

   _E_x_a_m_p_l_e_ _3_._3_._ _E_s_c_a_p_i_n_g_ _q_u_o_t_e_s_ _i_n_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _f_i_l_e_s
set realname="Michael \"MuttDude\" Elkins"

   "\\" means to insert a literal "\" into the line. "\n" and "\r" have
   their usual C meanings of linefeed and carriage-return, respectively.

   A "\" at the end of a line can be used to split commands over multiple
   lines as it "escapes" the line end, provided that the split points
   don't appear in the middle of command names. Lines are first
   concatenated before interpretation so that a multi-line can be
   commented by commenting out the first line only.

   _E_x_a_m_p_l_e_ _3_._4_._ _S_p_l_i_t_t_i_n_g_ _l_o_n_g_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _c_o_m_m_a_n_d_s_ _o_v_e_r_ _s_e_v_e_r_a_l_ _l_i_n_e_s
set status_format="some very \
long value split \
over several lines"

   It is also possible to substitute the output of a Unix command in an
   initialization file. This is accomplished by enclosing the command in
   backticks (``). In EExxaammppllee  33..55,,  ""UUssiinngg  eexxtteerrnnaall  ccoommmmaanndd''ss  oouuttppuutt  iinn
   ccoonnffiigguurraattiioonn  ffiilleess"", the output of the Unix command "uname -a" will be
   substituted before the line is parsed. Since initialization files are
   line oriented, only the first line of output from the Unix command will
   be substituted.

   _E_x_a_m_p_l_e_ _3_._5_._ _U_s_i_n_g_ _e_x_t_e_r_n_a_l_ _c_o_m_m_a_n_d_'_s_ _o_u_t_p_u_t_ _i_n_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _f_i_l_e_s
my_hdr X-Operating-System: `uname -a`

   Both environment variables and NeoMutt variables can be accessed by
   prepending "$" to the name of the variable. For example,

   _E_x_a_m_p_l_e_ _3_._6_._ _U_s_i_n_g_ _e_n_v_i_r_o_n_m_e_n_t_ _v_a_r_i_a_b_l_e_s_ _i_n_ _c_o_n_f_i_g_u_r_a_t_i_o_n_ _f_i_l_e_s
set record=+sent_on_$HOSTNAME

   will cause NeoMutt to save outgoing messages to a folder named
   "sent_on_kremvax" if the environment variable $HOSTNAME is set to
   "kremvax." (See $$rreeccoorrdd for details.)

   NeoMutt expands the variable when it is assigned, not when it is used.
   If the value of a variable on the right-hand side of an assignment
   changes after the assignment, the variable on the left-hand side will
   not be affected.

   The commands understood by NeoMutt are explained in the next
   paragraphs. For a complete list, see the ccoommmmaanndd  rreeffeerreennccee.

   All configuration files are expected to be in the current locale as
   specified by the $$cchhaarrsseett variable which doesn't have a default value
   since it's determined by NeoMutt at startup. If a configuration file is
   not encoded in the same character set the $$ccoonnffiigg__cchhaarrsseett variable
   should be used: all lines starting with the next are recoded from
   $$ccoonnffiigg__cchhaarrsseett to $$cchhaarrsseett.

   This mechanism should be avoided if possible as it has the following
   implications:
     * These variables should be set early in a configuration file with
       $$cchhaarrsseett preceding $$ccoonnffiigg__cchhaarrsseett so NeoMutt knows what character
       set to convert to.
     * If $$ccoonnffiigg__cchhaarrsseett is set, it should be set in each configuration
       file because the value is global and _n_o_t per configuration file.
     * Because NeoMutt first recodes a line before it attempts to parse
       it, a conversion introducing question marks or other characters as
       part of errors (unconvertable characters, transliteration) may
       introduce syntax errors or silently change the meaning of certain
       tokens (e.g. inserting question marks into regular expressions).

3. Address Groups

   Usage:

   group [ -group _n_a_m_e ...] { -rx _e_x_p_r ... | -addr _e_x_p_r ... }
   ungroup [ -group _n_a_m_e ...] { _* | -rx _e_x_p_r ... | -addr _e_x_p_r ... }

   NeoMutt supports grouping addresses logically into named groups. An
   address or address pattern can appear in several groups at the same
   time. These groups can be used in ppaatttteerrnnss (for searching, limiting and
   tagging) and in hooks by using group patterns. This can be useful to
   classify mail and take certain actions depending on in what groups the
   message is. For example, the NeoMutt user's mailing list would fit into
   the categories "mailing list" and "NeoMutt-related". Using sseenndd--hhooookk,
   the sender can be set to a dedicated one for writing mailing list
   messages, and the signature could be set to a NeoMutt-related one for
   writing to a NeoMutt list - for other lists, the list sender setting
   still applies but a different signature can be selected. Or, given a
   group only containing recipients known to accept encrypted mail,
   "auto-encryption" can be achieved easily.

   The _g_r_o_u_p command is used to directly add either addresses or regular
   expressions to the specified group or groups. The different categories
   of arguments to the _g_r_o_u_p command can be in any order. The flags -rx
   and -addr specify what the following strings (that cannot begin with a
   hyphen) should be interpreted as: either a regular expression or an
   email address, respectively.

   These address groups can also be created implicitly by the aalliiaass,
   lliissttss, ssuubbssccrriibbee and aalltteerrnnaatteess commands by specifying the optional
   -group option. For example,
alternates -group me address1 address2
alternates -group me -group work address3

   would create a group named "me" which contains all your addresses and a
   group named "work" which contains only your work address _a_d_d_r_e_s_s_3.
   Besides many other possibilities, this could be used to automatically
   mark your own messages in a mailing list folder as read or use a
   special signature for work-related messages.

   The _u_n_g_r_o_u_p command is used to remove addresses or regular expressions
   from the specified group or groups. The syntax is similar to the _g_r_o_u_p
   command, however the special character * can be used to empty a group
   of all of its contents. As soon as a group gets empty because all
   addresses and regular expressions have been removed, it'll internally
   be removed, too (i.e. there cannot be an empty group). When removing
   regular expressions from a group, the pattern must be specified exactly
   as given to the _g_r_o_u_p command or -group argument.

4. Defining/Using Aliases

   Usage:

   alias [ -group _n_a_m_e ...] _k_e_y _a_d_d_r_e_s_s [ _,_ _a_d_d_r_e_s_s ...]
   unalias [ -group _n_a_m_e ...] { _* | _k_e_y ... }

   It's usually very cumbersome to remember or type out the address of
   someone you are communicating with. NeoMutt allows you to create
   "aliases" which map a short string to a full address.

Note

   If you want to create an alias for more than one address, you _m_u_s_t
   separate the addresses with a comma (",").

   The optional -group argument to _a_l_i_a_s causes the aliased address(es) to
   be added to the named _g_r_o_u_p.

   To remove an alias or aliases ("*" means all aliases):
alias muttdude me@cs.hmc.edu (Michael Elkins)
alias theguys manny, moe, jack

   Unlike other mailers, NeoMutt doesn't require aliases to be defined in
   a special file. The _a_l_i_a_s command can appear anywhere in a
   configuration file, as long as this file is ssoouurrcceedd. Consequently, you
   can have multiple alias files, or you can have all aliases defined in
   your .neomuttrc.

   On the other hand, the <<ccrreeaattee--aalliiaass>> function can use only one file,
   the one pointed to by the $$aalliiaass__ffiillee variable (which is ~/.neomuttrc
   by default). This file is not special either, in the sense that NeoMutt
   will happily append aliases to any file, but in order for the new
   aliases to take effect you need to explicitly ssoouurrccee this file too.

   _E_x_a_m_p_l_e_ _3_._7_._ _C_o_n_f_i_g_u_r_i_n_g_ _e_x_t_e_r_n_a_l_ _a_l_i_a_s_ _f_i_l_e_s
source /usr/local/share/NeoMutt.aliases
source ~/.mail_aliases
set alias_file=~/.mail_aliases

   To use aliases, you merely use the alias at any place in NeoMutt where
   NeoMutt prompts for addresses, such as the _T_o_: or _C_c_: prompt. You can
   also enter aliases in your editor at the appropriate headers if you
   have the $$eeddiitt__hheeaaddeerrss variable set.

   In addition, at the various address prompts, you can use the tab
   character to expand a partial alias to the full alias. If there are
   multiple matches, NeoMutt will bring up a menu with the matching
   aliases. In order to be presented with the full list of aliases, you
   must hit tab without a partial alias, such as at the beginning of the
   prompt or after a comma denoting multiple addresses.

   In the alias menu, you can select as many aliases as you want with the
   select-entry key (default: <Return>), and use the _e_x_i_t key (default: q)
   to return to the address prompt.

5. Changing the Default Key Bindings

   Usage:

   bind _m_a_p [ _,_m_a_p ...] _k_e_y _f_u_n_c_t_i_o_n

   This command allows you to change the default key bindings (operation
   invoked when pressing a key).

   _m_a_p specifies in which menu the binding belongs. Multiple maps may be
   specified by separating them with commas (no additional whitespace is
   allowed). The currently defined maps are:

   generic
          This is not a real menu, but is used as a fallback for all of
          the other menus except for the pager and editor modes. If a key
          is not defined in another menu, NeoMutt will look for a binding
          to use in this menu. This allows you to bind a key to a certain
          function in multiple menus instead of having multiple _b_i_n_d
          statements to accomplish the same task.

   alias
          The alias menu is the list of your personal aliases as defined
          in your .neomuttrc. It is the mapping from a short alias name to
          the full email address(es) of the recipient(s).

   attach
          The attachment menu is used to access the attachments on
          received messages.

   browser
          The browser is used for both browsing the local directory
          structure, and for listing all of your incoming mailboxes.

   editor
          The editor is used to allow the user to enter a single line of
          text, such as the _T_o or _S_u_b_j_e_c_t prompts in the compose menu.

   index
          The index is the list of messages contained in a mailbox.

   compose
          The compose menu is the screen used when sending a new message.

   pager
          The pager is the mode used to display message/attachment data,
          and help listings.

   pgp
          The pgp menu is used to select the OpenPGP keys used to encrypt
          outgoing messages.

   smime
          The smime menu is used to select the OpenSSL certificates used
          to encrypt outgoing messages.

   postpone
          The postpone menu is similar to the index menu, except is used
          when recalling a message the user was composing, but saved until
          later.

   query
          The query menu is the browser for results returned by
          $$qquueerryy__ccoommmmaanndd.

   mix
          The mixmaster screen is used to select remailer options for
          outgoing messages (if NeoMutt is compiled with Mixmaster
          support).

   _k_e_y is the key (or key sequence) you wish to bind. To specify a control
   character, use the sequence _\_C_x, where _x is the letter of the control
   character (for example, to specify control-A use "\Ca"). Note that the
   case of _x as well as _\_C is ignored, so that _\_C_A, _\_C_a, _\_c_A and _\_c_a are
   all equivalent. An alternative form is to specify the key as a three
   digit octal number prefixed with a "\" (for example _\_1_7_7 is equivalent
   to _\_c_?). In addition, _k_e_y may be a symbolic name as shown in TTaabbllee  33..55,,
   ""SSyymmbboolliicc  kkeeyy  nnaammeess"".

   _T_a_b_l_e_ _3_._5_._ _S_y_m_b_o_l_i_c_ _k_e_y_ _n_a_m_e_s
   Symbolic name       Meaning
   \t            tab
   <tab>         tab
   <backtab>     backtab / shift-tab
   \r            carriage return
   \n            newline
   \e            escape/alt
   <esc>         escape/alt
   <up>          up arrow
   <down>        down arrow
   <left>        left arrow
   <right>       right arrow
   <pageup>      Page Up
   <pagedown>    Page Down
   <backspace>   Backspace
   <delete>      Delete
   <insert>      Insert
   <enter>       Enter
   <return>      Return
   <home>        Home
   <end>         End
   <space>       Space bar
   <f1>          function key 1
   <f10>         function key 10

   The <what-key> function can be used to explore keycode and symbolic
   names for other keys on your keyboard. Executing this function will
   display information about each key pressed, until terminated by ^G.

   _k_e_y does not need to be enclosed in quotes unless it contains a space
   (" ") or semi-colon (";").

   _f_u_n_c_t_i_o_n specifies which action to take when _k_e_y is pressed. For a
   complete list of functions, see the rreeffeerreennccee. Note that the _b_i_n_d
   expects _f_u_n_c_t_i_o_n to be specified without angle brackets.

   The special function <noop> unbinds the specified key sequence.

5.1. Warnings about Duplicated Bindings

   Due to a limitation of NeoMutt, creating key bindings, or macros, will
   overwrite existing mappings with similar, shorter, names.
bind index g  group-reply
bind index gg first-entry

   In this example, the g binding will be overwritten and cannot be used.
   Newer versions of NeoMutt will warn the user about this.

   To avoid warnings on startup, first set the shorter binding to noop (no
   operation).
bind index g  noop
bind index gg first-entry

6. Defining Aliases for Character Sets

   Usage:

   charset-hook _a_l_i_a_s _c_h_a_r_s_e_t
   iconv-hook _c_h_a_r_s_e_t _l_o_c_a_l_-_c_h_a_r_s_e_t

   The _c_h_a_r_s_e_t_-_h_o_o_k command defines an alias for a character set. This is
   useful to properly display messages which are tagged with a character
   set name not known to NeoMutt.

   The _i_c_o_n_v_-_h_o_o_k command defines a system-specific name for a character
   set. This is helpful when your systems character conversion library
   insists on using strange, system-specific names for character sets.

7. Setting Variables Based Upon Mailbox

   Usage:

   folder-hook _r_e_g_e_x _c_o_m_m_a_n_d

   It is often desirable to change settings based on which mailbox you are
   reading. The _f_o_l_d_e_r_-_h_o_o_k command provides a method by which you can
   execute any configuration command. _r_e_g_e_x is a regular expression
   specifying in which mailboxes to execute _c_o_m_m_a_n_d before loading. If a
   mailbox matches multiple _f_o_l_d_e_r_-_h_o_o_ks, they are executed in the order
   given in the .neomuttrc.

   The regex parameter has mmaaiillbbooxx  sshhoorrttccuutt expansion performed on the
   first character. See MMaaiillbbooxx  MMaattcchhiinngg  iinn  HHooookkss for more details.

Note

   If you use the "!" shortcut for $$ssppoooollffiillee at the beginning of the
   pattern, you must place it inside of double or single quotes in order
   to distinguish it from the logical _n_o_t operator for the expression.

Note

   Settings are _n_o_t restored when you leave the mailbox. For example, a
   command action to perform is to change the sorting method based upon
   the mailbox being read:
folder-hook work "set sort=threads"

   However, the sorting method is not restored to its previous value when
   reading a different mailbox. To specify a _d_e_f_a_u_l_t command, use the
   pattern "." before other _f_o_l_d_e_r_-_h_o_o_ks adjusting a value on a per-folder
   basis because _f_o_l_d_e_r_-_h_o_o_ks are evaluated in the order given in the
   configuration file.

Note

   The keyboard buffer will not be processed until after all hooks are
   run; multiple ppuusshh or eexxeecc commands will end up being processed in
   reverse order.

   The following example will set the ssoorrtt variable to date-sent for all
   folders but to threads for all folders containing "work" in their name.

   _E_x_a_m_p_l_e_ _3_._8_._ _S_e_t_t_i_n_g_ _s_o_r_t_ _m_e_t_h_o_d_ _b_a_s_e_d_ _o_n_ _m_a_i_l_b_o_x_ _n_a_m_e
folder-hook . "set sort=date-sent"
folder-hook work "set sort=threads"

8. Keyboard Macros

   Usage:

   macro _m_e_n_u [ _,_m_e_n_u ...] _k_e_y _s_e_q_u_e_n_c_e [ _d_e_s_c_r_i_p_t_i_o_n ]

   Macros are useful when you would like a single key to perform a series
   of actions. When you press _k_e_y in menu _m_e_n_u, NeoMutt will behave as if
   you had typed _s_e_q_u_e_n_c_e. So if you have a common sequence of commands
   you type, you can create a macro to execute those commands with a
   single key or fewer keys.

   _m_e_n_u is the mmaapp which the macro will be bound in. Multiple maps may be
   specified by separating multiple menu arguments by commas. Whitespace
   may not be used in between the menu arguments and the commas separating
   them.

   _k_e_y and _s_e_q_u_e_n_c_e are expanded by the same rules as the kkeeyy  bbiinnddiinnggss
   with some additions. The first is that control characters in _s_e_q_u_e_n_c_e
   can also be specified as _^_x. In order to get a caret ("^") you need to
   use _^_^. Secondly, to specify a certain key such as _u_p or to invoke a
   function directly, you can use the format _<_k_e_y_ _n_a_m_e_> and _<_f_u_n_c_t_i_o_n
   _n_a_m_e_>. For a listing of key names see the section on kkeeyy  bbiinnddiinnggss.
   Functions are listed in the rreeffeerreennccee.

   The advantage with using function names directly is that the macros
   will work regardless of the current key bindings, so they are not
   dependent on the user having particular key definitions. This makes
   them more robust and portable, and also facilitates defining of macros
   in files used by more than one user (e.g., the system neomuttrc).

   Optionally you can specify a descriptive text after _s_e_q_u_e_n_c_e, which is
   shown in the help screens if they contain a description.

Note

   Macro definitions (if any) listed in the help screen(s), are silently
   truncated at the screen width, and are not wrapped.

9. Using Color and Mono Video Attributes

   Usage:

   color _o_b_j_e_c_t _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d
   color { header | body } _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d _r_e_g_e_x
   color index-object _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d _p_a_t_t_e_r_n
   color compose _c_o_m_p_o_s_e_o_b_j_e_c_t _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d
   uncolor { index-object | header | body } { _* | _p_a_t_t_e_r_n ... }

   If your terminal supports color, you can spice up NeoMutt by creating
   your own color scheme. To define the color of an object (type of
   information), you must specify both a foreground color _a_n_d a background
   color (it is not possible to only specify one or the other).

   _h_e_a_d_e_r and _b_o_d_y match _r_e_g_e_x in the header/body of a message,
   _i_n_d_e_x_-_o_b_j_e_c_t can match _p_a_t_t_e_r_n (see SSeeccttiioonn  33,,  ""PPaatttteerrnnss::  SSeeaarrcchhiinngg,,
   LLiimmiittiinngg  aanndd  TTaaggggiinngg"") in the message index. Note that IMAP server-side
   searches (=b, =B, =h) are not supported for color index patterns.

   When $$hheeaaddeerr__ccoolloorr__ppaarrttiiaall is unset (the default), a _h_e_a_d_e_r matched by
   _r_e_g_e_x will have color applied to the entire header. When set, color is
   applied only to the exact text matched by _r_e_g_e_x.

   _o_b_j_e_c_t can be one of:
     * attachment
     * bold (highlighting bold patterns in the body of messages)
     * error (error messages printed by NeoMutt)
     * hdrdefault (default color of the message header in the pager)
     * index_author (color of the author name in the index, uses _p_a_t_t_e_r_n)
     * index_collapsed (the number of messages in a collapsed thread in
       the index)
     * index_date (color of the date field in the index)
     * index_flags (color of the message flags in the index)
     * index_label (color of the message label in the index)
     * index_number (color of the message number in the index)
     * index_size (color of the message size and line number in the index)
     * index_subject (color of the subject in the index, uses _p_a_t_t_e_r_n)
     * indicator (arrow or bar used to indicate the current item in a
       menu)
     * markers (the "+" markers at the beginning of wrapped lines in the
       pager)
     * message (informational messages)
     * normal
     * pprrooggrreessss (visual progress bar)
     * prompt
     * quoted (text matching $$qquuoottee__rreeggeexx in the body of a message)
     * quoted1, quoted2, ..., quoted _N (higher levels of quoting)
     * search (highlighting of words in the pager)
     * signature
     * status (mode lines used to display info about the mailbox or
       message)
     * tilde (the "~" used to pad blank lines in the pager)
     * tree (thread tree drawn in the message index and attachment menu)
     * underline (highlighting underlined patterns in the body of
       messages)

   _c_o_m_p_o_s_e_o_b_j_e_c_t can be one of:
     * header
     * security_encrypt
     * security_sign
     * security_both
     * security_none

   _i_n_d_e_x_-_o_b_j_e_c_t can be one of the following:
     * index (default highlighting of the entire index line, uses _p_a_t_t_e_r_n)
     * index_date (the date field)
     * index_flags (the message flags, %S %Z, uses _p_a_t_t_e_r_n)
     * index_number (the message number, %C)
     * index_collapsed (the number of messages in a collapsed thread, %M)
     * index_author (the author name, %A %a %F %L %n, uses _p_a_t_t_e_r_n)
     * index_subject (the subject, %s, uses _p_a_t_t_e_r_n)
     * index_size (the message size, %c %l)
     * index_label (the message label, %y %Y)
     * index_tags (the transformed message tags, %g)
     * index_tag (an individual message tag, %G, uses _p_a_t_t_e_r_n_ _/_ _t_a_g_ _n_a_m_e)

   _f_o_r_e_g_r_o_u_n_d and _b_a_c_k_g_r_o_u_n_d can be one of the following:
     * white
     * black
     * green
     * magenta
     * blue
     * cyan
     * yellow
     * red
     * default
     * color _x

   _f_o_r_e_g_r_o_u_n_d can optionally be prefixed with the keyword bright to make
   the foreground color boldfaced (e.g., brightred). alert to make a
   blinking/alert color (e.g., alertred).

   If your terminal supports it, the special keyword _d_e_f_a_u_l_t can be used
   as a transparent color. The value _b_r_i_g_h_t_d_e_f_a_u_l_t is also valid. If
   NeoMutt is linked against the _S_-_L_a_n_g library, you also need to set the
   $COLORFGBG environment variable to the default colors of your terminal
   for this to work; for example (for Bourne-like shells):
set COLORFGBG="green;black"
export COLORFGBG

Note

   The _S_-_L_a_n_g library requires you to use the _l_i_g_h_t_g_r_a_y and _b_r_o_w_n keywords
   instead of _w_h_i_t_e and _y_e_l_l_o_w when setting this variable.

Note

   The _u_n_c_o_l_o_r command can be applied to the index, header and body
   objects only. It removes entries from the list. You _m_u_s_t specify the
   same pattern specified in the _c_o_l_o_r command for it to be removed. The
   pattern "*" is a special token which means to clear the color list of
   all entries.

   NeoMutt also recognizes the keywords _c_o_l_o_r_0, _c_o_l_o_r_1, ..., _c_o_l_o_r _N_-_1 (_N
   being the number of colors supported by your terminal). This is useful
   when you remap the colors for your display (for example by changing the
   color associated with _c_o_l_o_r_2 for your xterm), since color names may
   then lose their normal meaning.

   If your terminal does not support color, it is still possible change
   the video attributes through the use of the "mono" command. Usage:

   mono _o_b_j_e_c_t _a_t_t_r_i_b_u_t_e
   mono { header | body } _a_t_t_r_i_b_u_t_e _r_e_g_e_x
   mono index-object _a_t_t_r_i_b_u_t_e _p_a_t_t_e_r_n
   unmono { index-object | header | body } { _* | _p_a_t_t_e_r_n ... }

   For _o_b_j_e_c_t, see the _c_o_l_o_r command. _a_t_t_r_i_b_u_t_e can be one of the
   following:
     * none
     * bold
     * underline
     * reverse
     * standout

10. Message Header Display

10.1. Header Display

   When displaying a message in the pager, NeoMutt folds long header lines
   at $$wwrraapp columns. Though there're precise rules about where to break
   and how, NeoMutt always folds headers using a tab for readability.
   (Note that the sending side is not affected by this, NeoMutt tries to
   implement standards compliant folding.)

10.2. Selecting Headers

   Usage:

   ignore _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ...]
   unignore { _* | _p_a_t_t_e_r_n ... }

   Messages often have many header fields added by automatic processing
   systems, or which may not seem useful to display on the screen. This
   command allows you to specify header fields which you don't normally
   want to see in the pager.

   You do not need to specify the full header field name. For example,
   "ignore content-" will ignore all header fields that begin with the
   pattern "content-". "ignore *" will ignore all headers.

   To remove a previously added token from the list, use the "unignore"
   command. The "unignore" command will make NeoMutt display headers with
   the given pattern. For example, if you do "ignore x-" it is possible to
   "unignore x-mailer".

   "unignore *" will remove all tokens from the ignore list.

   _E_x_a_m_p_l_e_ _3_._9_._ _H_e_a_d_e_r_ _w_e_e_d_i_n_g
# Sven's draconian header weeding
ignore *
unignore from date subject to cc
unignore organization organisation x-mailer: x-newsreader: x-mailing-list:
unignore posted-to:

10.3. Ordering Displayed Headers

   Usage:

   hdr_order _h_e_a_d_e_r [ _h_e_a_d_e_r ...]
   unhdr_order { _* | _h_e_a_d_e_r ... }

   With the _h_d_r___o_r_d_e_r command you can specify an order in which NeoMutt
   will attempt to present these headers to you when viewing messages.

   "_u_n_h_d_r___o_r_d_e_r*" will clear all previous headers from the order list,
   thus removing the header order effects set by the system-wide startup
   file.

   _E_x_a_m_p_l_e_ _3_._1_0_._ _C_o_n_f_i_g_u_r_i_n_g_ _h_e_a_d_e_r_ _d_i_s_p_l_a_y_ _o_r_d_e_r
hdr_order From Date: From: To: Cc: Subject:

11. Alternative Addresses

   Usage:

   alternates [ -group _n_a_m_e ...] _r_e_g_e_x [ _r_e_g_e_x ...]
   unalternates [ -group _n_a_m_e ...] { _* | _r_e_g_e_x ... }

   With various functions, NeoMutt will treat messages differently,
   depending on whether you sent them or whether you received them from
   someone else. For instance, when replying to a message that you sent to
   a different party, NeoMutt will automatically suggest to send the
   response to the original message's recipients - responding to yourself
   won't make much sense in many cases. (See $$rreeppllyy__ttoo.)

   Many users receive e-mail under a number of different addresses. To
   fully use NeoMutt's features here, the program must be able to
   recognize what e-mail addresses you receive mail under. That's the
   purpose of the _a_l_t_e_r_n_a_t_e_s command: It takes a list of regular
   expressions, each of which can identify an address under which you
   receive e-mail.

   As addresses are matched using regular expressions and not exact strict
   comparisons, you should make sure you specify your addresses as precise
   as possible to avoid mismatches. For example, if you specify:
alternates user@example

   NeoMutt will consider "some-user@example" as being your address, too
   which may not be desired. As a solution, in such cases addresses should
   be specified as:
alternates '^user@example$'

   The -group flag causes all of the subsequent regular expressions to be
   added to the named group.

   The _u_n_a_l_t_e_r_n_a_t_e_s command can be used to write exceptions to _a_l_t_e_r_n_a_t_e_s
   patterns. If an address matches something in an _a_l_t_e_r_n_a_t_e_s command, but
   you nonetheless do not think it is from you, you can list a more
   precise pattern under an _u_n_a_l_t_e_r_n_a_t_e_s command.

   To remove a regular expression from the _a_l_t_e_r_n_a_t_e_s list, use the
   _u_n_a_l_t_e_r_n_a_t_e_s command with exactly the same _r_e_g_e_x. Likewise, if the
   _r_e_g_e_x for an _a_l_t_e_r_n_a_t_e_s command matches an entry on the _u_n_a_l_t_e_r_n_a_t_e_s
   list, that _u_n_a_l_t_e_r_n_a_t_e_s entry will be removed. If the _r_e_g_e_x for
   _u_n_a_l_t_e_r_n_a_t_e_s is "*", _a_l_l_ _e_n_t_r_i_e_s on _a_l_t_e_r_n_a_t_e_s will be removed.

12. Mailing Lists

   Usage:

   lists [ -group _n_a_m_e ...] _r_e_g_e_x [ _r_e_g_e_x ...]
   unlists { _* | _r_e_g_e_x ... }
   subscribe [ -group _n_a_m_e ...] _r_e_g_e_x [ _r_e_g_e_x ...]
   unsubscribe { _* | _r_e_g_e_x ... }

   NeoMutt has a few nice features for hhaannddlliinngg  mmaaiilliinngg  lliissttss. In order to
   take advantage of them, you must specify which addresses belong to
   mailing lists, and which mailing lists you are subscribed to. NeoMutt
   also has limited support for auto-detecting mailing lists: it supports
   parsing mailto: links in the common List-Post: header which has the
   same effect as specifying the list address via the _l_i_s_t_s command
   (except the group feature). Once you have done this, the <<lliisstt--rreeppllyy>>
   function will work for all known lists. Additionally, when you send a
   message to a known list and $$ffoolllloowwuupp__ttoo is set, Mutt will add a
   Mail-Followup-To header. For unsubscribed lists, this will include your
   personal address, ensuring you receive a copy of replies. For
   subscribed mailing lists, the header will not, telling other users'
   mail user agents not to send copies of replies to your personal
   address.

Note

   The Mail-Followup-To header is a non-standard extension which is not
   supported by all mail user agents. Adding it is not bullet-proof
   against receiving personal CCs of list messages. Also note that the
   generation of the Mail-Followup-To header is controlled by the
   $$ffoolllloowwuupp__ttoo configuration variable since it's common practice on some
   mailing lists to send Cc upon replies (which is more a group- than a
   list-reply).

   More precisely, NeoMutt maintains lists of patterns for the addresses
   of known and subscribed mailing lists. Every subscribed mailing list is
   known. To mark a mailing list as known, use the _l_i_s_t command. To mark
   it as subscribed, use _s_u_b_s_c_r_i_b_e.

   You can use regular expressions with both commands. To mark all
   messages sent to a specific bug report's address on Debian's bug
   tracking system as list mail, for instance, you could say
subscribe [0-9]+.*@bugs.debian.org

   as it's often sufficient to just give a portion of the list's e-mail
   address.

   Specify as much of the address as you need to to remove ambiguity. For
   example, if you've subscribed to the NeoMutt mailing list, you will
   receive mail addressed to neomutt-users@neomutt.org. So, to tell
   NeoMutt that this is a mailing list, you could add lists neomutt-users@
   to your initialization file. To tell NeoMutt that you are subscribed to
   it, add _s_u_b_s_c_r_i_b_e neomutt-users to your initialization file instead. If
   you also happen to get mail from someone whose address is
   neomutt-users@example.com, you could use
   _l_i_s_t_s^neomutt-users@neomutt\\.org$ or
   _s_u_b_s_c_r_i_b_e^neomutt-users@neomutt\\.org$ to match only mail from the
   actual list.

   The -group flag adds all of the subsequent regular expressions to the
   named aaddddrreessss  ggrroouupp in addition to adding to the specified address
   list.

   The "unlists" command is used to remove a token from the list of known
   and subscribed mailing-lists. Use "unlists *" to remove all tokens.

   To remove a mailing list from the list of subscribed mailing lists, but
   keep it on the list of known mailing lists, use _u_n_s_u_b_s_c_r_i_b_e.

13. Using Multiple Spool Mailboxes

   Usage:

   mbox-hook _r_e_g_e_x _m_a_i_l_b_o_x

   This command is used to move read messages from a specified mailbox to
   a different mailbox automatically when you quit or change folders.
   _r_e_g_e_x is a regular expression specifying the mailbox to treat as a
   "spool" mailbox and _m_a_i_l_b_o_x specifies where mail should be saved when
   read.

   The regex parameter has mmaaiillbbooxx  sshhoorrttccuutt expansion performed on the
   first character. See MMaaiillbbooxx  MMaattcchhiinngg  iinn  HHooookkss for more details.

   Note that execution of mbox-hooks is dependent on the $$mmoovvee
   configuration variable. If set to "no" (the default), mbox-hooks will
   not be executed.

   Unlike some of the other _h_o_o_k commands, only the _f_i_r_s_t matching regex
   is used (it is not possible to save read mail in more than a single
   mailbox).

14. Monitoring Incoming Mail

   Usage:

   mailboxes _m_a_i_l_b_o_x [ _m_a_i_l_b_o_x ...]
   unmailboxes { _* | _m_a_i_l_b_o_x ... }

   This command specifies folders which can receive mail and which will be
   checked for new messages periodically.

   _f_o_l_d_e_r can either be a local file or directory (Mbox/Mmdf or
   Maildir/Mh). If NeoMutt was built with POP and/or IMAP support, _f_o_l_d_e_r
   can also be a POP/IMAP folder URL. The URL syntax is described in
   SSeeccttiioonn  11..22,,  ""UURRLL  SSyynnttaaxx"", POP and IMAP are described in SSeeccttiioonn  33,,
   ""PPOOPP33  SSuuppppoorrtt"" and SSeeccttiioonn  44,,  ""IIMMAAPP  SSuuppppoorrtt"" respectively.

   NeoMutt provides a number of advanced features for handling (possibly
   many) folders and new mail within them, please refer to SSeeccttiioonn  1133,,
   ""NNeeww  MMaaiill  DDeetteeccttiioonn"" for details (including in what situations and how
   often NeoMutt checks for new mail). Additionally, $$nneeww__mmaaiill__ccoommmmaanndd can
   be used to run a command when new mail is detected.

   The "unmailboxes" command is used to remove a token from the list of
   folders which receive mail. Use "unmailboxes *" to remove all tokens.

Note

   The folders in the _m_a_i_l_b_o_x_e_s command are resolved when the command is
   executed, so if these names contain sshhoorrttccuutt  cchhaarraacctteerrss (such as "="
   and "!"), any variable definition that affects these characters (like
   $$ffoollddeerr and $$ssppoooollffiillee) should be set before the _m_a_i_l_b_o_x_e_s command. If
   none of these shortcuts are used, a local path should be absolute as
   otherwise NeoMutt tries to find it relative to the directory from where
   NeoMutt was started which may not always be desired.

15. User-Defined Headers

   Usage:

   my_hdr _s_t_r_i_n_g
   unmy_hdr { _* | _f_i_e_l_d ... }

   The _m_y___h_d_r command allows you to create your own header fields which
   will be added to every message you send and appear in the editor if
   $$eeddiitt__hheeaaddeerrss is set.

   For example, if you would like to add an "Organization:" header field
   to all of your outgoing messages, you can put the command something
   like shown in EExxaammppllee  33..1111,,  ""DDeeffiinniinngg  ccuussttoomm  hheeaaddeerrss"" in your
   .neomuttrc.

   _E_x_a_m_p_l_e_ _3_._1_1_._ _D_e_f_i_n_i_n_g_ _c_u_s_t_o_m_ _h_e_a_d_e_r_s
my_hdr Organization: A Really Big Company, Anytown, USA

Note

   Space characters are _n_o_t allowed between the keyword and the colon
   (":"). The standard for electronic mail (RFC2822) says that space is
   illegal there, so NeoMutt enforces the rule.

   If you would like to add a header field to a single message, you should
   either set the $$eeddiitt__hheeaaddeerrss variable, or use the <edit-headers>
   function (default: "E") in the compose menu so that you can edit the
   header of your message along with the body.

   To remove user defined header fields, use the _u_n_m_y___h_d_r command. You may
   specify an asterisk ("*") to remove all header fields, or the fields to
   remove. For example, to remove all "To" and "Cc" header fields, you
   could use:
unmy_hdr to cc

16. Specify Default Fcc: and/or Save Mailbox

   Usage:

   fcc-save-hook _p_a_t_t_e_r_n _m_a_i_l_b_o_x
   fcc-hook _p_a_t_t_e_r_n _m_a_i_l_b_o_x
   save-hook _p_a_t_t_e_r_n _m_a_i_l_b_o_x

   _f_c_c_-_s_a_v_e_-_h_o_o_k is a shortcut, equivalent to doing both a ffcccc--hhooookk and a
   ssaavvee--hhooookk with its arguments, including %-expansion on _m_a_i_l_b_o_x
   according to $$iinnddeexx__ffoorrmmaatt.

   _f_c_c_-_h_o_o_k is used to save outgoing mail in a mailbox other than $$rreeccoorrdd.
   NeoMutt searches the initial list of message recipients for the first
   matching _p_a_t_t_e_r_n and uses _m_a_i_l_b_o_x as the default "Fcc:" mailbox. If no
   match is found the message will be saved to $$rreeccoorrdd mailbox.
fcc-hook [@.]aol\\.com$ +spammers

   ...will save a copy of all messages going to the aol.com domain to the
   "+spammers" mailbox by default.

   _s_a_v_e_-_h_o_o_k is used to override the default mailbox used when saving
   messages. _m_a_i_l_b_o_x will be used as the default if the message matches
   _p_a_t_t_e_r_n.

   _E_x_a_m_p_l_e_ _3_._1_2_._ _U_s_i_n_g_ _%_-_e_x_p_a_n_d_o_s_ _i_n_ _s_a_v_e_-_h_o_o_k
# default: save all to ~/Mail/<author name>
save-hook . ~/Mail/%F
# save from me@turing.cs.hmc.edu and me@cs.hmc.edu to $folder/elkins
save-hook me@(turing\\.)?cs\\.hmc\\.edu$ +elkins
# save from aol.com to $folder/spam
save-hook aol\\.com$ +spam

   Also see the ffcccc--ssaavvee--hhooookk command.

   To provide more flexibility and good defaults, NeoMutt applies the
   expandos of $$iinnddeexx__ffoorrmmaatt to _m_a_i_l_b_o_x after it was expanded. See MMeessssaaggee
   MMaattcchhiinngg  iinn  HHooookkss for information on the exact format of _p_a_t_t_e_r_n.

17. Change Settings Based Upon Message Recipients

   Usage:

   reply-hook _p_a_t_t_e_r_n _c_o_m_m_a_n_d
   send-hook _p_a_t_t_e_r_n _c_o_m_m_a_n_d
   send2-hook _p_a_t_t_e_r_n _c_o_m_m_a_n_d

   These commands can be used to execute arbitrary configuration commands
   based upon recipients of the message. _p_a_t_t_e_r_n is used to match the
   message, see MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss for details. _c_o_m_m_a_n_d is executed
   when _p_a_t_t_e_r_n matches.

   _r_e_p_l_y_-_h_o_o_k is matched against the message you are _r_e_p_l_y_i_n_g_ _t_o, instead
   of the message you are _s_e_n_d_i_n_g. _s_e_n_d_-_h_o_o_k is matched against all
   messages, both _n_e_w and _r_e_p_l_i_e_s.

Note

   _r_e_p_l_y_-_h_o_o_ks are matched _b_e_f_o_r_e the _s_e_n_d_-_h_o_o_k, _r_e_g_a_r_d_l_e_s_s of the order
   specified in the user's configuration file. However, you can inhibit
   _s_e_n_d_-_h_o_o_k in the reply case by using the pattern '! ~Q' (_n_o_t_ _r_e_p_l_i_e_d,
   see MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss) in the _s_e_n_d_-_h_o_o_k to tell when _r_e_p_l_y_-_h_o_o_k
   have been executed.

   _s_e_n_d_2_-_h_o_o_k is matched every time a message is changed, either by
   editing it, or by using the compose menu to change its recipients or
   subject. _s_e_n_d_2_-_h_o_o_k is executed after _s_e_n_d_-_h_o_o_k, and can, e.g., be used
   to set parameters such as the $$sseennddmmaaiill variable depending on the
   message's sender address.

   For each type of _s_e_n_d_-_h_o_o_k or _r_e_p_l_y_-_h_o_o_k, when multiple matches occur,
   commands are executed in the order they are specified in the .neomuttrc
   (for that type of hook).

   Example: _s_e_n_d_-_h_o_o_k work "_s_e_t mime_forward signature=''"

   Another typical use for this command is to change the values of the
   $$aattttrriibbuuttiioonn, $$aattttrriibbuuttiioonn__llooccaallee, and $$ssiiggnnaattuurree variables in order to
   change the language of the attributions and signatures based upon the
   recipients.

Note

   _s_e_n_d_-_h_o_o_k's are only executed once after getting the initial list of
   recipients. Adding a recipient after replying or editing the message
   will not cause any _s_e_n_d_-_h_o_o_k to be executed, similarly if $$aauuttooeeddiitt is
   set (as then the initial list of recipients is empty). Also note that
   mmyy__hhddrr commands which modify recipient headers, or the message's
   subject, don't have any effect on the current message when executed
   from a _s_e_n_d_-_h_o_o_k.

18. Change Settings Before Formatting a Message

   Usage:

   message-hook _p_a_t_t_e_r_n _c_o_m_m_a_n_d

   This command can be used to execute arbitrary configuration commands
   before viewing or formatting a message based upon information about the
   message. _c_o_m_m_a_n_d is executed if the _p_a_t_t_e_r_n matches the message to be
   displayed. When multiple matches occur, commands are executed in the
   order they are specified in the .neomuttrc.

   See MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss for information on the exact format of
   _p_a_t_t_e_r_n.

   Example:
message-hook ~A 'set pager=builtin'
message-hook '~f freshmeat-news' 'set pager="less \"+/^  subject: .*\""'

19. Choosing the Cryptographic Key of the Recipient

   Usage:

   crypt-hook _r_e_g_e_x _k_e_y_i_d

   When encrypting messages with PGP/GnuPG or OpenSSL, you may want to
   associate a certain key with a given e-mail address automatically,
   either because the recipient's public key can't be deduced from the
   destination address, or because, for some reasons, you need to override
   the key NeoMutt would normally use. The _c_r_y_p_t_-_h_o_o_k command provides a
   method by which you can specify the ID of the public key to be used
   when encrypting messages to a certain recipient. You may use multiple
   crypt-hooks with the same regex; multiple matching crypt-hooks result
   in the use of multiple keyids for a recipient. During key selection,
   NeoMutt will confirm whether each crypt-hook is to be used (unless the
   $$ccrryypptt__ccoonnffiirrmmhhooookk option is unset). If all crypt-hooks for a recipient
   are declined, NeoMutt will use the original recipient address for key
   selection instead.

   The meaning of _k_e_y_i_d is to be taken broadly in this context: You can
   either put a numerical key ID or fingerprint here, an e-mail address,
   or even just a real name.

20. Adding Key Sequences to the Keyboard Buffer

   Usage:

   push _s_t_r_i_n_g

   This command adds the named string to the beginning of the keyboard
   buffer. The string may contain control characters, key names and
   function names like the sequence string in the mmaaccrroo command. You may
   use it to automatically run a sequence of commands at startup, or when
   entering certain folders. For example, EExxaammppllee  33..1133,,  ""EEmmbbeeddddiinngg  ppuusshh  iinn
   ffoollddeerr--hhooookk"" shows how to automatically collapse all threads when
   entering a folder.

   _E_x_a_m_p_l_e_ _3_._1_3_._ _E_m_b_e_d_d_i_n_g_ _p_u_s_h_ _i_n_ _f_o_l_d_e_r_-_h_o_o_k
folder-hook . 'push <collapse-all>'

   For using functions like shown in the example, it's important to use
   angle brackets ("<" and ">") to make NeoMutt recognize the input as a
   function name. Otherwise it will simulate individual just keystrokes,
   i.e. "push collapse-all" would be interpreted as if you had typed "c",
   followed by "o", followed by "l", ..., which is not desired and may
   lead to very unexpected behavior.

   Keystrokes can be used, too, but are less portable because of
   potentially changed key bindings. With default bindings, this is
   equivalent to the above example:
folder-hook . 'push \eV'

   because it simulates that Esc+V was pressed (which is the default
   binding of <collapse-all>).

21. Executing Functions

   Usage:

   exec _f_u_n_c_t_i_o_n [ _f_u_n_c_t_i_o_n ...]

   This command can be used to execute any function. Functions are listed
   in the ffuunnccttiioonn  rreeffeerreennccee. "_e_x_e_c function" is equivalent to "push
   <function>".

22. Message Scoring

   Usage:

   score _p_a_t_t_e_r_n _v_a_l_u_e
   unscore { _* | _p_a_t_t_e_r_n ... }

   The _s_c_o_r_e commands adds _v_a_l_u_e to a message's score if _p_a_t_t_e_r_n matches
   it. _p_a_t_t_e_r_n is a string in the format described in the ppaatttteerrnnss section
   (note: For efficiency reasons, patterns which scan information not
   available in the index, such as ~b, ~B, ~h, ~M, or ~X may not be used).
   _v_a_l_u_e is a positive or negative integer. A message's final score is the
   sum total of all matching _s_c_o_r_e entries. However, you may optionally
   prefix _v_a_l_u_e with an equal sign ("=") to cause evaluation to stop at a
   particular entry if there is a match. Negative final scores are rounded
   up to 0.

   The _u_n_s_c_o_r_e command removes score entries from the list. You _m_u_s_t
   specify the same pattern specified in the _s_c_o_r_e command for it to be
   removed. The pattern "*" is a special token which means to clear the
   list of all score entries.

   Scoring occurs as the messages are read in, before the mailbox is
   sorted. Because of this, patterns which depend on threading, such as
   _~_=, _~_$, and _~_(_), will not work by default. A workaround is to push the
   scoring command in a folder hook. This will cause the mailbox to be
   rescored after it is opened and input starts being processed:
folder-hook . 'push "<enter-command>score ~= 10<enter>"'

23. Spam Detection

   Usage:

   spam _p_a_t_t_e_r_n _f_o_r_m_a_t
   nospam { _* | _p_a_t_t_e_r_n }

   NeoMutt has generalized support for external spam-scoring filters. By
   defining your spam patterns with the _s_p_a_m and nospam commands, you can
   _l_i_m_i_t, _s_e_a_r_c_h, and _s_o_r_t your mail based on its spam attributes, as
   determined by the external filter. You also can display the spam
   attributes in your index display using the %H selector in the
   $$iinnddeexx__ffoorrmmaatt variable. (Tip: try %?H?[%H] ? to display spam tags only
   when they are defined for a given message.)

   Your first step is to define your external filter's spam patterns using
   the _s_p_a_m command. _p_a_t_t_e_r_n should be a regular expression that matches a
   header in a mail message. If any message in the mailbox matches this
   regular expression, it will receive a "spam tag" or "spam attribute"
   (unless it also matches a _n_o_s_p_a_m pattern - see below.) The appearance
   of this attribute is entirely up to you, and is governed by the _f_o_r_m_a_t
   parameter. _f_o_r_m_a_t can be any static text, but it also can include
   back-references from the _p_a_t_t_e_r_n expression. (A regular expression
   "back-reference" refers to a sub-expression contained within
   parentheses.) %1 is replaced with the first back-reference in the
   regex, %2 with the second, etc.

   To match spam tags, NeoMutt needs the corresponding header information
   which is always the case for local and POP folders but not for IMAP in
   the default configuration. Depending on the spam header to be analyzed,
   $$iimmaapp__hheeaaddeerrss may need to be adjusted.

   If you're using multiple spam filters, a message can have more than one
   spam-related header. You can define _s_p_a_m patterns for each filter you
   use. If a message matches two or more of these patterns, and the
   $$ssppaamm__sseeppaarraattoorr variable is set to a string, then the message's spam
   tag will consist of all the _f_o_r_m_a_t strings joined together, with the
   value of $$ssppaamm__sseeppaarraattoorr separating them.

   For example, suppose one uses DCC, SpamAssassin, and PureMessage, then
   the configuration might look like in EExxaammppllee  33..1144,,  ""CCoonnffiigguurriinngg  ssppaamm
   ddeetteeccttiioonn"".

   _E_x_a_m_p_l_e_ _3_._1_4_._ _C_o_n_f_i_g_u_r_i_n_g_ _s_p_a_m_ _d_e_t_e_c_t_i_o_n
spam "X-DCC-.*-Metrics:.*(....)=many"         "90+/DCC-%1"
spam "X-Spam-Status: Yes"                     "90+/SA"
spam "X-PerlMX-Spam: .*Probability=([0-9]+)%" "%1/PM"
set spam_separator=", "

   If then a message is received that DCC registered with "many" hits
   under the "Fuz2" checksum, and that PureMessage registered with a 97%
   probability of being spam, that message's spam tag would read
   90+/DCC-Fuz2, 97/PM. (The four characters before "=many" in a DCC
   report indicate the checksum used - in this case, "Fuz2".)

   If the $$ssppaamm__sseeppaarraattoorr variable is unset, then each spam pattern match
   supersedes the previous one. Instead of getting joined _f_o_r_m_a_t strings,
   you'll get only the last one to match.

   The spam tag is what will be displayed in the index when you use %H in
   the $$iinnddeexx__ffoorrmmaatt variable. It's also the string that the ~H
   pattern-matching expression matches against for <search> and <limit>
   functions. And it's what sorting by spam attribute will use as a sort
   key.

   That's a pretty complicated example, and most people's actual
   environments will have only one spam filter. The simpler your
   configuration, the more effective NeoMutt can be, especially when it
   comes to sorting.

   Generally, when you sort by spam tag, NeoMutt will sort _l_e_x_i_c_a_l_l_y -
   that is, by ordering strings alphanumerically. However, if a spam tag
   begins with a number, NeoMutt will sort numerically first, and
   lexically only when two numbers are equal in value. (This is like
   UNIX's sort -n.) A message with no spam attributes at all - that is,
   one that didn't match _a_n_y of your _s_p_a_m patterns - is sorted at lowest
   priority. Numbers are sorted next, beginning with 0 and ranging upward.
   Finally, non-numeric strings are sorted, with "a" taking lower priority
   than "z". Clearly, in general, sorting by spam tags is most effective
   when you can coerce your filter to give you a raw number. But in case
   you can't, NeoMutt can still do something useful.

   The _n_o_s_p_a_m command can be used to write exceptions to _s_p_a_m patterns. If
   a header pattern matches something in a _s_p_a_m command, but you
   nonetheless do not want it to receive a spam tag, you can list a more
   precise pattern under a _n_o_s_p_a_m command.

   If the _p_a_t_t_e_r_n given to _n_o_s_p_a_m is exactly the same as the _p_a_t_t_e_r_n on an
   existing _s_p_a_m list entry, the effect will be to remove the entry from
   the spam list, instead of adding an exception. Likewise, if the _p_a_t_t_e_r_n
   for a _s_p_a_m command matches an entry on the _n_o_s_p_a_m list, that nospam
   entry will be removed. If the _p_a_t_t_e_r_n for _n_o_s_p_a_m is "*", _a_l_l_ _e_n_t_r_i_e_s_ _o_n
   _b_o_t_h_ _l_i_s_t_s will be removed. This might be the default action if you use
   _s_p_a_m and _n_o_s_p_a_m in conjunction with a _f_o_l_d_e_r_-_h_o_o_k.

   You can have as many _s_p_a_m or _n_o_s_p_a_m commands as you like. You can even
   do your own primitive _s_p_a_m detection within NeoMutt - for example, if
   you consider all mail from MAILER-DAEMON to be spam, you can use a _s_p_a_m
   command like this:
spam "^From: .*MAILER-DAEMON"       "999"

24. Setting and Querying Variables

24.1. Variable Types

   NeoMutt supports these types of configuration variables:

   boolean
          A boolean expression, either "yes" or "no".

   number
          A signed integer number in the range -32768 to 32767.

   number (long)
          A signed integer number in the range -2147483648 to 2147483647.

   string
          Arbitrary text.

   path
          A specialized string for representing paths including support
          for mailbox shortcuts (see SSeeccttiioonn  1100,,  ""MMaaiillbbooxx  SShhoorrttccuuttss"") as
          well as tilde ("~") for a user's home directory and more.

   quadoption
          Like a boolean but triggers a prompt when set to "ask-yes" or
          "ask-no" with "yes" and "no" preselected respectively.

   sort order
          A specialized string allowing only particular words as values
          depending on the variable.

   regular expression
          A regular expression, see SSeeccttiioonn  22,,  ""RReegguullaarr  EExxpprreessssiioonnss"" for
          an introduction.

   folder magic
          Specifies the type of folder to use: _m_b_o_x, _m_m_d_f, _m_h or _m_a_i_l_d_i_r.
          Currently only used to determine the type for newly created
          folders.

   e-mail address
          An email address either with or without realname. The older
          "user@example.org (Joe User)" form is supported but strongly
          deprecated.

   user-defined
          Arbitrary text, see SSeeccttiioonn  2244..33,,  ""UUsseerr--DDeeffiinneedd  VVaarriiaabblleess"" for
          details.

24.2. Commands

   The following commands are available to manipulate and query variables:

   Usage:

   set { [ no | inv | & | ? ] _v_a_r_i_a_b_l_e | _v_a_r_i_a_b_l_e_=_v_a_l_u_e } [...]
   unset _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
   reset _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
   toggle _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]

   This command is used to set (and unset) ccoonnffiigguurraattiioonn  vvaarriiaabblleess. There
   are four basic types of variables: boolean, number, string and
   quadoption. _b_o_o_l_e_a_n variables can be _s_e_t (true) or _u_n_s_e_t (false).
   _n_u_m_b_e_r variables can be assigned a positive integer value. _s_t_r_i_n_g
   variables consist of any number of printable characters and must be
   enclosed in quotes if they contain spaces or tabs. You may also use the
   escape sequences "\n" and "\t" for newline and tab, respectively.
   _q_u_a_d_o_p_t_i_o_n variables are used to control whether or not to be prompted
   for certain actions, or to specify a default action. A value of _y_e_s
   will cause the action to be carried out automatically as if you had
   answered yes to the question. Similarly, a value of _n_o will cause the
   action to be carried out as if you had answered "no." A value of
   _a_s_k_-_y_e_s will cause a prompt with a default answer of "yes" and _a_s_k_-_n_o
   will provide a default answer of "no."

   Prefixing a variable with "no" will unset it. Example: _s_e_t noaskbcc.

   For _b_o_o_l_e_a_n variables, you may optionally prefix the variable name with
   inv to toggle the value (on or off). This is useful when writing
   macros. Example: _s_e_t invsmart_wrap.

   The _t_o_g_g_l_e command automatically prepends the inv prefix to all
   specified variables.

   The _u_n_s_e_t command automatically prepends the no prefix to all specified
   variables.

   Using the <enter-command> function in the _i_n_d_e_x menu, you can query the
   value of a variable by prefixing the name of the variable with a
   question mark:
set ?allow_8bit

   The question mark is actually only required for boolean and quadoption
   variables.

   The _r_e_s_e_t command resets all given variables to the compile time
   defaults (hopefully mentioned in this manual). If you use the command
   _s_e_t and prefix the variable with "&" this has the same behavior as the
   _r_e_s_e_t command.

   With the _r_e_s_e_t command there exists the special variable "all", which
   allows you to reset all variables to their system defaults.

24.3. User-Defined Variables

24.3.1. Introduction

   Along with the variables listed in the CCoonnffiigguurraattiioonn  vvaarriiaabblleess section,
   NeoMutt supports user-defined variables with names starting with my_ as
   in, for example, my_cfgdir.

   The _s_e_t command either creates a custom my_ variable or changes its
   value if it does exist already. The _u_n_s_e_t and _r_e_s_e_t commands remove the
   variable entirely.

   Since user-defined variables are expanded in the same way that
   environment variables are (except for the sshheellll--eessccaappee command and
   backtick expansion), this feature can be used to make configuration
   files more readable.

24.3.2. Examples

   The following example defines and uses the variable my_cfgdir to
   abbreviate the calls of the ssoouurrccee command:

   _E_x_a_m_p_l_e_ _3_._1_5_._ _U_s_i_n_g_ _u_s_e_r_-_d_e_f_i_n_e_d_ _v_a_r_i_a_b_l_e_s_ _f_o_r_ _c_o_n_f_i_g_ _f_i_l_e_ _r_e_a_d_a_b_i_l_i_t_y
set my_cfgdir = $HOME/neomutt/config
source $my_cfgdir/hooks $my_cfgdir/macros
# more source commands...

   A custom variable can also be used in macros to backup the current
   value of another variable. In the following example, the value of the
   $$ddeelleettee is changed temporarily while its original value is saved as
   my_delete. After the macro has executed all commands, the original
   value of $$ddeelleettee is restored.

   _E_x_a_m_p_l_e_ _3_._1_6_._ _U_s_i_n_g_ _u_s_e_r_-_d_e_f_i_n_e_d_ _v_a_r_i_a_b_l_e_s_ _f_o_r_ _b_a_c_k_i_n_g_ _u_p_ _o_t_h_e_r_ _c_o_n_f_i_g
   _o_p_t_i_o_n_ _v_a_l_u_e_s
macro pager ,x '\
<enter-command>set my_delete=$delete<enter>\
<enter-command>set delete=yes<enter>\
...\
<enter-command>set delete=$my_delete<enter>'

   Since NeoMutt expands such values already when parsing the
   configuration file(s), the value of $my_delete in the last example
   would be the value of $$ddeelleettee exactly as it was at that point during
   parsing the configuration file. If another statement would change the
   value for $$ddeelleettee later in the same or another file, it would have no
   effect on $my_delete. However, the expansion can be deferred to
   runtime, as shown in the next example, when escaping the dollar sign.

   _E_x_a_m_p_l_e_ _3_._1_7_._ _D_e_f_e_r_r_i_n_g_ _u_s_e_r_-_d_e_f_i_n_e_d_ _v_a_r_i_a_b_l_e_ _e_x_p_a_n_s_i_o_n_ _t_o_ _r_u_n_t_i_m_e
macro pager <PageDown> "\
<enter-command> set my_old_pager_stop=\$pager_stop pager_stop<Enter>\
<next-page>\
<enter-command> set pager_stop=\$my_old_pager_stop<Enter>\
<enter-command> unset my_old_pager_stop<Enter>"

   Note that there is a space between <enter-command> and the _s_e_t
   configuration command, preventing NeoMutt from recording the _m_a_c_r_o's
   commands into its history.

24.4. Type Conversions

   Variables are always assigned string values which NeoMutt parses into
   its internal representation according to the type of the variable, for
   example an integer number for numeric types. For all queries (including
   $-expansion) the value is converted from its internal type back into
   string. As a result, any variable can be assigned any value given that
   its content is valid for the target. This also counts for custom
   variables which are of type string. In case of parsing errors, NeoMutt
   will print error messages. EExxaammppllee  33..1188,,  ""TTyyppee  ccoonnvveerrssiioonnss  uussiinngg
   vvaarriiaabblleess"" demonstrates type conversions.

   _E_x_a_m_p_l_e_ _3_._1_8_._ _T_y_p_e_ _c_o_n_v_e_r_s_i_o_n_s_ _u_s_i_n_g_ _v_a_r_i_a_b_l_e_s
set my_lines = "5"                # value is string "5"
set pager_index_lines = $my_lines # value is integer 5
set my_sort = "date-received"     # value is string "date-received"
set sort = "last-$my_sort"        # value is sort last-date-received
set my_inc = $read_inc            # value is string "10" (default of $read_inc)
set my_foo = $my_inc              # value is string "10"

   These assignments are all valid. If, however, the value of $my_lines
   would have been "five" (or something else that cannot be parsed into a
   number), the assignment to $pager_index_lines would have produced an
   error message.

   Type conversion applies to all configuration commands which take
   arguments. But please note that every expanded value of a variable is
   considered just a single token. A working example is:
set my_pattern = "~A"
set my_number = "10"
# same as: score ~A +10
score $my_pattern +$my_number

   What does _n_o_t work is:
set my_mx = "+mailbox1 +mailbox2"
mailboxes $my_mx +mailbox3

   because the value of $my_mx is interpreted as a single mailbox named
   "+mailbox1 +mailbox2" and not two distinct mailboxes.

25. Reading Initialization Commands From Another File

   Usage:

   source _f_i_l_e_n_a_m_e

   This command allows the inclusion of initialization commands from other
   files. For example, I place all of my aliases in ~/.mail_aliases so
   that I can make my ~/.neomuttrc readable and keep my aliases private.

   If the filename begins with a tilde ("~"), it will be expanded to the
   path of your home directory.

   If the filename ends with a vertical bar ("|"), then _f_i_l_e_n_a_m_e is
   considered to be an executable program from which to read input (e.g.
   _s_o_u_r_c_e~/bin/myscript|).

26. Removing Hooks

   Usage:

   unhook { _* | _h_o_o_k_-_t_y_p_e }

   This command permits you to flush hooks you have previously defined.
   You can either remove all hooks by giving the "*" character as an
   argument, or you can remove all hooks of a specific type by saying
   something like _u_n_h_o_o_k send-hook.

27. Format Strings

27.1. Basic usage

   Format strings are a general concept you'll find in several locations
   through the NeoMutt configuration, especially in the $$iinnddeexx__ffoorrmmaatt,
   $$ppaaggeerr__ffoorrmmaatt, $$ssttaattuuss__ffoorrmmaatt, and other related variables. These can
   be very straightforward, and it's quite possible you already know how
   to use them.

   The most basic format string element is a percent symbol followed by
   another character. For example, %s represents a message's Subject:
   header in the $$iinnddeexx__ffoorrmmaatt variable. The "expandos" available are
   documented with each format variable, but there are general modifiers
   available with all formatting expandos, too. Those are our concern
   here.

   Some of the modifiers are borrowed right out of C (though you might
   know them from Perl, Python, shell, or another language). These are the
   [-]m.n modifiers, as in %-12.12s. As with such programming languages,
   these modifiers allow you to specify the minimum and maximum size of
   the resulting string, as well as its justification. If the "-" sign
   follows the percent, the string will be left-justified instead of
   right-justified. If there's a number immediately following that, it's
   the minimum amount of space the formatted string will occupy - if it's
   naturally smaller than that, it will be padded out with spaces. If a
   decimal point and another number follow, that's the maximum space
   allowable - the string will not be permitted to exceed that width, no
   matter its natural size. Each of these three elements is optional, so
   that all these are legal format strings: %-12s, %4c, %.15F and
   %-12.15L.

   NeoMutt adds some other modifiers to format strings. If you use an
   equals symbol (=) as a numeric prefix (like the minus above), it will
   force the string to be centered within its minimum space range. For
   example, %=14y will reserve 14 characters for the %y expansion - that's
   the set of message keywords (formerly X-Label). If the expansion
   results in a string less than 14 characters, it will be centered in a
   14-character space. If the X-Label for a message were "test", that
   expansion would look like "     test     ".

   There are two very little-known modifiers that affect the way that an
   expando is replaced. If there is an underline ("_") character between
   any format modifiers (as above) and the expando letter, it will expands
   in all lower case. And if you use a colon (":"), it will replace all
   decimal points with underlines.

27.2. Conditionals

   Depending on the format string variable, some of its sequences can be
   used to optionally print a string if their value is nonzero. For
   example, you may only want to see the number of flagged messages if
   such messages exist, since zero is not particularly meaningful. To
   optionally print a string based upon one of the above sequences, the
   following construct is used:
%?<sequence_char>?<optional_string>?

   where _s_e_q_u_e_n_c_e___c_h_a_r is an expando, and _o_p_t_i_o_n_a_l___s_t_r_i_n_g is the string
   you would like printed if _s_e_q_u_e_n_c_e___c_h_a_r is nonzero. _o_p_t_i_o_n_a_l___s_t_r_i_n_g may
   contain other sequences as well as normal text, but you may not nest
   optional strings.

   Here is an example illustrating how to optionally print the number of
   new messages in a mailbox in $$ssttaattuuss__ffoorrmmaatt:
%?n?%n new messages.?

   You can also switch between two strings using the following construct:
%?<sequence_char>?<if_string>&<else_string>?

   If the value of _s_e_q_u_e_n_c_e___c_h_a_r is non-zero, _i_f___s_t_r_i_n_g will be expanded,
   otherwise _e_l_s_e___s_t_r_i_n_g will be expanded.

   The conditional sequences can also be nested by using the %< and >
   operators. The %? notation can still be used but requires quoting. For
   example:
%<x?true&false>
%<x?%<y?%<z?xyz&xy>&x>&none>

   For more examples, see SSeeccttiioonn  2244,,  ""NNeesstteedd  IIff  FFeeaattuurree""

27.3. Filters

   Any format string ending in a vertical bar ("|") will be expanded and
   piped through the first word in the string, using spaces as separator.
   The string returned will be used for display. If the returned string
   ends in %, it will be passed through the formatter a second time. This
   allows the filter to generate a replacement format string including %
   expandos.

   All % expandos in a format string are expanded before the script is
   called so that:

   _E_x_a_m_p_l_e_ _3_._1_9_._ _U_s_i_n_g_ _e_x_t_e_r_n_a_l_ _f_i_l_t_e_r_s_ _i_n_ _f_o_r_m_a_t_ _s_t_r_i_n_g_s
set status_format="script.sh '%r %f (%L)'|"

   will make NeoMutt expand %r, %f and %L before calling the script. The
   example also shows that arguments can be quoted: the script will
   receive the expanded string between the single quotes as the only
   argument.

   A practical example is the mutt_xtitle script installed in the samples
   subdirectory of the NeoMutt documentation: it can be used as filter for
   $$ssttaattuuss__ffoorrmmaatt to set the current terminal's title, if supported.

27.4. Padding

   In most format strings, NeoMutt supports different types of padding
   using special %-expandos:

   %|X
          When this occurs, NeoMutt will fill the rest of the line with
          the character X. For example, filling the rest of the line with
          dashes is done by setting:

set status_format = "%v on %h: %B: %?n?%n&no? new messages %|-"

   %>X
          Since the previous expando stops at the end of line, there must
          be a way to fill the gap between two items via the %>X expando:
          it puts as many characters X in between two items so that the
          rest of the line will be right-justified. For example, to not
          put the version string and hostname the above example on the
          left but on the right and fill the gap with spaces, one might
          use (note the space after %>):

set status_format = "%B: %?n?%n&no? new messages %> (%v on %h)"

   %*X
          Normal right-justification will print everything to the left of
          the %>, displaying padding and whatever lies to the right only
          if there's room. By contrast, "soft-fill" gives priority to the
          right-hand side, guaranteeing space to display it and showing
          padding only if there's still room. If necessary, soft-fill will
          eat text leftwards to make room for rightward text. For example,
          to right-justify the subject making sure as much as possible of
          it fits on screen, one might use (note two spaces after %*: the
          second ensures there's a space between the truncated right-hand
          side and the subject):

set index_format="%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?)%*  %s"

27.5. Conditional Dates

   This feature allows the format of dates in the index to vary based on
   how recent the message is. This is especially useful in combination
   with the nneesstteedd--iiff  ffeeaattuurree.

   For example, using %<[y?%<[d?%[%H:%M]&%[%m/%d]>&%[%y.%m]> for the date
   in the $index_format will produce a display like:
   1   + 14.12 Grace Hall      (   13) Gulliver's Travels
   2   + 10/02 Callum Harrison (   48) Huckleberry Finn
   3     12:17 Rhys Lee        (   42) The Lord Of The Rings

28. Control allowed header fields in a mailto: URL

   Usage:

   mailto_allow { _* | _h_e_a_d_e_r_-_f_i_e_l_d ... }
   unmailto_allow { _* | _h_e_a_d_e_r_-_f_i_e_l_d ... }

   As a security measure, NeoMutt will only add user-approved header
   fields from a mailto: URL. This is necessary since NeoMutt will handle
   certain header fields, such as Attach:, in a special way. The
   mailto_allow and unmailto_allow commands allow the user to modify the
   list of approved headers.

   NeoMutt initializes the default list to contain only the Subject and
   Body header fields, which are the only requirement specified by the
   mailto: specification in RFC2368, and the Cc, In-Reply-To, References
   headers to aid with replies to mailing lists.

Chapter 4. Advanced Usage

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  CChhaarraacctteerr  SSeett  HHaannddlliinngg
   22..  RReegguullaarr  EExxpprreessssiioonnss
   33..  PPaatttteerrnnss::  SSeeaarrcchhiinngg,,  LLiimmiittiinngg  aanndd  TTaaggggiinngg

        33..11..  PPaatttteerrnn  MMooddiiffiieerr
        33..22..  SSiimmppllee  SSeeaarrcchheess
        33..33..  NNeessttiinngg  aanndd  BBoooolleeaann  OOppeerraattoorrss
        33..44..  SSeeaarrcchhiinngg  bbyy  DDaattee
        33..55..  GGMMaaiill  PPaatttteerrnnss

   44..  MMaarrkkiinngg  MMeessssaaggeess
   55..  UUssiinngg  TTaaggss
   66..  UUssiinngg  HHooookkss

        66..11..  MMeessssaaggee  MMaattcchhiinngg  iinn  HHooookkss
        66..22..  MMaaiillbbooxx  MMaattcchhiinngg  iinn  HHooookkss

   77..  MMaannaaggiinngg  tthhee  EEnnvviirroonnmmeenntt
   88..  EExxtteerrnnaall  AAddddrreessss  QQuueerriieess
   99..  MMaaiillbbooxx  FFoorrmmaattss
   1100..  MMaaiillbbooxx  SShhoorrttccuuttss
   1111..  HHaannddlliinngg  MMaaiilliinngg  LLiissttss
   1122..  DDiissppllaayy  MMuunnggiinngg
   1133..  NNeeww  MMaaiill  DDeetteeccttiioonn

        1133..11..  HHooww  NNeeww  MMaaiill  DDeetteeccttiioonn  WWoorrkkss
        1133..22..  PPoolllliinngg  FFoorr  NNeeww  MMaaiill
        1133..33..  CCaallccuullaattiinngg  MMaaiillbbooxx  MMeessssaaggee  CCoouunnttss

   1144..  EEddiittiinngg  TThhrreeaaddss

        1144..11..  LLiinnkkiinngg  TThhrreeaaddss
        1144..22..  BBrreeaakkiinngg  TThhrreeaaddss

   1155..  DDeelliivveerryy  SSttaattuuss  NNoottiiffiiccaattiioonn  ((DDSSNN))  SSuuppppoorrtt
   1166..  SSttaarrtt  aa  WWWWWW  BBrroowwsseerr  oonn  UURRLLss
   1177..  EEcchhooiinngg  TTeexxtt
   1188..  MMiisscceellllaannyy

1. Character Set Handling

   A "character set" is basically a mapping between bytes and glyphs and
   implies a certain character encoding scheme. For example, for the ISO
   8859 family of character sets, an encoding of 8bit per character is
   used. For the Unicode character set, different character encodings may
   be used, UTF-8 being the most popular. In UTF-8, a character is
   represented using a variable number of bytes ranging from 1 to 4.

   Since NeoMutt is a command-line tool run from a shell, and delegates
   certain tasks to external tools (such as an editor for
   composing/editing messages), all of these tools need to agree on a
   character set and encoding. There exists no way to reliably deduce the
   character set a plain text file has. Interoperability is gained by the
   use of well-defined environment variables. The full set can be printed
   by issuing locale on the command line.

   Upon startup, NeoMutt determines the character set on its own using
   routines that inspect locale-specific environment variables. Therefore,
   it is generally not necessary to set the $charset variable in NeoMutt.
   It may even be counter-productive as NeoMutt uses system and library
   functions that derive the character set themselves and on which NeoMutt
   has no influence. It's safest to let NeoMutt work out the locale setup
   itself.

   If you happen to work with several character sets on a regular basis,
   it's highly advisable to use Unicode and an UTF-8 locale. Unicode can
   represent nearly all characters in a message at the same time. When not
   using a Unicode locale, it may happen that you receive messages with
   characters not representable in your locale. When displaying such a
   message, or replying to or forwarding it, information may get lost
   possibly rendering the message unusable (not only for you but also for
   the recipient, this breakage is not reversible as lost information
   cannot be guessed).

   A Unicode locale makes all conversions superfluous which eliminates the
   risk of conversion errors. It also eliminates potentially wrong
   expectations about the character set between NeoMutt and external
   programs.

   The terminal emulator used also must be properly configured for the
   current locale. Terminal emulators usually do _n_o_t derive the locale
   from environment variables, they need to be configured separately. If
   the terminal is incorrectly configured, NeoMutt may display random and
   unexpected characters (question marks, octal codes, or just random
   glyphs), format strings may not work as expected, you may not be abled
   to enter non-ascii characters, and possible more. Data is always
   represented using bytes and so a correct setup is very important as to
   the machine, all character sets "look" the same.

   Warning: A mismatch between what system and library functions think the
   locale is and what NeoMutt was told what the locale is may make it
   behave badly with non-ascii input: it will fail at seemingly random
   places. This warning is to be taken seriously since not only local mail
   handling may suffer: sent messages may carry wrong character set
   information the _r_e_c_e_i_v_e_r has too deal with. The need to set $charset
   directly in most cases points at terminal and environment variable
   setup problems, not NeoMutt problems.

   A list of officially assigned and known character sets can be found at
   IIAANNAA, a list of locally supported locales can be obtained by running
   locale -a.

2. Regular Expressions

   All string patterns in NeoMutt including those in more complex ppaatttteerrnnss
   must be specified using regular expressions (regex) in the "POSIX
   extended" syntax (which is more or less the syntax used by egrep and
   GNU awk). For your convenience, we have included below a brief
   description of this syntax.

   The search is case sensitive if the pattern contains at least one upper
   case letter, and case insensitive otherwise.

Note

   "\" must be quoted if used for a regular expression in an
   initialization command: "\\".

   A regular expression is a pattern that describes a set of strings.
   Regular expressions are constructed analogously to arithmetic
   expressions, by using various operators to combine smaller expressions.

Note

   The regular expression can be enclosed/delimited by either " or ' which
   is useful if the regular expression includes a white-space character.
   See SSyynnttaaxx  ooff  IInniittiiaalliizzaattiioonn  FFiilleess for more information on " and '
   delimiter processing. To match a literal " or ' you must preface it
   with \ (backslash).

   The fundamental building blocks are the regular expressions that match
   a single character. Most characters, including all letters and digits,
   are regular expressions that match themselves. Any metacharacter with
   special meaning may be quoted by preceding it with a backslash.

   The period "." matches any single character. The caret "^" and the
   dollar sign "$" are metacharacters that respectively match the empty
   string at the beginning and end of a line.

   A list of characters enclosed by "[" and "]" matches any single
   character in that list; if the first character of the list is a caret
   "^" then it matches any character _n_o_t in the list. For example, the
   regular expression _[_0_1_2_3_4_5_6_7_8_9_] matches any single digit. A range of
   ASCII characters may be specified by giving the first and last
   characters, separated by a hyphen "-". Most metacharacters lose their
   special meaning inside lists. To include a literal "]" place it first
   in the list. Similarly, to include a literal "^" place it anywhere but
   first. Finally, to include a literal hyphen "-" place it last.

   Certain named classes of characters are predefined. Character classes
   consist of "[:", a keyword denoting the class, and ":]". The following
   classes are defined by the POSIX standard in TTaabbllee  44..11,,  ""PPOOSSIIXX  rreegguullaarr
   eexxpprreessssiioonn  cchhaarraacctteerr  ccllaasssseess""

   _T_a_b_l_e_ _4_._1_._ _P_O_S_I_X_ _r_e_g_u_l_a_r_ _e_x_p_r_e_s_s_i_o_n_ _c_h_a_r_a_c_t_e_r_ _c_l_a_s_s_e_s
   Character class Description
   [:alnum:] Alphanumeric characters
   [:alpha:] Alphabetic characters
   [:blank:] Space or tab characters
   [:cntrl:] Control characters
   [:digit:] Numeric characters
   [:graph:] Characters that are both printable and visible. (A space is
   printable, but not visible, while an "a" is both)
   [:lower:] Lower-case alphabetic characters
   [:print:] Printable characters (characters that are not control
   characters)
   [:punct:] Punctuation characters (characters that are not letter,
   digits, control characters, or space characters)
   [:space:] Space characters (such as space, tab and formfeed, to name a
   few)
   [:upper:] Upper-case alphabetic characters
   [:xdigit:] Characters that are hexadecimal digits

   A character class is only valid in a regular expression inside the
   brackets of a character list.

Note

   Note that the brackets in these class names are part of the symbolic
   names, and must be included in addition to the brackets delimiting the
   bracket list. For example, _[_[_:_d_i_g_i_t_:_]_] is equivalent to _[_0_-_9_].

   Two additional special sequences can appear in character lists. These
   apply to non-ASCII character sets, which can have single symbols
   (called collating elements) that are represented with more than one
   character, as well as several characters that are equivalent for
   collating or sorting purposes:

   Collating Symbols
          A collating symbol is a multi-character collating element
          enclosed in "[." and ".]". For example, if "ch" is a collating
          element, then _[_[_._c_h_._]_] is a regex that matches this collating
          element, while _[_c_h_] is a regex that matches either "c" or "h".

   Equivalence Classes
          An equivalence class is a locale-specific name for a list of
          characters that are equivalent. The name is enclosed in "[=" and
          "=]". For example, the name "e" might be used to represent all
          of "e" with grave ("e"), "e" with acute ("e") and "e". In this
          case, _[_[_=_e_=_]_] is a regex that matches any of: "e" with grave
          ("e"), "e" with acute ("e") and "e".

   A regular expression matching a single character may be followed by one
   of several repetition operators described in TTaabbllee  44..22,,  ""RReegguullaarr
   eexxpprreessssiioonn  rreeppeettiittiioonn  ooppeerraattoorrss"".

   _T_a_b_l_e_ _4_._2_._ _R_e_g_u_l_a_r_ _e_x_p_r_e_s_s_i_o_n_ _r_e_p_e_t_i_t_i_o_n_ _o_p_e_r_a_t_o_r_s
   Operator Description
   ? The preceding item is optional and matched at most once
   * The preceding item will be matched zero or more times
   + The preceding item will be matched one or more times
   {n} The preceding item is matched exactly _n times
   {n,} The preceding item is matched _n or more times
   {,m} The preceding item is matched at most _m times
   {n,m} The preceding item is matched at least _n times, but no more than
   _m times

   Two regular expressions may be concatenated; the resulting regular
   expression matches any string formed by concatenating two substrings
   that respectively match the concatenated subexpressions.

   Two regular expressions may be joined by the infix operator "|"; the
   resulting regular expression matches any string matching either
   subexpression.

   Repetition takes precedence over concatenation, which in turn takes
   precedence over alternation. A whole subexpression may be enclosed in
   parentheses to override these precedence rules.

Note

   If you compile NeoMutt with the included regular expression engine, the
   following operators may also be used in regular expressions as
   described in TTaabbllee  44..33,,  ""GGNNUU  rreegguullaarr  eexxpprreessssiioonn  eexxtteennssiioonnss"".

   _T_a_b_l_e_ _4_._3_._ _G_N_U_ _r_e_g_u_l_a_r_ _e_x_p_r_e_s_s_i_o_n_ _e_x_t_e_n_s_i_o_n_s
   Expression Description
   \\y Matches the empty string at either the beginning or the end of a
   word
   \\B Matches the empty string within a word
   \\< Matches the empty string at the beginning of a word
   \\> Matches the empty string at the end of a word
   \\w Matches any word-constituent character (letter, digit, or
   underscore)
   \\W Matches any character that is not word-constituent
   \\` Matches the empty string at the beginning of a buffer (string)
   \\' Matches the empty string at the end of a buffer

   Please note however that these operators are not defined by POSIX, so
   they may or may not be available in stock libraries on various systems.

3. Patterns: Searching, Limiting and Tagging

3.1. Pattern Modifier

   Many of NeoMutt's commands allow you to specify a pattern to match
   (limit, tag-pattern, delete-pattern, etc.). TTaabbllee  44..44,,  ""PPaatttteerrnn
   mmooddiiffiieerrss"" shows several ways to select messages.

   _T_a_b_l_e_ _4_._4_._ _P_a_t_t_e_r_n_ _m_o_d_i_f_i_e_r_s
   Pattern modifier Description
   ~A all messages
   ~b _E_X_P_R messages which contain _E_X_P_R in the message body ***)
   =b _S_T_R_I_N_G If IMAP is enabled, like ~b but searches for _S_T_R_I_N_G on the
   server, rather than downloading each message and searching it locally.
   ~B _E_X_P_R messages which contain _E_X_P_Rin the whole message ***)
   =B _S_T_R_I_N_G If IMAP is enabled, like ~B but searches for _S_T_R_I_N_Gon the
   server, rather than downloading each message and searching it locally.
   ~c _E_X_P_R messages carbon-copied to _E_X_P_R
   %c _G_R_O_U_P messages carbon-copied to any member of _G_R_O_U_P
   ~C _E_X_P_R messages either to: or cc: _E_X_P_R
   %C _G_R_O_U_P messages either to: or cc: to any member of _G_R_O_U_P
   ~d [_M_I_N]-[_M_A_X] messages with "date-sent" in a Date range
   ~D deleted messages
   ~e _E_X_P_R messages which contains _E_X_P_R in the "Sender" field
   %e _G_R_O_U_P messages which contain a member of _G_R_O_U_P in the "Sender" field
   ~E expired messages
   ~F flagged messages
   ~f _E_X_P_R messages originating from _E_X_P_R
   %f _G_R_O_U_P messages originating from any member of _G_R_O_U_P
   ~g cryptographically signed messages
   ~G cryptographically encrypted messages
   ~h _E_X_P_R messages which contain _E_X_P_Rin the message header ***)
   =h _S_T_R_I_N_G If IMAP is enabled, like ~h but searches for _S_T_R_I_N_Gon the
   server, rather than downloading each message and searching it locally;
   _S_T_R_I_N_Gmust be of the form "header: substring"(see below).
   ~H _E_X_P_R messages with a spam attribute matching _E_X_P_R
   ~i _E_X_P_R messages which match _E_X_P_R in the "Message-ID" field
   ~k messages which contain PGP key material
   ~L _E_X_P_R messages either originated or received by _E_X_P_R
   %L _G_R_O_U_P message either originated or received by any member of _G_R_O_U_P
   ~l messages addressed to a known mailing list
   ~m [_M_I_N]-[_M_A_X] messages with numbers in the range _M_I_N to _M_A_X ***)
   ~m <[_M_A_X] messages with numbers less than _M_A_X ***)
   ~m >[_M_I_N] messages with numbers greater than _M_I_N ***)
   ~m [_M] just message number _M ***)
   ~m [_M_I_N],[_M_A_X] messages with offsets (from selected message) in the
   range _M_I_N to _M_A_X ***)
   ~M _E_X_P_R messages which contain a mime Content-Type matching _E_X_P_R****)
   ~n [_M_I_N]-[_M_A_X] messages with a score in the range _M_I_N to _M_A_X *)
   ~N new messages
   ~O old messages
   ~p messages addressed to you (consults _a_l_t_e_r_n_a_t_e_s)
   ~P messages from you (consults _a_l_t_e_r_n_a_t_e_s)
   ~Q messages which have been replied to
   ~r [_M_I_N]-[_M_A_X] messages with "date-received" in a Date range
   ~R read messages
   ~s _E_X_P_R messages having _E_X_P_R in the "Subject" field.
   ~S superseded messages
   ~t _E_X_P_R messages addressed to _E_X_P_R
   ~T tagged messages
   ~u messages addressed to a subscribed mailing list
   ~U unread messages
   ~v messages part of a collapsed thread.
   ~V cryptographically verified messages
   ~x _E_X_P_R messages which contain _E_X_P_R in the "References" or
   "In-Reply-To" field
   ~X [ _M_I_N]-[ _M_A_X] messages with _M_I_Nto _M_A_Xattachments *) ****)
   ~y _E_X_P_R messages which contain _E_X_P_R in their keywords
   ~z [_M_I_N]-[_M_A_X] messages with a size in the range _M_I_N to _M_A_X *) **)
   =/ _S_T_R_I_N_G IMAP custom server-side search for _S_T_R_I_N_G. Currently only
   defined for Gmail. See: GGMMaaiill  PPaatttteerrnnss
   ~= duplicated messages (see $$dduupplliiccaattee__tthhrreeaaddss)
   ~# broken threads (see $$ssttrriicctt__tthhrreeaaddss)
   ~$ unreferenced messages (requires threaded view)
   ~(_P_A_T_T_E_R_N) messages in threads containing messages matching _P_A_T_T_E_R_N,
   e.g. all threads containing messages from you: ~(~P)
   ~<(_P_A_T_T_E_R_N) messages whose immediate parent matches _P_A_T_T_E_R_N, e.g.
   replies to your messages: ~<(~P)
   ~>(_P_A_T_T_E_R_N) messages having an immediate child matching _P_A_T_T_E_R_N, e.g.
   messages you replied to: ~>(~P)

   Where _E_X_P_R is a rreegguullaarr  eexxpprreessssiioonn, and _G_R_O_U_P is an aaddddrreessss  ggrroouupp.

   *) The forms "<[_M_A_X]", ">[_M_I_N]", "[_M_I_N]-" and "-[_M_A_X]" are allowed,
   too.

   **) The suffixes "K" and "M" are allowed to specify kilobyte and
   megabyte respectively.

   ***) The message number ranges (introduced by ~m) are even more general
   and powerful than the other types of ranges. Read on and see
   SSeeccttiioonn  33..11..11,,  ""MMeessssaaggee  RRaannggeess"" below.

   ****) These patterns read each message in, and can therefore be much
   slower. Over IMAP this will entail downloading each message. They can
   not be used for mmeessssaaggee  ssccoorriinngg, and it is recommended to avoid using
   them for index coloring.

   Special attention has to be paid when using regular expressions inside
   of patterns. Specifically, NeoMutt's parser for these patterns will
   strip one level of backslash ("\"), which is normally used for quoting.
   If it is your intention to use a backslash in the regular expression,
   you will need to use two backslashes instead ("\\").

   You can force NeoMutt to treat _E_X_P_R as a simple substring instead of a
   regular expression by using = instead of ~ in the pattern name. For
   example, =b *.* will find all messages that contain the literal string
   "*.*". Simple string matches are less powerful than regular expressions
   but can be considerably faster.

   For IMAP folders, string matches =b, =B, and =h will be performed on
   the server instead of by fetching every message. IMAP treats =h
   specially: it must be of the form "header: substring" and will not
   partially match header names. The substring part may be omitted if you
   simply wish to find messages containing a particular header without
   regard to its value.

   Patterns matching lists of addresses (notably c, C, p, P and t) match
   if there is at least one match in the whole list. If you want to make
   sure that all elements of that list match, you need to prefix your
   pattern with "^". This example matches all mails which only has
   recipients from Germany.

   _E_x_a_m_p_l_e_ _4_._1_._ _M_a_t_c_h_i_n_g_ _a_l_l_ _a_d_d_r_e_s_s_e_s_ _i_n_ _a_d_d_r_e_s_s_ _l_i_s_t_s
^~C \.de$

   You can restrict address pattern matching to aliases that you have
   defined with the "@" modifier. This example matches messages whose
   recipients are all from Germany, and who are known to your alias list.

   _E_x_a_m_p_l_e_ _4_._2_._ _M_a_t_c_h_i_n_g_ _r_e_s_t_r_i_c_t_e_d_ _t_o_ _a_l_i_a_s_e_s
^@~C \.de$

   To match any defined alias, use a regular expression that matches any
   string. This example matches messages whose senders are known aliases.

   _E_x_a_m_p_l_e_ _4_._3_._ _M_a_t_c_h_i_n_g_ _a_n_y_ _d_e_f_i_n_e_d_ _a_l_i_a_s
@~f .

3.1.1. Message Ranges

   If a message number range (from now on: MNR) contains a comma (,), it
   is a _r_e_l_a_t_i_v_e MNR. That means the numbers denote _o_f_f_s_e_t_s from the
   highlighted message. For example:

   _T_a_b_l_e_ _4_._5_._ _R_e_l_a_t_i_v_e_ _M_e_s_s_a_g_e_ _N_u_m_b_e_r_ _R_a_n_g_e_s
   Pattern                Explanation
   ~m -2,2 Previous 2, highlighted and next 2 emails
   ~m 0,1  Highlighted and next email

   In addition to numbers, either side of the range can also contain one
   of the special characters (shortcuts) .^$. The meaning is:

   _T_a_b_l_e_ _4_._6_._ _M_e_s_s_a_g_e_ _N_u_m_b_e_r_ _S_h_o_r_t_c_u_t_s
   Shortcut Explanation Example Meaning
   . Current / Highlighted ~m -3,. Previous 3 emails plus the highlighted
   one
   $ Last ~m .,$ Highlighted email and all the later ones
   ^ First ~m ^,1 Highlighted, next and all preceding ones

   Lastly, you can also leave either side of the range blank, to make it
   extend as far as possible. For example, ~m ,1 has the same meaning as
   the last example in TTaabbllee  44..66,,  ""MMeessssaaggee  NNuummbbeerr  SShhoorrttccuuttss"".

   Otherwise, if a MNR _d_o_e_s_n_'_t contain a comma, the meaning is similar to
   other ranges, except that the shortcuts are still available. Examples:

   _T_a_b_l_e_ _4_._7_._ _A_b_s_o_l_u_t_e_ _M_e_s_s_a_g_e_ _N_u_m_b_e_r_ _R_a_n_g_e_s
   Pattern        Explanation
   ~m 3-10 Emails 3 to 10
   ~m -10  Emails 1 to 10
   ~m 10-  Emails 10 to last
   ~m <3   First and second email
   ~m ^-2  First and second email
   ~m >1   Everything but first email
   ~m 2-$  Everything but first email
   ~m 2    Just the second email

3.2. Simple Searches

   NeoMutt supports two versions of so called "simple searches". These are
   issued if the query entered for searching, limiting and similar
   operations does not seem to contain a valid pattern modifier (i.e. it
   does not contain one of these characters: "~", "=" or "%"). If the
   query is supposed to contain one of these special characters, they must
   be escaped by prepending a backslash ("\").

   The first type is by checking whether the query string equals a keyword
   case-insensitively from TTaabbllee  44..88,,  ""SSiimmppllee  sseeaarrcchh  kkeeyywwoorrddss"": If that is
   the case, NeoMutt will use the shown pattern modifier instead. If a
   keyword would conflict with your search keyword, you need to turn it
   into a regular expression to avoid matching the keyword table. For
   example, if you want to find all messages matching "flag" (using
   $$ssiimmppllee__sseeaarrcchh) but don't want to match flagged messages, simply search
   for "[f]lag".

   _T_a_b_l_e_ _4_._8_._ _S_i_m_p_l_e_ _s_e_a_r_c_h_ _k_e_y_w_o_r_d_s
   Keyword Pattern modifier
   all     ~A
   .       ~A
   ^       ~A
   del     ~D
   flag    ~F
   new     ~N
   old     ~O
   repl    ~Q
   read    ~R
   tag     ~T
   unread  ~U

   The second type of simple search is to build a complex search pattern
   using $$ssiimmppllee__sseeaarrcchh as a template. NeoMutt will insert your query
   properly quoted and search for the composed complex query.

3.3. Nesting and Boolean Operators

   Logical AND is performed by specifying more than one criterion. For
   example:
~t work ~f elkins

   would select messages which contain the word "work" in the list of
   recipients _a_n_d that have the word "elkins" in the "From" header field.

   NeoMutt also recognizes the following operators to create more complex
   search patterns:
     * ! - logical NOT operator
     * | - logical OR operator
     * () - logical grouping operator

   Here is an example illustrating a complex search pattern. This pattern
   will select all messages which do not contain "work" in the "To" or
   "Cc" field and which are from "elkins".

   _E_x_a_m_p_l_e_ _4_._4_._ _U_s_i_n_g_ _b_o_o_l_e_a_n_ _o_p_e_r_a_t_o_r_s_ _i_n_ _p_a_t_t_e_r_n_s
!(~t work|~c work) ~f elkins

   Here is an example using white space in the regular expression (note
   the "'" and """ delimiters). For this to match, the mail's subject must
   match the "^Junk +From +Me$" and it must be from either "Jim +Somebody"
   or "Ed +SomeoneElse":
'~s "^Junk +From +Me$" ~f ("Jim +Somebody"|"Ed +SomeoneElse")'

Note

   If a regular expression contains parenthesis, or a vertical bar ("|"),
   you _m_u_s_t enclose the expression in double or single quotes since those
   characters are also used to separate different parts of NeoMutt's
   pattern language. For example: ~f "user@(home\.org|work\.com)" Without
   the quotes, the parenthesis wouldn't end. This would be separated to
   two OR'd patterns: _~_f_ _u_s_e_r_@_(_h_o_m_e_\_._o_r_g and _w_o_r_k_\_._c_o_m_). They are never
   what you want.

3.4. Searching by Date

   NeoMutt supports two types of dates, _a_b_s_o_l_u_t_e and _r_e_l_a_t_i_v_e.

3.4.1. Absolute Dates

   Dates _m_u_s_t be in DD/MM/YY format (month and year are optional,
   defaulting to the current month and year). An example of a valid range
   of dates is:
Limit to messages matching: ~d 20/1/95-31/10

   If you omit the minimum (first) date, and just specify "-DD/MM/YY", all
   messages _b_e_f_o_r_e the given date will be selected. If you omit the
   maximum (second) date, and specify "DD/MM/YY-", all messages _a_f_t_e_r the
   given date will be selected. If you specify a single date with no dash
   ("-"), only messages sent on the given date will be selected.

   You can add error margins to absolute dates. An error margin is a sign
   (+ or -), followed by a digit, followed by one of the units in
   TTaabbllee  44..99,,  ""DDaattee  uunniittss"". As a special case, you can replace the sign by
   a "*" character, which is equivalent to giving identical plus and minus
   error margins.

   _T_a_b_l_e_ _4_._9_._ _D_a_t_e_ _u_n_i_t_s
   Unit Description
   y    Years
   m    Months
   w    Weeks
   d    Days

   Example: To select any messages two weeks around January 15, 2001,
   you'd use the following pattern:
Limit to messages matching: ~d 15/1/2001*2w

3.4.2. Relative Dates

   This type of date is relative to the current date, and may be specified
   as:
     * > _o_f_f_s_e_t for messages older than _o_f_f_s_e_t units
     * < _o_f_f_s_e_t for messages newer than _o_f_f_s_e_t units
     * = _o_f_f_s_e_t for messages exactly _o_f_f_s_e_t units old

   _o_f_f_s_e_t is specified as a positive number with one of the units from
   TTaabbllee  44..99,,  ""DDaattee  uunniittss"".

   Example: to select messages less than 1 month old, you would use
Limit to messages matching: ~d <1m

Note

   All dates used when searching are relative to the _l_o_c_a_l time zone, so
   unless you change the setting of your $$iinnddeexx__ffoorrmmaatt to include a %[...]
   format, these are _n_o_t the dates shown in the main index.

3.5. GMail Patterns

   =/ "search terms" invokes server-side search, passing along the search
   terms provided. Search results are constrained by IMAP to be within the
   current folder. At present this only supports Gmail's search API IMAP
   extension. The search language is entirely up to the mail provider and
   changes at their discretion. Using ~/ will silently fail.

   For up-to-date information about searching, see: GGMMaaiill''ss  SSuuppppoorrtt  PPaaggee.
   You will need to (once) use a web-browser to visit Settings/Labels and
   enable "Show in IMAP" for "All Mail". When searching, visit that folder
   in NeoMutt to most closely match Gmail search semantics.

   _T_a_b_l_e_ _4_._1_0_._ _G_M_a_i_l_ _E_x_a_m_p_l_e_ _P_a_t_t_e_r_n_s
   Pattern Matches
   =/ "list:foo.example.org has:attachment is:important" the
   foo.example.org mailing-list per Gmail's definitions, and has an
   attachment, and has been marked as important
   =/ "{has:purple-star has:yellow-star} older_than:2m" is older than two
   months and has either a purple-star or a yellow-star

4. Marking Messages

   There are times that it's useful to ask NeoMutt to "remember" which
   message you're currently looking at, while you move elsewhere in your
   mailbox. You can do this with the "mark-message" operator, which is
   bound to the "~" key by default. Press this key to enter an identifier
   for the marked message. When you want to return to this message, press
   "'" and the name that you previously entered.

   (Message marking is really just a shortcut for defining a macro that
   returns you to the current message by searching for its Message-ID. You
   can choose a different prefix by setting the $$mmaarrkk__mmaaccrroo__pprreeffiixx
   variable.)

5. Using Tags

   Sometimes it is desirable to perform an operation on a group of
   messages all at once rather than one at a time. An example might be to
   save messages to a mailing list to a separate folder, or to delete all
   messages with a given subject. To tag all messages matching a pattern,
   use the <tag-pattern> function, which is bound to "shift-T" by default.
   Or you can select individual messages by hand using the <tag-message>
   function, which is bound to "t" by default. See ppaatttteerrnnss for NeoMutt's
   pattern matching syntax.

   Once you have tagged the desired messages, you can use the "tag-prefix"
   operator, which is the ";" (semicolon) key by default. When the
   "tag-prefix" operator is used, the _n_e_x_t operation will be applied to
   all tagged messages if that operation can be used in that manner. If
   the $$aauuttoo__ttaagg variable is set, the next operation applies to the tagged
   messages automatically, without requiring the "tag-prefix".

   In mmaaccrrooss or ppuusshh commands, you can use the <tag-prefix-cond> operator.
   If there are no tagged messages, NeoMutt will "eat" the rest of the
   macro to abort it's execution. NeoMutt will stop "eating" the macro
   when it encounters the <end-cond> operator; after this operator the
   rest of the macro will be executed as normal.

6. Using Hooks

   A _h_o_o_k is a concept found in many other programs which allows you to
   execute arbitrary commands before performing some operation. For
   example, you may wish to tailor your configuration based upon which
   mailbox you are reading, or to whom you are sending mail. In the
   NeoMutt world, a _h_o_o_k consists of a rreegguullaarr  eexxpprreessssiioonn or ppaatttteerrnn along
   with a configuration option/command. See:
     * aaccccoouunntt--hhooookk
     * cchhaarrsseett--hhooookk
       iiccoonnvv--hhooookk
     * ccrryypptt--hhooookk
     * ffcccc--ssaavvee--hhooookk
       ffcccc--hhooookk
       ssaavvee--hhooookk
     * ffoollddeerr--hhooookk
     * mmbbooxx--hhooookk
     * mmeessssaaggee--hhooookk
     * ooppeenn--hhooookk
       cclloossee--hhooookk
       aappppeenndd--hhooookk
     * rreeppllyy--hhooookk
       sseenndd--hhooookk
       sseenndd22--hhooookk
     * ttiimmeeoouutt--hhooookk
       ssttaarrttuupp--hhooookk
       sshhuuttddoowwnn--hhooookk
     * uunnhhooookk

   for specific details on each type of _h_o_o_k available.

Note

   If a hook changes configuration settings, these changes remain
   effective until the end of the current NeoMutt session. As this is
   generally not desired, a "default" hook needs to be added before all
   other hooks of that type to restore configuration defaults.

   _E_x_a_m_p_l_e_ _4_._5_._ _S_p_e_c_i_f_y_i_n_g_ _a_ _"_d_e_f_a_u_l_t_"_ _h_o_o_k
send-hook . 'unmy_hdr From:'
send-hook ~C'^b@b\.b$' my_hdr from: c@c.c

   In EExxaammppllee  44..55,,  ""SSppeecciiffyyiinngg  aa  ""ddeeffaauulltt""  hhooookk"", by default the value of
   $$ffrroomm and $$rreeaallnnaammee is not overridden. When sending messages either To:
   or Cc: to <b@b.b>, the From: header is changed to <c@c.c>.

6.1. Message Matching in Hooks

   Hooks that act upon messages (_m_e_s_s_a_g_e_-_h_o_o_k, _r_e_p_l_y_-_h_o_o_k, _s_e_n_d_-_h_o_o_k,
   _s_e_n_d_2_-_h_o_o_k, _s_a_v_e_-_h_o_o_k, _f_c_c_-_h_o_o_k) are evaluated in a slightly different
   manner. For the other types of hooks, a rreegguullaarr  eexxpprreessssiioonn is
   sufficient. But in dealing with messages a finer grain of control is
   needed for matching since for different purposes you want to match
   different criteria.

   NeoMutt allows the use of the sseeaarrcchh  ppaatttteerrnn language for matching
   messages in hook commands. This works in exactly the same way as it
   would when _l_i_m_i_t_i_n_g or _s_e_a_r_c_h_i_n_g the mailbox, except that you are
   restricted to those operators which match information NeoMutt extracts
   from the header of the message (i.e., from, to, cc, date, subject,
   etc.).

   For example, if you wanted to set your return address based upon
   sending mail to a specific address, you could do something like:
send-hook '~t ^user@work\.com$' 'my_hdr From: John Smith <user@host>'

   which would execute the given command when sending mail to
   _u_s_e_r_@_w_o_r_k_._c_o_m.

   However, it is not required that you write the pattern to match using
   the full searching language. You can still specify a simple _r_e_g_u_l_a_r
   _e_x_p_r_e_s_s_i_o_n like the other hooks, in which case NeoMutt will translate
   your pattern into the full language, using the translation specified by
   the $$ddeeffaauulltt__hhooookk variable. The pattern is translated at the time the
   hook is declared, so the value of $$ddeeffaauulltt__hhooookk that is in effect at
   that time will be used.

6.2. Mailbox Matching in Hooks

   Hooks that match against mailboxes (_f_o_l_d_e_r_-_h_o_o_k, _m_b_o_x_-_h_o_o_k) apply both
   rreegguullaarr  eexxpprreessssiioonn syntax as well as mmaaiillbbooxx  sshhoorrttccuutt expansion on the
   regex parameter. There is some overlap between these, so special
   attention should be paid to the first character of the regex.
# Here, ^ will expand to "the current mailbox" not "beginning of string":
folder-hook ^/home/user/Mail/bar "set sort=threads"
# If you want ^ to be interpreted as "beginning of string", one workaround
# is to enclose the regex in parenthesis:
folder-hook (^/home/user/Mail/bar) "set sort=threads"
# This will expand to the default save folder for the alias "imap.example.com",
which
# is probably not what you want:
folder-hook @imap.example.com "set sort=threads"
# A workaround is to use parenthesis or a backslash:
folder-hook (@imap.example.com) "set sort=threads"
folder-hook '\@imap.example.com' "set sort=threads"

   Keep in mind that mailbox shortcut expansion on the regex parameter
   takes place when the hook is initially parsed, not when the hook is
   matching against a mailbox. When NeoMutt starts up and is reading the
   .neomuttrc, some mailbox shortcuts may not be usable. For example, the
   "current mailbox" shortcut, ^, will expand to an empty string because
   no mailbox has been opened yet. NeoMutt will issue an error for this
   case or if the mailbox shortcut results in an empty regex.

7. Managing the Environment

   You can alter the environment that NeoMutt passes on to its child
   processes using the "setenv" and "unsetenv" operators. (N.B. These
   follow NeoMutt-style syntax, not shell-style!) You can also query
   current environment values by prefixing a "?" character.
setenv TERM vt100
setenv ORGANIZATION "The NeoMutt Development Team"
unsetenv DISPLAY
setenv ?LESS

8. External Address Queries

   NeoMutt supports connecting to external directory databases such as
   LDAP, ph/qi, bbdb, or NIS through a wrapper script which connects to
   NeoMutt using a simple interface. Using the $$qquueerryy__ccoommmmaanndd variable,
   you specify the wrapper command to use. For example:
set query_command = "mutt_ldap_query.pl %s"

   The wrapper script should accept the query on the command-line. It
   should return a one line message, then each matching response on a
   single line, each line containing a tab separated address then name
   then some other optional information. On error, or if there are no
   matching addresses, return a non-zero exit code and a one line error
   message.

   An example multiple response output:
Searching database ... 20 entries ... 3 matching:
me@cs.hmc.edu           Michael Elkins  mutt dude
blong@fiction.net       Brandon Long    mutt and more
roessler@does-not-exist.org        Thomas Roessler mutt pgp

   There are two mechanisms for accessing the query function of NeoMutt.
   One is to do a query from the index menu using the <query> function
   (default: Q). This will prompt for a query, then bring up the query
   menu which will list the matching responses. From the query menu, you
   can select addresses to create aliases, or to mail. You can tag
   multiple addresses to mail, start a new query, or have a new query
   appended to the current responses.

   The other mechanism for accessing the query function is for address
   completion, similar to the alias completion. In any prompt for address
   entry, you can use the <complete-query> function (default: ^T) to run a
   query based on the current address you have typed. Like aliases,
   NeoMutt will look for what you have typed back to the last space or
   comma. If there is a single response for that query, NeoMutt will
   expand the address in place. If there are multiple responses, NeoMutt
   will activate the query menu. At the query menu, you can select one or
   more addresses to be added to the prompt.

9. Mailbox Formats

   NeoMutt supports reading and writing of four different local mailbox
   formats: mbox, MMDF, MH and Maildir. The mailbox type is auto detected,
   so there is no need to use a flag for different mailbox types. When
   creating new mailboxes, NeoMutt uses the default specified with the
   $$mmbbooxx__ttyyppee variable. A short description of the formats follows.

   _m_b_o_x. This is a widely used mailbox format for UNIX. All messages are
   stored in a single file. Each message has a line of the form:
From me@cs.hmc.edu Fri, 11 Apr 1997 11:44:56 PST

   to denote the start of a new message (this is often referred to as the
   "From_" line). The mbox format requires mailbox locking, is prone to
   mailbox corruption with concurrently writing clients or misinterpreted
   From_ lines. Depending on the environment, new mail detection can be
   unreliable. Mbox folders are fast to open and easy to archive.

   _M_M_D_F. This is a variant of the _m_b_o_x format. Each message is surrounded
   by lines containing "^A^A^A^A" (four times control-A's). The same
   problems as for mbox apply (also with finding the right message
   separator as four control-A's may appear in message bodies).

   _M_H. A radical departure from _m_b_o_x and _M_M_D_F, a mailbox consists of a
   directory and each message is stored in a separate file. The filename
   indicates the message number (however, this is may not correspond to
   the message number NeoMutt displays). Deleted messages are renamed with
   a comma (",") prepended to the filename. NeoMutt detects this type of
   mailbox by looking for either .mh_sequences or .xmhcache files (needed
   to distinguish normal directories from MH mailboxes). MH is more robust
   with concurrent clients writing the mailbox, but still may suffer from
   lost flags; message corruption is less likely to occur than with
   mbox/mmdf. It's usually slower to open compared to mbox/mmdf since many
   small files have to be read (NeoMutt provides SSeeccttiioonn  77..11,,  ""HHeeaaddeerr
   CCaacchhiinngg"" to greatly speed this process up). Depending on the
   environment, MH is not very disk-space efficient.

   _M_a_i_l_d_i_r. The newest of the mailbox formats, used by the Qmail MTA (a
   replacement for sendmail). Similar to _M_H, except that it adds three
   subdirectories of the mailbox: _t_m_p, _n_e_w and _c_u_r. Filenames for the
   messages are chosen in such a way they are unique, even when two
   programs are writing the mailbox over NFS, which means that no file
   locking is needed and corruption is very unlikely. Maildir maybe slower
   to open without caching in NeoMutt, it too is not very disk-space
   efficient depending on the environment. Since no additional files are
   used for metadata (which is embedded in the message filenames) and
   Maildir is locking-free, it's easy to sync across different machines
   using file-level synchronization tools.

10. Mailbox Shortcuts

   There are a number of built in shortcuts which refer to specific
   mailboxes. These shortcuts can be used anywhere you are prompted for a
   file or mailbox path or in path-related configuration variables. Note
   that these only work at the beginning of a string.

   _T_a_b_l_e_ _4_._1_1_._ _M_a_i_l_b_o_x_ _s_h_o_r_t_c_u_t_s
   Shortcut Refers to...
   ! your $$ssppoooollffiillee (incoming) mailbox
   > your $$mmbbooxx file
   < your $$rreeccoorrdd file
   ^ the current mailbox
   - or !! the file you've last visited
   ~ your home directory
   = or + your $$ffoollddeerr directory
   _@_a_l_i_a_s to the ddeeffaauulltt  ssaavvee  ffoollddeerr as determined by the address of the
   alias

   For example, to store a copy of outgoing messages in the folder they
   were composed in, a ffoollddeerr--hhooookk can be used to set $$rreeccoorrdd:
folder-hook . 'set record=^'

11. Handling Mailing Lists

   NeoMutt has a few configuration options that make dealing with large
   amounts of mail easier. The first thing you must do is to let NeoMutt
   know what addresses you consider to be mailing lists (technically this
   does not have to be a mailing list, but that is what it is most often
   used for), and what lists you are subscribed to. This is accomplished
   through the use of the lliissttss and ssuubbssccrriibbee commands in your .neomuttrc.

   Now that NeoMutt knows what your mailing lists are, it can do several
   things, the first of which is the ability to show the name of a list
   through which you received a message (i.e., of a subscribed list) in
   the _i_n_d_e_x menu display. This is useful to distinguish between personal
   and list mail in the same mailbox. In the $$iinnddeexx__ffoorrmmaatt variable, the
   expando "%L" will print the string "To <list>" when "list" appears in
   the "To" field, and "Cc <list>" when it appears in the "Cc" field
   (otherwise it prints the name of the author).

   Often times the "To" and "Cc" fields in mailing list messages tend to
   get quite large. Most people do not bother to remove the author of the
   message they reply to from the list, resulting in two or more copies
   being sent to that person. The <list-reply> function, which by default
   is bound to "L" in the _i_n_d_e_x menu and _p_a_g_e_r, helps reduce the clutter
   by only replying to the known mailing list addresses instead of all
   recipients (except as specified by Mail-Followup-To, see below).

   NeoMutt also supports the Mail-Followup-To header. When you send a
   message to a list of recipients which includes one or several known
   mailing lists, and if the $$ffoolllloowwuupp__ttoo option is set, NeoMutt will
   generate a Mail-Followup-To header. If any of the recipients are
   subscribed mailing lists, this header will contain all the recipients
   to whom you send this message, but not your address. This indicates
   that group-replies or list-replies (also known as "followups") to this
   message should only be sent to the original recipients of the message,
   and not separately to you - you'll receive your copy through one of the
   mailing lists you are subscribed to. If none of the recipients are
   subscribed mailing lists, the header will also contain your address,
   ensuring you receive a copy of replies.

   Conversely, when group-replying or list-replying to a message which has
   a Mail-Followup-To header, NeoMutt will respect this header if the
   $$hhoonnoorr__ffoolllloowwuupp__ttoo configuration variable is set. Using lliisstt--rreeppllyy will
   in this case also make sure that the reply goes to the mailing list,
   even if it's not specified in the list of recipients in the
   Mail-Followup-To.

Note

   When header editing is enabled, you can create a Mail-Followup-To
   header manually. NeoMutt will only auto-generate this header if it
   doesn't exist when you send the message.

   The other method some mailing list admins use is to generate a
   "Reply-To" field which points back to the mailing list address rather
   than the author of the message. This can create problems when trying to
   reply directly to the author in private, since most mail clients will
   automatically reply to the address given in the "Reply-To" field.
   NeoMutt uses the $$rreeppllyy__ttoo variable to help decide which address to
   use. If set to _a_s_k_-_y_e_s or _a_s_k_-_n_o, you will be prompted as to whether or
   not you would like to use the address given in the "Reply-To" field, or
   reply directly to the address given in the "From" field. When set to
   _y_e_s, the "Reply-To" field will be used when present.

   You can change or delete the "X-Label:" field within NeoMutt using the
   "edit-label" command, bound to the "y" key by default. This works for
   tagged messages, too. While in the edit-label function, pressing the
   <complete> binding (TAB, by default) will perform completion against
   all labels currently in use.

   Lastly, NeoMutt has the ability to ssoorrtt the mailbox into tthhrreeaaddss. A
   thread is a group of messages which all relate to the same subject.
   This is usually organized into a tree-like structure where a message
   and all of its replies are represented graphically. If you've ever used
   a threaded news client, this is the same concept. It makes dealing with
   large volume mailing lists easier because you can easily delete
   uninteresting threads and quickly find topics of value.

12. Display Munging

   Working within the confines of a console or terminal window, it is
   often useful to be able to modify certain information elements in a
   non-destructive way - to change how they display, without changing the
   stored value of the information itself. This is especially so of
   message subjects, which may often be polluted with extraneous metadata
   that either is reproduced elsewhere, or is of secondary interest.

   subjectrx _p_a_t_t_e_r_n _r_e_p_l_a_c_e_m_e_n_t
   unsubjectrx { _* | _p_a_t_t_e_r_n }

   subjectrx specifies a regular expression "pattern" which, if detected
   in a message subject, causes the subject to be replaced with the
   "replacement" value. The replacement is subject to substitutions in the
   same way as for the ssppaamm command: %L for the text to the left of the
   match, %R for text to the right of the match, and %1 for the first
   subgroup in the match (etc). If you simply want to erase the match, set
   it to "%L%R". Any number of subjectrx commands may coexist.

   Note this well: the "replacement" value replaces the entire subject,
   not just the match!

   unsubjectrx removes a given subjectrx from the substitution list. If *
   is used as the pattern, all substitutions will be removed.

   _E_x_a_m_p_l_e_ _4_._6_._ _S_u_b_j_e_c_t_ _M_u_n_g_i_n_g
# Erase [rt #12345] tags from Request Tracker (RT) e-mails
subjectrx '\[rt #[0-9]+\] *' '%L%R'
# Servicedesk is another RT that sends more complex subjects.
# Keep the ticket number.
subjectrx '\[servicedesk #([0-9]+)\] ([^.]+)\.([^.]+) - (new|open|pending|update
) - ' '%L[#%1] %R'
# Strip out annoying [listname] prefixes in subjects
subjectrx '\[[^]]*\]:? *' '%L%R'

13. New Mail Detection

   NeoMutt supports setups with multiple folders, allowing all of them to
   be monitored for new mail (see SSeeccttiioonn  1144,,  ""MMoonniittoorriinngg  IInnccoommiinngg  MMaaiill""
   for details).

13.1. How New Mail Detection Works

   For Mbox and Mmdf folders, new mail is detected by comparing access
   and/or modification times of files: NeoMutt assumes a folder has new
   mail if it wasn't accessed after it was last modified. Utilities like
   biff or frm or any other program which accesses the mailbox might cause
   NeoMutt to never detect new mail for that mailbox if they do not
   properly reset the access time. Other possible causes of NeoMutt not
   detecting new mail in these folders are backup tools (updating access
   times) or filesystems mounted without access time update support (for
   Linux systems, see the relatime option).

Note

   Contrary to older NeoMutt releases, it now maintains the new mail
   status of a folder by properly resetting the access time if the folder
   contains at least one message which is neither read, nor deleted, nor
   marked as old.

   In cases where new mail detection for Mbox or Mmdf folders appears to
   be unreliable, the $$cchheecckk__mmbbooxx__ssiizzee option can be used to make NeoMutt
   track and consult file sizes for new mail detection instead which won't
   work for size-neutral changes.

   New mail for Maildir is assumed if there is one message in the new/
   subdirectory which is not marked deleted (see $$mmaaiillddiirr__ttrraasshh). For MH
   folders, a mailbox is considered having new mail if there's at least
   one message in the "unseen" sequence as specified by $$mmhh__sseeqq__uunnsseeeenn.
   Optionally, $$nneeww__mmaaiill__ccoommmmaanndd can be configured to execute an external
   program every time new mail is detected in the current inbox.

   NeoMutt does not poll POP3 folders for new mail, it only periodically
   checks the currently opened folder (if it's a POP3 folder).

   For IMAP, by default NeoMutt uses recent message counts provided by the
   server to detect new mail. If the $$iimmaapp__iiddllee option is set, it'll use
   the IMAP IDLE extension if advertised by the server.

   The $$mmaaiill__cchheecckk__rreecceenntt option changes whether NeoMutt will notify you
   of new mail in an already visited mailbox. When set (the default) it
   will only notify you of new mail received since the last time you
   opened the mailbox. When unset, NeoMutt will notify you of any new mail
   in the mailbox.

13.2. Polling For New Mail

   When in the index menu and being idle (also see $$ttiimmeeoouutt), NeoMutt
   periodically checks for new mail in all folders which have been
   configured via the _m_a_i_l_b_o_x_e_s command. The interval depends on the
   folder type: for local/IMAP folders it consults $$mmaaiill__cchheecckk and
   $$ppoopp__cchheecckkiinntteerrvvaall for POP folders.

   Outside the index menu the directory browser supports checking for new
   mail using the <check-new> function which is unbound by default.
   Pressing TAB will bring up a menu showing the files specified by the
   _m_a_i_l_b_o_x_e_s command, and indicate which contain new messages. NeoMutt
   will automatically enter this mode when invoked from the command line
   with the -y option.

   For the pager, index and directory browser menus, NeoMutt contains the
   <buffy-list> function (bound to "." by default) which will print a list
   of folders with new mail in the command line at the bottom of the
   screen.

   For the index, by default NeoMutt displays the number of mailboxes with
   new mail in the status bar, please refer to the $$ssttaattuuss__ffoorrmmaatt variable
   for details.

   When changing folders, NeoMutt fills the prompt with the first folder
   from the mailboxes list containing new mail (if any), pressing <Space>
   will cycle through folders with new mail. The (by default unbound)
   function <next-unread-mailbox> in the index can be used to immediately
   open the next folder with unread mail (if any).

13.3. Calculating Mailbox Message Counts

   If $$mmaaiill__cchheecckk__ssttaattss is set, NeoMutt will periodically calculate the
   unread, flagged, and total message counts for each mailbox watched by
   the _m_a_i_l_b_o_x_e_s command. This calculation takes place at the same time as
   new mail polling, but is controlled by a separate timer:
   $$mmaaiill__cchheecckk__ssttaattss__iinntteerrvvaall.

   The sidebar can display these message counts. See $$ssiiddeebbaarr__ffoorrmmaatt.

14. Editing Threads

   NeoMutt has the ability to dynamically restructure threads that are
   broken either by misconfigured software or bad behavior from some
   correspondents. This allows to clean your mailboxes from these
   annoyances which make it hard to follow a discussion.

14.1. Linking Threads

   Some mailers tend to "forget" to correctly set the "In-Reply-To:" and
   "References:" headers when replying to a message. This results in
   broken discussions because NeoMutt has not enough information to guess
   the correct threading. You can fix this by tagging the reply, then
   moving to the parent message and using the <link-threads> function
   (bound to & by default). The reply will then be connected to this
   parent message.

   You can also connect multiple children at once, tagging them and using
   the <tag-prefix> command (";") or the $$aauuttoo__ttaagg option.

14.2. Breaking Threads

   On mailing lists, some people are in the bad habit of starting a new
   discussion by hitting "reply" to any message from the list and changing
   the subject to a totally unrelated one. You can fix such threads by
   using the <break-thread> function (bound by default to #), which will
   turn the subthread starting from the current message into a whole
   different thread.

15. Delivery Status Notification (DSN) Support

   RFC1894 defines a set of MIME content types for relaying information
   about the status of electronic mail messages. These can be thought of
   as "return receipts."

   To support DSN, there are two variables. $$ddssnn__nnoottiiffyy is used to request
   receipts for different results (such as failed message, message
   delivered, etc.). $$ddssnn__rreettuurrnn requests how much of your message should
   be returned with the receipt (headers or full message).

   When using $$sseennddmmaaiill for mail delivery, you need to use either Berkeley
   sendmail 8.8.x (or greater) a MTA supporting DSN command line options
   compatible to Sendmail: The -N and -R options can be used by the mail
   client to make requests as to what type of status messages should be
   returned. Please consider your MTA documentation whether DSN is
   supported.

   For SMTP delivery using $$ssmmttpp__uurrll, it depends on the capabilities
   announced by the server whether NeoMutt will attempt to request DSN or
   not.

16. Start a WWW Browser on URLs

   If a message contains URLs, it is efficient to get a menu with all the
   URLs and start a WWW browser on one of them. This functionality is
   provided by the external urlview program which can be retrieved at
   ffttpp::////ffttpp..mmuutttt..oorrgg//mmuutttt//ccoonnttrriibb// and the configuration commands:
macro index \cb |urlview\n
macro pager \cb |urlview\n

17. Echoing Text

   Usage:

   echo _m_e_s_s_a_g_e

   You can print messages to the message window using the "echo" command.
   This might be useful after a macro finishes executing. After printing
   the message, echo will pause for the number of seconds specified by
   $$sslleeeepp__ttiimmee.
echo "Sourcing muttrc file" unset confirmappend macro index ,a "<save-message>=a
rchive<enter><enter-command>echo 'Saved to archive'<enter>"

18. Miscellany

   This section documents various features that fit nowhere else.

   Address normalization
          NeoMutt normalizes all e-mail addresses to the simplest form
          possible. If an address contains a realname, the form _J_o_e_ _U_s_e_r
          _<_j_o_e_@_e_x_a_m_p_l_e_._c_o_m_> is used and the pure e-mail address without
          angle brackets otherwise, i.e. just _j_o_e_@_e_x_a_m_p_l_e_._c_o_m.

          This normalization affects all headers NeoMutt generates
          including aliases.

   Initial folder selection
          The folder NeoMutt opens at startup is determined as follows:
          the folder specified in the $MAIL environment variable if
          present. Otherwise, the value of $MAILDIR is taken into account.
          If that isn't present either, NeoMutt takes the user's mailbox
          in the mailspool as determined at compile-time (which may also
          reside in the home directory). The $$ssppoooollffiillee setting overrides
          this selection. Highest priority has the mailbox given with the
          -f command line option.

Chapter 5. NeoMutt's MIME Support

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  UUssiinngg  MMIIMMEE  iinn  NNeeooMMuutttt

        11..11..  MMIIMMEE  OOvveerrvviieeww
        11..22..  VViieewwiinngg  MMIIMMEE  MMeessssaaggeess  iinn  tthhee  PPaaggeerr
        11..33..  TThhee  AAttttaacchhmmeenntt  MMeennuu
        11..44..  TThhee  CCoommppoossee  MMeennuu

   22..  MMIIMMEE  TTyyppee  CCoonnffiigguurraattiioonn  wwiitthh  mmiimmee..ttyyppeess
   33..  MMIIMMEE  VViieewweerr  CCoonnffiigguurraattiioonn  wwiitthh  MMaaiillccaapp

        33..11..  TThhee  BBaassiiccss  ooff  tthhee  MMaaiillccaapp  FFiillee
        33..22..  SSeeccuurree  UUssee  ooff  MMaaiillccaapp
        33..33..  AAddvvaanncceedd  MMaaiillccaapp  UUssaaggee
        33..44..  EExxaammppllee  MMaaiillccaapp  FFiilleess

   44..  MMIIMMEE  AAuuttoovviieeww
   55..  MMIIMMEE  MMuullttiippaarrtt//AAlltteerrnnaattiivvee

        55..11..  RReeaaddiinngg  MMuullttiippaarrtt//AAlltteerrnnaattiivvee  EEmmaaiillss
        55..22..  CCoommppoossiinngg  MMuullttiippaarrtt//AAlltteerrnnaattiivvee  EEmmaaiillss

   66..  MMIIMMEE  MMuullttiippaarrtt//MMuullttiilliinngguuaall

        66..11..  RReeaaddiinngg  MMuullttiippaarrtt//MMuullttiilliinngguuaall  EEmmaaiillss
        66..22..  CCoommppoossiinngg  MMuullttiippaarrtt//MMuullttiilliinngguuaall  EEmmaaiillss

   77..  AAttttaacchhmmeenntt  SSeeaarrcchhiinngg  aanndd  CCoouunnttiinngg
   88..  MMIIMMEE  LLooookkuupp

   Quite a bit of effort has been made to make NeoMutt the premier
   text-mode MIME MUA. Every effort has been made to provide the
   functionality that the discerning MIME user requires, and the
   conformance to the standards wherever possible. When configuring
   NeoMutt for MIME, there are two extra types of configuration files
   which NeoMutt uses. One is the mime.types file, which contains the
   mapping of file extensions to IANA MIME types. The other is the mailcap
   file, which specifies the external commands to use for handling
   specific MIME types.

1. Using MIME in NeoMutt

1.1. MIME Overview

   MIME is short for "Multipurpose Internet Mail Extension" and describes
   mechanisms to internationalize and structure mail messages. Before the
   introduction of MIME, messages had a single text part and were limited
   to us-ascii header and content. With MIME, messages can have
   attachments (and even attachments which itself have attachments and
   thus form a tree structure), nearly arbitrary characters can be used
   for sender names, recipients and subjects.

   Besides the handling of non-ascii characters in message headers, to
   NeoMutt the most important aspect of MIME are so-called MIME types.
   These are constructed using a _m_a_j_o_r and _m_i_n_o_r type separated by a
   forward slash. These specify details about the content that follows.
   Based upon these, NeoMutt decides how to handle this part. The most
   popular major type is "text" with minor types for plain text, HTML and
   various other formats. Major types also exist for images, audio, video
   and of course general application data (e.g. to separate
   cryptographically signed data with a signature, send office documents,
   and in general arbitrary binary data). There's also the multipart major
   type which represents the root of a subtree of MIME parts. A list of
   supported MIME types can be found in TTaabbllee  55..11,,  ""SSuuppppoorrtteedd  MMIIMMEE  ttyyppeess"".

   MIME also defines a set of encoding schemes for transporting MIME
   content over the network: 7bit, 8bit, quoted-printable, base64 and
   binary. There're some rules when to choose what for encoding headers
   and/or body (if needed), and NeoMutt will in general make a good
   choice.

   NeoMutt does most of MIME encoding/decoding behind the scenes to form
   messages conforming to MIME on the sending side. On reception, it can
   be flexibly configured as to how what MIME structure is displayed (and
   if it's displayed): these decisions are based on the content's MIME
   type. There are three areas/menus in dealing with MIME: the pager
   (while viewing a message), the attachment menu and the compose menu.

1.2. Viewing MIME Messages in the Pager

   When you select a message from the index and view it in the pager,
   NeoMutt decodes as much of a message as possible to a text
   representation. NeoMutt internally supports a number of MIME types,
   including the text major type (with all minor types), the
   message/rfc822 (mail messages) type and some multipart types. In
   addition, it recognizes a variety of PGP MIME types, including PGP/MIME
   and application/pgp.

   NeoMutt will denote attachments with a couple lines describing them.
   These lines are of the form:
[-- Attachment #1: Description --]
[-- Type: text/plain, Encoding: 7bit, Size: 10000 --]

   Where the _D_e_s_c_r_i_p_t_i_o_n is the description or filename given for the
   attachment, and the _E_n_c_o_d_i_n_g is one of the already mentioned content
   encodings.

   If NeoMutt cannot deal with a MIME type, it will display a message
   like:
[-- image/gif is unsupported (use 'v' to view this part) --]

1.3. The Attachment Menu

   The default binding for <view-attachments> is "v", which displays the
   attachment menu for a message. The attachment menu displays a list of
   the attachments in a message. From the attachment menu, you can save,
   print, pipe, delete, and view attachments. You can apply these
   operations to a group of attachments at once, by tagging the
   attachments and by using the <tag-prefix> operator. You can also reply
   to the current message from this menu, and only the current attachment
   (or the attachments tagged) will be quoted in your reply. You can view
   attachments as text, or view them using the mailcap viewer definition
   (the mailcap mechanism is explained later in detail).

   Finally, you can apply the usual message-related functions (like
   <<rreesseenndd--mmeessssaaggee>>, and the <reply> and <forward> functions) to
   attachments of type message/rfc822.

   See table TTaabbllee  99..77,,  ""DDeeffaauulltt  AAttttaacchhmmeenntt  MMeennuu  BBiinnddiinnggss"" for all
   available functions.

1.4. The Compose Menu

   The compose menu is the menu you see before you send a message. It
   allows you to edit the recipient list, the subject, and other aspects
   of your message. It also contains a list of the attachments of your
   message, including the main body. From this menu, you can print, copy,
   filter, pipe, edit, compose, review, and rename an attachment or a list
   of tagged attachments. You can also modifying the attachment
   information, notably the type, encoding and description.

   Attachments appear as follows by default:
- 1 [text/plain, 7bit, 1K]           /tmp/neomutt-euler-8082-0 <no description>
  2 [applica/x-gunzip, base64, 422K] ~/src/neomutt-0.85.tar.gz <no description>

   The "-" denotes that NeoMutt will delete the file after sending (or
   postponing, or canceling) the message. It can be toggled with the
   <toggle-unlink> command (default: u). The next field is the MIME
   content-type, and can be changed with the <edit-type> command (default:
   ^T). The next field is the encoding for the attachment, which allows a
   binary message to be encoded for transmission on 7bit links. It can be
   changed with the <edit-encoding> command (default: ^E). The next field
   is the size of the attachment, rounded to kilobytes or megabytes. The
   next field is the filename, which can be changed with the <rename-file>
   command (default: R). The final field is the description of the
   attachment, and can be changed with the <edit-description> command
   (default: d). See $$aattttaacchh__ffoorrmmaatt for a full list of available expandos
   to format this display to your needs.

2. MIME Type Configuration with mime.types

   To get most out of MIME, it's important that a MIME part's content type
   matches the content as closely as possible so that the recipient's
   client can automatically select the right viewer for the content.
   However, there's no reliable for NeoMutt to know how to detect every
   possible file type. Instead, it uses a simple plain text mapping file
   that specifies what file extension corresponds to what MIME type. This
   file is called mime.types.

   When you add an attachment to your mail message, NeoMutt searches the
   system mime.types file at /etc/mime.types, $SYSCONFDIR/mime.types or
   $PKGDATADIR/mime.types and then your personal mime.types file at
   $HOME/.mime.types.

   Where $HOME is your home directory. The $PKGDATADIR and the $SYSCONFDIR
   directories depend on where NeoMutt is installed: the former is the
   default for shared data, the latter for system configuration files.

   Each line starts with the full MIME type, followed by a space and
   space-separated list of file extensions. For example you could use:

   _E_x_a_m_p_l_e_ _5_._1_._ _m_i_m_e_._t_y_p_e_s
application/postscript          ps eps
application/pgp                 pgp
audio/x-aiff                    aif aifc aiff

   A sample mime.types file comes with the NeoMutt distribution, and
   should contain most of the MIME types you are likely to use.

   If NeoMutt can not determine the MIME type by the extension of the file
   you attach, it will run the command specified in
   $$mmiimmee__ttyyppee__qquueerryy__ccoommmmaanndd. If that command is not specified, NeoMutt
   will look at the file. If the file is free of binary information,
   NeoMutt will assume that the file is plain text, and mark it as
   text/plain. If the file contains binary information, then NeoMutt will
   mark it as application/octet-stream. You can change the MIME type that
   NeoMutt assigns to an attachment by using the <edit-type> command from
   the compose menu (default: ^T), see TTaabbllee  55..11,,  ""SSuuppppoorrtteedd  MMIIMMEE  ttyyppeess""
   for supported major types. NeoMutt recognizes all of these if the
   appropriate entry is found in the mime.types file. Non-recognized mime
   types should only be used if the recipient of the message is likely to
   be expecting such attachments.

   _T_a_b_l_e_ _5_._1_._ _S_u_p_p_o_r_t_e_d_ _M_I_M_E_ _t_y_p_e_s
   MIME major type Standard                Description
   application     yes      General application data
   audio           yes      Audio data
   image           yes      Image data
   message         yes      Mail messages, message status information
   model           yes      VRML and other modeling data
   multipart       yes      Container for other MIME parts
   text            yes      Text data
   video           yes      Video data
   chemical        no       Mostly molecular data

   MIME types are not arbitrary, they need to be assigned by IIAANNAA.

3. MIME Viewer Configuration with Mailcap

   NeoMutt supports RFC 1524 MIME Configuration, in particular the Unix
   specific format specified in Appendix A of RFC 1524. This file format
   is commonly referred to as the "mailcap" format. Many MIME compliant
   programs utilize the mailcap format, allowing you to specify handling
   for all MIME types in one place for all programs. Programs known to use
   this format include Firefox, lynx and metamail.

   In order to handle various MIME types that NeoMutt doesn't have
   built-in support for, it parses a series of external configuration
   files to find an external handler. The default search string for these
   files is a colon delimited list containing the following files:
    1. $HOME/.mailcap
    2. $PKGDATADIR/mailcap
    3. $SYSCONFDIR/mailcap
    4. /etc/mailcap
    5. /usr/etc/mailcap
    6. /usr/local/etc/mailcap

   where $HOME is your home directory. The $PKGDATADIR and the $SYSCONFDIR
   directories depend on where NeoMutt is installed: the former is the
   default for shared data, the latter for system configuration files.

   The default search path can be obtained by running the following
   command:
neomutt -nF /dev/null -Q mailcap_path

   In particular, the metamail distribution will install a mailcap file,
   usually as /usr/local/etc/mailcap, which contains some baseline
   entries.

3.1. The Basics of the Mailcap File

   A mailcap file consists of a series of lines which are comments, blank,
   or definitions.

   A comment line consists of a # character followed by anything you want.

   A blank line is blank.

   A definition line consists of a content type, a view command, and any
   number of optional fields. Each field of a definition line is divided
   by a semicolon ";" character.

   The content type is specified in the MIME standard "type/subtype"
   notation. For example, text/plain, text/html, image/gif, etc. In
   addition, the mailcap format includes two formats for wildcards, one
   using the special "*" subtype, the other is the implicit wild, where
   you only include the major type. For example, image/*, or video will
   match all image types and video types, respectively.

   The view command is a Unix command for viewing the type specified.
   There are two different types of commands supported. The default is to
   send the body of the MIME message to the command on stdin. You can
   change this behavior by using %s as a parameter to your view command.
   This will cause NeoMutt to save the body of the MIME message to a
   temporary file, and then call the view command with the %s replaced by
   the name of the temporary file. In both cases, NeoMutt will turn over
   the terminal to the view program until the program quits, at which time
   NeoMutt will remove the temporary file if it exists. This means that
   mailcap does _n_o_t work out of the box with programs which detach
   themselves from the terminal right after starting, like open on Mac OS
   X. In order to nevertheless use these programs with mailcap, you
   probably need custom shell scripts.

   So, in the simplest form, you can send a text/plain message to the
   external pager more on standard input:
text/plain; more

   Or, you could send the message as a file:
text/plain; more %s

   Perhaps you would like to use lynx to interactively view a text/html
   message:
text/html; lynx %s

   In this case, lynx does not support viewing a file from standard input,
   so you must use the %s syntax.

Note

   _S_o_m_e_ _o_l_d_e_r_ _v_e_r_s_i_o_n_s_ _o_f_ _l_y_n_x_ _c_o_n_t_a_i_n_ _a_ _b_u_g_ _w_h_e_r_e_ _t_h_e_y_ _w_i_l_l_ _c_h_e_c_k_ _t_h_e
   _m_a_i_l_c_a_p_ _f_i_l_e_ _f_o_r_ _a_ _v_i_e_w_e_r_ _f_o_r_ _t_e_x_t_/_h_t_m_l_._ _T_h_e_y_ _w_i_l_l_ _f_i_n_d_ _t_h_e_ _l_i_n_e_ _w_h_i_c_h
   _c_a_l_l_s_ _l_y_n_x_,_ _a_n_d_ _r_u_n_ _i_t_._ _T_h_i_s_ _c_a_u_s_e_s_ _l_y_n_x_ _t_o_ _c_o_n_t_i_n_u_o_u_s_l_y_ _s_p_a_w_n_ _i_t_s_e_l_f
   _t_o_ _v_i_e_w_ _t_h_e_ _o_b_j_e_c_t_.

   On the other hand, maybe you don't want to use lynx interactively, you
   just want to have it convert the text/html to text/plain, then you can
   use:
text/html; lynx -dump %s | more

   Perhaps you wish to use lynx to view text/html files, and a pager on
   all other text formats, then you would use the following:
text/html; lynx %s
text/*; more

3.2. Secure Use of Mailcap

   The interpretation of shell meta-characters embedded in MIME parameters
   can lead to security problems in general. NeoMutt tries to quote
   parameters in expansion of %s syntaxes properly, and avoids risky
   characters by substituting them, see the $$mmaaiillccaapp__ssaanniittiizzee variable.

   Although NeoMutt's procedures to invoke programs with mailcap seem to
   be safe, there are other applications parsing mailcap, maybe taking
   less care of it. Therefore you should pay attention to the following
   rules:

   _K_e_e_p_ _t_h_e_ _%_-_e_x_p_a_n_d_o_s_ _a_w_a_y_ _f_r_o_m_ _s_h_e_l_l_ _q_u_o_t_i_n_g_. Don't quote them with
   single or double quotes. NeoMutt does this for you, the right way, as
   should any other program which interprets mailcap. Don't put them into
   backtick expansions. Be highly careful with evil statements, and avoid
   them if possible at all. Trying to fix broken behavior with quotes
   introduces new leaks - there is no alternative to correct quoting in
   the first place.

   If you have to use the %-expandos' values in context where you need
   quoting or backtick expansions, put that value into a shell variable
   and reference the shell variable where necessary, as in the following
   example (using $charset inside the backtick expansion is safe, since it
   is not itself subject to any further expansion):
text/test-mailcap-bug; cat %s; copiousoutput; test=charset=%{charset} \
        && test "`echo $charset | tr '[A-Z]' '[a-z]'`" != iso-8859-1

3.3. Advanced Mailcap Usage

3.3.1. Optional Fields

   In addition to the required content-type and view command fields, you
   can add semi-colon ";" separated fields to set flags and other options.
   NeoMutt recognizes the following optional fields:

   copiousoutput
          This flag tells NeoMutt that the command passes possibly large
          amounts of text on standard output. This causes NeoMutt to
          invoke a pager (either the internal pager or the external pager
          defined by the pager variable) on the output of the view
          command. Without this flag, NeoMutt assumes that the command is
          interactive. One could use this to replace the pipe to more in
          the lynx -dump example in the Basic section:

text/html; lynx -dump %s ; copiousoutput

          This will cause lynx to format the text/html output as
          text/plain and NeoMutt will use your standard pager to display
          the results.

          NeoMutt will set the COLUMNS environment variable to the width
          of the pager. Some programs make use of this environment
          variable automatically. Others provide a command line argument
          that can use this to set the output width:

text/html; lynx -dump -width ${COLUMNS:-80} %s; copiousoutput

          Note that when using the built-in pager, _o_n_l_y entries with this
          flag will be considered a handler for a MIME type - all other
          entries will be ignored.

   needsterminal
          NeoMutt uses this flag when viewing attachments with aauuttoo__vviieeww,
          in order to decide whether it should honor the setting of the
          $$wwaaiitt__kkeeyy variable or not. When an attachment is viewed using an
          interactive program, and the corresponding mailcap entry has a
          _n_e_e_d_s_t_e_r_m_i_n_a_l flag, NeoMutt will use $$wwaaiitt__kkeeyy and the exit
          status of the program to decide if it will ask you to press a
          key after the external program has exited. In all other
          situations it will not prompt you for a key.

   compose=<command>
          This flag specifies the command to use to create a new
          attachment of a specific MIME type. NeoMutt supports this from
          the compose menu.

   composetyped=<command>
          This flag specifies the command to use to create a new
          attachment of a specific MIME type. This command differs from
          the compose command in that NeoMutt will expect standard MIME
          headers on the data. This can be used to specify parameters,
          filename, description, etc. for a new attachment. NeoMutt
          supports this from the compose menu.

   print=<command>
          This flag specifies the command to use to print a specific MIME
          type. NeoMutt supports this from the attachment and compose
          menus.

   edit=<command>
          This flag specifies the command to use to edit a specific MIME
          type. NeoMutt supports this from the compose menu, and also uses
          it to compose new attachments. NeoMutt will default to the
          defined $$eeddiittoorr for text attachments.

   nametemplate=<template>
          This field specifies the format for the file denoted by %s in
          the command fields. Certain programs will require a certain file
          extension, for instance, to correctly view a file. For instance,
          lynx will only interpret a file as text/html if the file ends in
          .html. So, you would specify lynx as a text/html viewer with a
          line in the mailcap file like:

text/html; lynx %s; nametemplate=%s.html

   test=<command>
          This field specifies a command to run to test whether this
          mailcap entry should be used. The command is defined with the
          command expansion rules defined in the next section. If the
          command returns 0, then the test passed, and NeoMutt uses this
          entry. If the command returns non-zero, then the test failed,
          and NeoMutt continues searching for the right entry. Note that
          the content-type must match before NeoMutt performs the test.
          For example:

text/html; firefox -remote 'openURL(%s)' ; test=RunningX
text/html; lynx %s

          In this example, NeoMutt will run the program RunningX which
          will return 0 if the X Window manager is running, and non-zero
          if it isn't. If RunningX returns 0, then NeoMutt will run
          firefox to display the text/html object. If RunningX doesn't
          return 0, then NeoMutt will go on to the next entry and use lynx
          to display the text/html object.

3.3.2. Search Order

   When searching for an entry in the mailcap file, NeoMutt will search
   for the most useful entry for its purpose. For instance, if you are
   attempting to print an image/gif, and you have the following entries in
   your mailcap file, NeoMutt will search for an entry with the print
   command:
image/*;        xv %s
image/gif;      ; print=anytopnm %s | pnmtops | lpr; \
                nametemplate=%s.gif

   NeoMutt will skip the image/* entry and use the image/gif entry with
   the print command.

   In addition, you can use this with aauuttoo__vviieeww to denote two commands for
   viewing an attachment, one to be viewed automatically, the other to be
   viewed interactively from the attachment menu using the <view-mailcap>
   function (bound to "m" by default). In addition, you can then use the
   test feature to determine which viewer to use interactively depending
   on your environment.
text/html;      firefox -remote 'openURL(%s)' ; test=RunningX
text/html;      lynx %s; nametemplate=%s.html
text/html;      lynx -dump %s; nametemplate=%s.html; copiousoutput

   For aauuttoo__vviieeww, NeoMutt will choose the third entry because of the
   copiousoutput tag. For interactive viewing, NeoMutt will run the
   program RunningX to determine if it should use the first entry. If the
   program returns non-zero, NeoMutt will use the second entry for
   interactive viewing. The last entry is for inline display in the pager
   and the <view-attach> function in the attachment menu.

   Entries with the copiousoutput tag should always be specified as the
   last one per type. For non-interactive use, the last entry will then
   actually be the first matching one with the tag set. For
   non-interactive use, only copiousoutput-tagged entries are considered.
   For interactive use, NeoMutt ignores this tag and treats all entries
   equally. Therefore, if not specified last, all following entries
   without this tag would never be considered for <view-attach> because
   the copiousoutput before them matched already.

3.3.3. Command Expansion

   The various commands defined in the mailcap files are passed to the
   /bin/sh shell using the system(3) function. Before the command is
   passed to /bin/sh -c, it is parsed to expand various special parameters
   with information from NeoMutt. The keywords NeoMutt expands are:

   %s
          As seen in the basic mailcap section, this variable is expanded
          to a filename specified by the calling program. This file
          contains the body of the message to view/print/edit or where the
          composing program should place the results of composition. In
          addition, the use of this keyword causes NeoMutt to not pass the
          body of the message to the view/print/edit program on stdin.

   %t
          NeoMutt will expand %t to the text representation of the content
          type of the message in the same form as the first parameter of
          the mailcap definition line, i.e. text/html or image/gif.

   %{<parameter>}
          NeoMutt will expand this to the value of the specified parameter
          from the Content-Type: line of the mail message. For instance,
          if your mail message contains:

Content-Type: text/plain; charset=iso-8859-1

          then NeoMutt will expand %{charset} to "iso-8859-1". The default
          metamail mailcap file uses this feature to test the charset to
          spawn an xterm using the right charset to view the message.

   \%
          This will be replaced by a literal %.

   NeoMutt does not currently support the %F and %n keywords specified in
   RFC 1524. The main purpose of these parameters is for multipart
   messages, which is handled internally by NeoMutt.

3.4. Example Mailcap Files

   This mailcap file is fairly simple and standard:
# I'm always running X :)
video/*;        xanim %s > /dev/null
image/*;        xv %s > /dev/null
# I'm always running firefox (if my computer had more memory, maybe)
text/html;      firefox -remote 'openURL(%s)'

   This mailcap file shows quite a number of examples:
# Use xanim to view all videos Xanim produces a header on startup,
# send that to /dev/null so I don't see it
video/*;        xanim %s > /dev/null
# Send html to a running firefox by remote
text/html;      firefox -remote 'openURL(%s)'; test=RunningFirefox
# If I'm not running firefox but I am running X, start firefox on the
# object
text/html;      firefox %s; test=RunningX
# Else use lynx to view it as text
text/html;      lynx %s
# This version would convert the text/html to text/plain
text/html;      lynx -dump %s; copiousoutput
# I use enscript to print text in two columns to a page
text/*;         more %s; print=enscript -2Gr %s
# Firefox adds a flag to tell itself to view jpegs internally
image/jpeg;     xv %s; x-mozilla-flags=internal
# Use xv to view images if I'm running X
# In addition, this uses the \ to extend the line and set my editor
# for images
image/*;        xv %s; test=RunningX; edit=xpaint %s
# Convert images to text using the netpbm tools
image/*;        (anytopnm %s | pnmscale -xysize 80 46 | ppmtopgm | pgmtopbm | \
                pbmtoascii -1x2) 2>&1 ; copiousoutput
# Send excel spreadsheets to my NT box
application/ms-excel;   open.pl %s

4. MIME Autoview

   Usage:

   auto_view _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] [ _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ]
   ...]
   unauto_view { * | [ _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] ...]}

   In addition to explicitly telling NeoMutt to view an attachment with
   the MIME viewer defined in the mailcap file from the attachments menu,
   NeoMutt has support for automatically viewing MIME attachments while in
   the pager.

   For this to work, you must define a viewer in the mailcap file which
   uses the copiousoutput option to denote that it is non-interactive.
   Usually, you also use the entry to convert the attachment to a text
   representation which you can view in the pager.

   You then use the _a_u_t_o___v_i_e_w configuration command to list the
   content-types that you wish to view automatically. For instance, if you
   set it to:
auto_view text/html application/x-gunzip \
  application/postscript image/gif application/x-tar-gz

   ...NeoMutt would try to find corresponding entries for rendering
   attachments of these types as text. A corresponding mailcap could look
   like:
text/html;              lynx -dump %s; copiousoutput; nametemplate=%s.html
image/*;                anytopnm %s | pnmscale -xsize 80 -ysize 50 | ppmtopgm |
\
                        pgmtopbm | pbmtoascii ; copiousoutput
application/x-gunzip;   gzcat; copiousoutput
application/x-tar-gz;   gunzip -c %s | tar -tf - ; copiousoutput
application/postscript; ps2ascii %s; copiousoutput

   _u_n_a_u_t_o___v_i_e_w can be used to remove previous entries from the _a_u_t_o___v_i_e_w
   list. This can be used with mmeessssaaggee--hhooookk to autoview messages based on
   size, etc. "_u_n_a_u_t_o___v_i_e_w *" will remove all previous entries.

5. MIME Multipart/Alternative

   A multipart/alternative email has several parts that represent the same
   content in different formats, such as text/plain and text/html. This
   kind of email is heavily used by many modern mail user agents to send
   HTML messages which contain an alternative plain text representation.
   You can read and write multipart/alternative emails in NeoMutt.

5.1. Reading Multipart/Alternative Emails

   NeoMutt has some heuristics for determining which attachment of a
   multipart/alternative type to display:
    1. First, NeoMutt will check the _a_l_t_e_r_n_a_t_i_v_e___o_r_d_e_r list to determine
       if one of the available types is preferred. It consists of a number
       of MIME types in order, including support for implicit and explicit
       wildcards. For example:
alternative_order text/enriched text/plain text application/postscript image/*

    2. Next, NeoMutt will check if any of the types have a defined
       aauuttoo__vviieeww, and use that.
    3. Failing that, NeoMutt will look for any text type.
    4. As a last attempt, NeoMutt will look for any type it knows how to
       handle.

   To remove a MIME type from the _a_l_t_e_r_n_a_t_i_v_e___o_r_d_e_r list, use the
   _u_n_a_l_t_e_r_n_a_t_i_v_e___o_r_d_e_r command.

5.2. Composing Multipart/Alternative Emails

   Noemutt includes some primitive ability to compose
   multipart/alternative emails:
    1. In the Compose menu, attach the two (or more) alternatives as
       usual. For example, attach "invitation.html" and then
       "invitation.txt". (You can reorder them using the <move-up> (-) and
       <move-down> (+) bindings, and edit the descriptions).
    2. Tag the attachments that are alternatives, and press the
       _<_g_r_o_u_p_-_a_l_t_e_r_n_a_t_i_v_e_s_> (&) binding to group them together. After
       this, the separate parts will be replaced by a single new part with
       the multipart/alternative type and the alternatives must be
       manipulated or deleted as a group.
    3. Send the email as usual.

   If all the attachments have been grouped and form a single
   multipart/alternative, part then this message will be sent as a
   multipart/alternative email, otherwise it will be sent as a
   multipart/mixed email.

   Note that after grouping, you can't view, edit or break the
   multipart/alternative bundle, because it is in a temporary form. But
   you can view and edit its primitive part using the _<_e_d_i_t_> command. When
   postponing emails or on error (e.g., no recipients address when sending
   emails) this multipart/alternative will be broken apart and need to be
   tagged and group together again as described above.

   Be aware that when sending a multipart/alternative email, you have to
   manually prepare the alternative parts and attach them. However, you
   can use Neomutt's macro to perform all the operations needed, such that
   you can compose a plain text email as usual and turn that into a
   multipart/alternative email in one single command, with one part being
   text/plain and the other text/html. An example macro will be the
   following:
macro compose K "| pandoc -o /tmp/neomutt-alternative.html<enter> \
    <attach-file>/tmp/neomutt-alternative.html<enter> \
    <tag-entry><previous-entry><tag-entry><group-alternatives>"

6. MIME Multipart/Multilingual

   Neomutt includes supports for reading and writing
   multipart/multilingual emails. A multipart/multilingual email is like a
   multipart/alternative email, except that it comes with parts of
   different versions of languages instead of appearances. Its format is
   described by RRFFCC88225555.

6.1. Reading Multipart/Multilingual Emails

   Neomutt uses the $preferred_languages variable to determine which
   languages to display when displaying a multipart/multilingual email.
   You can have several preferred languages, separated by ,
set preferred_languages="fr,en,de"

   Neomutt will try to match these strings again the multilingual header
   in the received emails "by prefix", e.g., en will match both en and
   en_US.

   If $preferred_languages is not set, it default to None, and the first
   part of the received multipart/multilingual email will be displayed.

6.2. Composing Multipart/Multilingual Emails

   The procedures of composing a multipart/multilingual email is similar
   to those in CCoommppoossiinngg  MMuullttiippaarrtt//AAlltteerrnnaattiivvee. You have to prepare every
   part manually or using some scripts, and then tag and group them
   together into a multipart/multilingual bundle before sending it:
    1. Prepare parts of the multilingual emails.
    2. Attach them as attachments.
    3. Tag them with _<_t_a_g_-_e_n_t_r_y_>
    4. Edit the Content-Language header of every attachment with command
       _<_e_d_i_t_-_l_a_n_g_u_a_g_e_> (default to Ctrl-L). This is important, otherwise
       the recipient of this email will not know the corresponding
       languages. You can set arbitrary string as Content-Language, but it
       is recommended to set it as some common prefixes such as "en", "zh"
       and "fr".
    5. Group all the tag messages together by _<_g_r_o_u_p_-_m_u_l_t_i_l_i_n_g_u_a_l_>
       (default to ^).
    6. Send the email as usual.

   As in CCoommppoossiinngg  MMuullttiippaarrtt//AAlltteerrnnaattiivvee, you can also use Neomutt's macro
   and some external scripts to combine these procedure into one.

   Note that after grouping, you can't view, edit or break the
   multipart/multilingual email bundle, because it is in a temporary form.
   But you can view and edit its primitive part using the _<_e_d_i_t_> command.
   When postponing emails or on error (e.g., no recipients address when
   sending emails) this multipart/multilingual will be broken apart and
   need to be tagged and group together again as described above.

7. Attachment Searching and Counting

   If you ever lose track of attachments in your mailboxes, NeoMutt's
   attachment-counting and -searching support might be for you. You can
   make your message index display the number of qualifying attachments in
   each message, or search for messages by attachment count. You also can
   configure what kinds of attachments qualify for this feature with the
   _a_t_t_a_c_h_m_e_n_t_s and _u_n_a_t_t_a_c_h_m_e_n_t_s commands.

   In order to provide this information, NeoMutt needs to fully MIME-parse
   all messages affected first. This can slow down operation especially
   for remote mail folders such as IMAP because all messages have to be
   downloaded first regardless whether the user really wants to view them
   or not though using SSeeccttiioonn  77..22,,  ""BBooddyy  CCaacchhiinngg"" usually means to
   download the message just once.

   The syntax is:

   attachments { + | - } _d_i_s_p_o_s_i_t_i_o_n _m_i_m_e_-_t_y_p_e
   unattachments { + | - } _d_i_s_p_o_s_i_t_i_o_n _m_i_m_e_-_t_y_p_e
   attachments ?

   _d_i_s_p_o_s_i_t_i_o_n is the attachment's Content-Disposition type - either
   inline or attachment. You can abbreviate this to I or A.

   Disposition is prefixed by either a "+" symbol or a "-" symbol. If it's
   a "+", you're saying that you want to allow this disposition and MIME
   type to qualify. If it's a "-", you're saying that this disposition and
   MIME type is an exception to previous "+" rules. There are examples
   below of how this is useful.

   _m_i_m_e_-_t_y_p_e is the MIME type of the attachment you want the command to
   affect. A MIME type is always of the format major/minor, where major
   describes the broad category of document you're looking at, and minor
   describes the specific type within that category. The major part of
   mime-type must be literal text (or the special token "*"), but the
   minor part may be a regular expression. (Therefore, "*/.*" matches any
   MIME type.)

   The MIME types you give to the _a_t_t_a_c_h_m_e_n_t_s directive are a kind of
   pattern. When you use the _a_t_t_a_c_h_m_e_n_t_s directive, the patterns you
   specify are added to a list. When you use _u_n_a_t_t_a_c_h_m_e_n_t_s, the pattern is
   removed from the list. The patterns are not expanded and matched to
   specific MIME types at this time - they're just text in a list. They're
   only matched when actually evaluating a message.

   Some examples might help to illustrate. The examples that are not
   commented out define the default configuration of the lists.

   _E_x_a_m_p_l_e_ _5_._2_._ _A_t_t_a_c_h_m_e_n_t_ _c_o_u_n_t_i_n_g
# Removing a pattern from a list removes that pattern literally. It
# does not remove any type matching the pattern.
#
#  attachments   +A */.*
#  attachments   +A image/jpeg
#  unattachments +A */.*
#
# This leaves "attached" image/jpeg files on the allowed attachments
# list. It does not remove all items, as you might expect, because the
# second */.* is not a matching expression at this time.
#
# Remember: "unattachments" only undoes what "attachments" has done!
# It does not trigger any matching on actual messages.
# Qualify any MIME part with an "attachment" disposition, EXCEPT for
# text/x-vcard and application/pgp parts. (PGP parts are already known
# to NeoMutt, and can be searched for with ~g, ~G, and ~k.)
#
# I've added x-pkcs7 to this, since it functions (for S/MIME)
# analogously to PGP signature attachments. S/MIME isn't supported
# in a stock NeoMutt build, but we can still treat it specially here.
#
attachments  +A */.*
attachments  -A text/x-vcard application/pgp.*
attachments  -A application/x-pkcs7-.*
# Discount all MIME parts with an "inline" disposition, unless they're
# text/plain. (Why inline a text/plain part unless it's external to the
# message flow?)
attachments  +I text/plain
# These two lines make NeoMutt qualify MIME containers. (So, for example,
# a message/rfc822 forward will count as an attachment.) The first
# line is unnecessary if you already have "attach-allow */.*", of
# course. These are off by default! The MIME elements contained
# within a message/* or multipart/* are still examined, even if the
# containers themselves don't qualify.

#attachments  +A message/.* multipart/.*
#attachments  +I message/.* multipart/.*
## You probably don't really care to know about deleted attachments.
attachments  -A message/external-body
attachments  -I message/external-body

   Entering the command "_a_t_t_a_c_h_m_e_n_t_s ?" as a command will list your
   current settings in neomuttrc format, so that it can be pasted
   elsewhere.

8. MIME Lookup

   Usage:

   mime_lookup _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] [ _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ]
   ...]
   unmime_lookup { * | [ _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] ...]}

   NeoMutt's _m_i_m_e___l_o_o_k_u_p list specifies a list of MIME types that should
   _n_o_t be treated according to their mailcap entry. This option is
   designed to deal with binary types such as application/octet-stream.
   When an attachment's MIME type is listed in _m_i_m_e___l_o_o_k_u_p, then the
   extension of the filename will be compared to the list of extensions in
   the mime.types file. The MIME type associated with this extension will
   then be used to process the attachment according to the rules in the
   mailcap file and according to any other configuration options (such as
   _a_u_t_o___v_i_e_w) specified. Common usage would be:
mime_lookup application/octet-stream application/X-Lotus-Manuscript

   In addition, the unmime_lookup command may be used to disable this
   feature for any particular MIME type if it had been set, for example,
   in a global .neomuttrc.

Chapter 6. Optional Features

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  GGeenneerraall  NNootteess

        11..11..  EEnnaabblliinngg//DDiissaabblliinngg  FFeeaattuurreess
        11..22..  UURRLL  SSyynnttaaxx

   22..  SSSSLL//TTLLSS  SSuuppppoorrtt
   33..  PPOOPP33  SSuuppppoorrtt
   44..  IIMMAAPP  SSuuppppoorrtt

        44..11..  TThhee  IIMMAAPP  FFoollddeerr  BBrroowwsseerr
        44..22..  AAuutthheennttiiccaattiioonn

   55..  SSMMTTPP  SSuuppppoorrtt
   66..  MMaannaaggiinngg  MMuullttiippllee  AAccccoouunnttss
   77..  LLooccaall  CCaacchhiinngg

        77..11..  HHeeaaddeerr  CCaacchhiinngg
        77..22..  BBooddyy  CCaacchhiinngg
        77..33..  CCaacchhee  DDiirreeccttoorriieess
        77..44..  MMaaiinntteennaannccee

   88..  SSeennddiinngg  AAnnoonnyymmoouuss  MMeessssaaggeess  vviiaa  MMiixxmmaasstteerr
   99..  AAttttaacchh  HHeeaaddeerrss  CCoolloorr  FFeeaattuurree

        99..11..  SSuuppppoorrtt
        99..22..  IInnttrroodduuccttiioonn
        99..33..  UUssaaggee
        99..44..  nneeoommuuttttrrcc
        99..55..  SSeeee  AAllssoo
        99..66..  KKnnoowwnn  BBuuggss
        99..77..  CCrreeddiittss

   1100..  CCoommppoossee  ttoo  SSeennddeerr  FFeeaattuurree

        1100..11..  SSuuppppoorrtt
        1100..22..  IInnttrroodduuccttiioonn
        1100..33..  FFuunnccttiioonnss
        1100..44..  nneeoommuuttttrrcc
        1100..55..  KKnnoowwnn  BBuuggss
        1100..66..  CCrreeddiittss

   1111..  CCoommpprreesssseedd  FFoollddeerrss  FFeeaattuurree

        1111..11..  SSuuppppoorrtt
        1111..22..  IInnttrroodduuccttiioonn
        1111..33..  CCoommmmaannddss
        1111..44..  nneeoommuuttttrrcc
        1111..55..  SSeeee  AAllssoo
        1111..66..  CCrreeddiittss

   1122..  CCoonnddiittiioonnaall  DDaatteess  FFeeaattuurree

        1122..11..  SSuuppppoorrtt
        1122..22..  IInnttrroodduuccttiioonn
        1122..33..  VVaarriiaabblleess
        1122..44..  nneeoommuuttttrrcc
        1122..55..  SSeeee  AAllssoo
        1122..66..  KKnnoowwnn  BBuuggss
        1122..77..  CCrreeddiittss

   1133..  EEnnccrryypptt--ttoo--SSeellff  FFeeaattuurree

        1133..11..  SSuuppppoorrtt
        1133..22..  IInnttrroodduuccttiioonn
        1133..33..  VVaarriiaabblleess
        1133..44..  nneeoommuuttttrrcc
        1133..55..  KKnnoowwnn  BBuuggss
        1133..66..  CCrreeddiittss

   1144..  FFmmeemmooppeenn  FFeeaattuurree

        1144..11..  SSuuppppoorrtt
        1144..22..  IInnttrroodduuccttiioonn
        1144..33..  SSeeee  AAllssoo
        1144..44..  KKnnoowwnn  BBuuggss
        1144..55..  CCrreeddiittss

   1155..  FFoorrggootttteenn  AAttttaacchhmmeenntt  FFeeaattuurree

        1155..11..  SSuuppppoorrtt
        1155..22..  IInnttrroodduuccttiioonn
        1155..33..  VVaarriiaabblleess
        1155..44..  nneeoommuuttttrrcc
        1155..55..  SSeeee  AAllssoo
        1155..66..  KKnnoowwnn  BBuuggss
        1155..77..  CCrreeddiittss

   1166..  GGlloobbaall  HHooookkss

        1166..11..  IInnttrroodduuccttiioonn
        1166..22..  CCoommmmaannddss
        1166..33..  nneeoommuuttttrrcc
        1166..44..  SSeeee  AAllssoo
        1166..55..  KKnnoowwnn  BBuuggss
        1166..66..  CCrreeddiittss

   1177..  IIffddeeff  FFeeaattuurree

        1177..11..  SSuuppppoorrtt
        1177..22..  IInnttrroodduuccttiioonn
        1177..33..  CCoommmmaannddss
        1177..44..  nneeoommuuttttrrcc
        1177..55..  KKnnoowwnn  BBuuggss
        1177..66..  CCrreeddiittss

   1188..  IInnddeexx  CCoolloorr  FFeeaattuurree

        1188..11..  SSuuppppoorrtt
        1188..22..  IInnttrroodduuccttiioonn
        1188..33..  CCoolloorrss
        1188..44..  nneeoommuuttttrrcc
        1188..55..  SSeeee  AAllssoo
        1188..66..  KKnnoowwnn  BBuuggss
        1188..77..  CCrreeddiittss

   1199..  IInniittiiaallss  EExxppaannddoo  FFeeaattuurree

        1199..11..  SSuuppppoorrtt
        1199..22..  IInnttrroodduuccttiioonn
        1199..33..  VVaarriiaabblleess
        1199..44..  nneeoommuuttttrrcc
        1199..55..  SSeeee  AAllssoo
        1199..66..  KKnnoowwnn  BBuuggss
        1199..77..  CCrreeddiittss

   2200..  KKyyoottoo  CCaabbiinneett  FFeeaattuurree

        2200..11..  SSuuppppoorrtt
        2200..22..  IInnttrroodduuccttiioonn
        2200..33..  SSeeee  AAllssoo
        2200..44..  KKnnoowwnn  BBuuggss
        2200..55..  CCrreeddiittss

   2211..  LLiimmiitt  CCuurrrreenntt  TThhrreeaadd  FFeeaattuurree

        2211..11..  SSuuppppoorrtt
        2211..22..  IInnttrroodduuccttiioonn
        2211..33..  FFuunnccttiioonnss
        2211..44..  nneeoommuuttttrrcc
        2211..55..  KKnnoowwnn  BBuuggss
        2211..66..  CCrreeddiittss

   2222..  LLMMDDBB  FFeeaattuurree

        2222..11..  SSuuppppoorrtt
        2222..22..  IInnttrroodduuccttiioonn
        2222..33..  SSeeee  AAllssoo
        2222..44..  KKnnoowwnn  BBuuggss
        2222..55..  CCrreeddiittss

   2233..  MMuullttiippllee  FFCCCC  FFeeaattuurree

        2233..11..  SSuuppppoorrtt
        2233..22..  IInnttrroodduuccttiioonn
        2233..33..  SSeeee  AAllssoo
        2233..44..  KKnnoowwnn  BBuuggss
        2233..55..  CCrreeddiittss

   2244..  NNeesstteedd  IIff  FFeeaattuurree

        2244..11..  SSuuppppoorrtt
        2244..22..  IInnttrroodduuccttiioonn
        2244..33..  VVaarriiaabblleess
        2244..44..  nneeoommuuttttrrcc
        2244..55..  SSeeee  AAllssoo
        2244..66..  KKnnoowwnn  BBuuggss
        2244..77..  CCrreeddiittss

   2255..  NNeeww  MMaaiill  FFeeaattuurree

        2255..11..  SSuuppppoorrtt
        2255..22..  IInnttrroodduuccttiioonn
        2255..33..  VVaarriiaabblleess
        2255..44..  nneeoommuuttttrrcc
        2255..55..  SSeeee  AAllssoo
        2255..66..  KKnnoowwnn  BBuuggss
        2255..77..  CCrreeddiittss

   2266..  NNNNTTPP  FFeeaattuurree

        2266..11..  SSuuppppoorrtt
        2266..22..  IInnttrroodduuccttiioonn
        2266..33..  VVaarriiaabblleess
        2266..44..  FFuunnccttiioonnss
        2266..55..  nneeoommuuttttrrcc
        2266..66..  KKnnoowwnn  BBuuggss
        2266..77..  CCrreeddiittss

   2277..  CCuussttoomm  bbaacckkeenndd  bbaasseedd  TTaaggss  FFeeaattuurree

        2277..11..  SSuuppppoorrtt
        2277..22..  IInnttrroodduuccttiioonn
        2277..33..  VVaarriiaabblleess
        2277..44..  FFuunnccttiioonnss
        2277..55..  CCoommmmaannddss
        2277..66..  CCoolloorrss
        2277..77..  nneeoommuuttttrrcc
        2277..88..  CCrreeddiittss

   2288..  NNoottmmuucchh  FFeeaattuurree

        2288..11..  SSuuppppoorrtt
        2288..22..  IInnttrroodduuccttiioonn
        2288..33..  UUssiinngg  NNoottmmuucchh
        2288..44..  VVaarriiaabblleess
        2288..55..  FFuunnccttiioonnss
        2288..66..  CCoommmmaannddss
        2288..77..  CCoolloorrss
        2288..88..  nneeoommuuttttrrcc
        2288..99..  SSeeee  AAllssoo
        2288..1100..  KKnnoowwnn  BBuuggss
        2288..1111..  CCrreeddiittss

   2299..  PPrrooggrreessss  BBaarr  FFeeaattuurree

        2299..11..  SSuuppppoorrtt
        2299..22..  IInnttrroodduuccttiioonn
        2299..33..  CCoolloorrss
        2299..44..  nneeoommuuttttrrcc
        2299..55..  SSeeee  AAllssoo
        2299..66..  KKnnoowwnn  BBuuggss
        2299..77..  CCrreeddiittss

   3300..  QQuuaassii--DDeelleettee  FFeeaattuurree

        3300..11..  SSuuppppoorrtt
        3300..22..  IInnttrroodduuccttiioonn
        3300..33..  FFuunnccttiioonnss
        3300..44..  nneeoommuuttttrrcc
        3300..55..  SSeeee  AAllssoo
        3300..66..  KKnnoowwnn  BBuuggss
        3300..77..  CCrreeddiittss

   3311..  RReeppllyy  WWiitthh  XX--OOrriiggiinnaall--TToo  FFeeaattuurree

        3311..11..  SSuuppppoorrtt
        3311..22..  IInnttrroodduuccttiioonn
        3311..33..  VVaarriiaabblleess
        3311..44..  nneeoommuuttttrrcc
        3311..55..  CCrreeddiittss

   3322..  SSeennssiibbllee  BBrroowwsseerr  FFeeaattuurree

        3322..11..  SSuuppppoorrtt
        3322..22..  IInnttrroodduuccttiioonn
        3322..33..  SSeeee  AAllssoo
        3322..44..  KKnnoowwnn  BBuuggss
        3322..55..  CCrreeddiittss

   3333..  SSiiddeebbaarr  FFeeaattuurree

        3333..11..  SSuuppppoorrtt
        3333..22..  IInnttrroodduuccttiioonn
        3333..33..  VVaarriiaabblleess
        3333..44..  FFuunnccttiioonnss
        3333..55..  CCoommmmaannddss
        3333..66..  CCoolloorrss
        3333..77..  SSoorrtt
        3333..88..  nneeoommuuttttrrcc
        3333..99..  SSeeee  AAllssoo
        3333..1100..  KKnnoowwnn  BBuuggss
        3333..1111..  CCrreeddiittss

   3344..  SSkkiipp  QQuuootteedd  FFeeaattuurree

        3344..11..  SSuuppppoorrtt
        3344..22..  IInnttrroodduuccttiioonn
        3344..33..  VVaarriiaabblleess
        3344..44..  nneeoommuuttttrrcc
        3344..55..  KKnnoowwnn  BBuuggss
        3344..66..  CCrreeddiittss

   3355..  SSttaattuuss  CCoolloorr  FFeeaattuurree

        3355..11..  SSuuppppoorrtt
        3355..22..  IInnttrroodduuccttiioonn
        3355..33..  CCoommmmaannddss
        3355..44..  CCoolloorrss
        3355..55..  nneeoommuuttttrrcc
        3355..66..  SSeeee  AAllssoo
        3355..77..  KKnnoowwnn  BBuuggss
        3355..88..  CCrreeddiittss

   3366..  TTLLSS--SSNNII  FFeeaattuurree

        3366..11..  SSuuppppoorrtt
        3366..22..  IInnttrroodduuccttiioonn
        3366..33..  KKnnoowwnn  BBuuggss
        3366..44..  CCrreeddiittss

   3377..  TTrraasshh  FFoollddeerr  FFeeaattuurree

        3377..11..  SSuuppppoorrtt
        3377..22..  IInnttrroodduuccttiioonn
        3377..33..  VVaarriiaabblleess
        3377..44..  FFuunnccttiioonnss
        3377..55..  nneeoommuuttttrrcc
        3377..66..  SSeeee  AAllssoo
        3377..77..  KKnnoowwnn  BBuuggss
        3377..88..  CCrreeddiittss

1. General Notes

1.1. Enabling/Disabling Features

   NeoMutt supports several of optional features which can be enabled or
   disabled at compile-time by giving the _c_o_n_f_i_g_u_r_e script certain
   arguments. These are listed in the "Optional features" section of the
   _c_o_n_f_i_g_u_r_e_ _-_-_h_e_l_p output.

   Which features are enabled or disabled can later be determined from the
   output of neomutt -v. If a compile option starts with "+" it is enabled
   and disabled if prefixed with "-". For example, if NeoMutt was compiled
   using GnuTLS for encrypted communication instead of OpenSSL, neomutt -v
   would contain:
-openssl +gnutls

1.2. URL Syntax

   NeoMutt optionally supports the IMAP, POP3 and SMTP protocols which
   require to access servers using URLs. The canonical syntax for
   specifying URLs in NeoMutt is (an item enclosed in [] means it is
   optional and may be omitted):
proto[s]://[username[:password]@]server[:port][/path]

   _p_r_o_t_o is the communication protocol: imap for IMAP, pop for POP3 and
   smtp for SMTP. If "s" for "secure communication" is appended, NeoMutt
   will attempt to establish an encrypted communication using SSL or TLS.

   Since all protocols supported by NeoMutt support/require
   authentication, login credentials may be specified in the URL. This has
   the advantage that multiple IMAP, POP3 or SMTP servers may be specified
   (which isn't possible using, for example, $$iimmaapp__uusseerr). The username may
   contain the "@" symbol being used by many mail systems as part of the
   login name. The special characters "/" (%2F), ":" (%3A) and "%" (%25)
   have to be URL-encoded in usernames using the %-notation.

   A password can be given, too but is not recommended if the URL is
   specified in a configuration file on disk.

   If no port number is given, NeoMutt will use the system's default for
   the given protocol (usually consulting /etc/services).

   The optional path is only relevant for IMAP and ignored elsewhere.

   _E_x_a_m_p_l_e_ _6_._1_._ _U_R_L_s
pops://host/
imaps://user@host/INBOX/Sent
smtp://user@host:587/

2. SSL/TLS Support

   If NeoMutt is compiled with IMAP, POP3 and/or SMTP support, it can also
   be compiled with support for SSL or TLS using either OpenSSL or GnuTLS
   (by running the _c_o_n_f_i_g_u_r_e script with the _-_-_e_n_a_b_l_e_-_s_s_l_=_._._. option for
   OpenSSL or _-_-_e_n_a_b_l_e_-_g_n_u_t_l_s_=_._._. for GnuTLS). NeoMutt can then attempt to
   encrypt communication with remote servers if these protocols are
   suffixed with "s" for "secure communication".

3. POP3 Support

   NeoMutt has POP3 support and has the ability to work with mailboxes
   located on a remote POP3 server and fetch mail for local browsing.

   Remote POP3 servers can be accessed using URLs with the pop protocol
   for unencrypted and pops for encrypted communication, see SSeeccttiioonn  11..22,,
   ""UURRLL  SSyynnttaaxx"" for details.

   Polling for new mail is more expensive over POP3 than locally. For this
   reason the frequency at which NeoMutt will check for mail remotely can
   be controlled by the $$ppoopp__cchheecckkiinntteerrvvaall variable, which defaults to
   every 60 seconds.

   POP is read-only which doesn't allow for some features like editing
   messages or changing flags. However, using SSeeccttiioonn  77..11,,  ""HHeeaaddeerr
   CCaacchhiinngg"" and SSeeccttiioonn  77..22,,  ""BBooddyy  CCaacchhiinngg"" NeoMutt simulates the
   new/old/read flags as well as flagged and replied. NeoMutt applies some
   logic on top of remote messages but cannot change them so that
   modifications of flags are lost when messages are downloaded from the
   POP server (either by NeoMutt or other tools).

   Another way to access your POP3 mail is the <fetch-mail> function
   (default: G). It allows to connect to $$ppoopp__hhoosstt, fetch all your new
   mail and place it in the local $$ssppoooollffiillee. After this point, NeoMutt
   runs exactly as if the mail had always been local.

Note

   If you only need to fetch all messages to a local mailbox you should
   consider using a specialized program, such as fetchmail(1), getmail(1)
   or similar.

4. IMAP Support

   NeoMutt has IMAP support and has the ability to work with folders
   located on a remote IMAP server.

   You can access the remote inbox by selecting the folder by its URL (see
   SSeeccttiioonn  11..22,,  ""UURRLL  SSyynnttaaxx"" for details) using the imap or imaps
   protocol. Alternatively, a pine-compatible notation is also supported,
   i.e. {[username@]imapserver[:port][/ssl]}path/to/folder

   Note that not all servers use "/" as the hierarchy separator. NeoMutt
   should correctly notice which separator is being used by the server and
   convert paths accordingly.

   When browsing folders on an IMAP server, you can toggle whether to look
   at only the folders you are subscribed to, or all folders with the
   _t_o_g_g_l_e_-_s_u_b_s_c_r_i_b_e_d command. See also the $$iimmaapp__lliisstt__ssuubbssccrriibbeedd variable.

   Polling for new mail on an IMAP server can cause noticeable delays. So,
   you'll want to carefully tune the $$mmaaiill__cchheecckk and $$ttiimmeeoouutt variables.
   Reasonable values are:
set mail_check=90
set timeout=15

   with relatively good results even over slow modem lines.

Note

   Note that if you are using mbox as the mail store on UW servers prior
   to v12.250, the server has been reported to disconnect a client if
   another client selects the same folder.

4.1. The IMAP Folder Browser

   As of version 1.2, NeoMutt supports browsing mailboxes on an IMAP
   server. This is mostly the same as the local file browser, with the
   following differences:
     * In lieu of file permissions, NeoMutt displays the string "IMAP",
       possibly followed by the symbol "+", indicating that the entry
       contains both messages and subfolders. On Cyrus-like servers
       folders will often contain both messages and subfolders.
     * For the case where an entry can contain both messages and
       subfolders, the selection key (bound to enter by default) will
       choose to descend into the subfolder view. If you wish to view the
       messages in that folder, you must use view-file instead (bound to
       space by default).
     * You can create, delete and rename mailboxes with the
       <create-mailbox>, <delete-mailbox>, and <rename-mailbox> commands
       (default bindings: C, d and r, respectively). You may also
       <subscribe> and <unsubscribe> to mailboxes (normally these are
       bound to s and u, respectively).

4.2. Authentication

   NeoMutt supports four authentication methods with IMAP servers: SASL,
   GSSAPI, CRAM-MD5, and LOGIN. There is also support for the
   pseudo-protocol ANONYMOUS, which allows you to log in to a public IMAP
   server without having an account. To use ANONYMOUS, simply make your
   username blank or "anonymous".

   SASL is a special super-authenticator, which selects among several
   protocols (including GSSAPI, CRAM-MD5, ANONYMOUS, and DIGEST-MD5) the
   most secure method available on your host and the server. Using some of
   these methods (including DIGEST-MD5 and possibly GSSAPI), your entire
   session will be encrypted and invisible to those teeming network
   snoops. It is the best option if you have it. To use it, you must have
   the Cyrus SASL library installed on your system and compile NeoMutt
   with the _-_-_w_i_t_h_-_s_a_s_l flag.

   NeoMutt will try whichever methods are compiled in and available on the
   server, in the following order: SASL, ANONYMOUS, GSSAPI, CRAM-MD5,
   LOGIN.

   There are a few variables which control authentication:
     * $$iimmaapp__uusseerr - controls the username under which you request
       authentication on the IMAP server, for all authenticators. This is
       overridden by an explicit username in the mailbox path (i.e. by
       using a mailbox name of the form {user@host}).
     * $$iimmaapp__ppaassss - a password which you may preset, used by all
       authentication methods where a password is needed.
     * $$iimmaapp__aauutthheennttiiccaattoorrss - a colon-delimited list of IMAP
       authentication methods to try, in the order you wish to try them.
       If specified, this overrides NeoMutt's default (attempt everything,
       in the order listed above).

5. SMTP Support

   Besides supporting traditional mail delivery through a
   sendmail-compatible program, NeoMutt supports delivery through SMTP.

   If the configuration variable $$ssmmttpp__uurrll is set, NeoMutt will contact
   the given SMTP server to deliver messages; if it is unset, NeoMutt will
   use the program specified by $$sseennddmmaaiill.

   For details on the URL syntax, please see SSeeccttiioonn  11..22,,  ""UURRLL  SSyynnttaaxx"".

   The built-in SMTP support supports encryption (the smtps protocol using
   SSL or TLS) as well as SMTP authentication using SASL. The
   authentication mechanisms for SASL are specified in
   $$ssmmttpp__aauutthheennttiiccaattoorrss defaulting to an empty list which makes NeoMutt
   try all available methods from most-secure to least-secure.

6. Managing Multiple Accounts

   Usage:

   account-hook _r_e_g_e_x _c_o_m_m_a_n_d

   If you happen to have accounts on multiple IMAP, POP and/or SMTP
   servers, you may find managing all the authentication settings
   inconvenient and error-prone. The aaccccoouunntt--hhooookk command may help. This
   hook works like ffoollddeerr--hhooookk but is invoked whenever NeoMutt needs to
   access a remote mailbox (including inside the folder browser), not just
   when you open the mailbox. This includes (for example) polling for new
   mail, storing Fcc messages and saving messages to a folder. As a
   consequence, aaccccoouunntt--hhooookk should only be used to set connection-related
   settings such as passwords or tunnel commands but not settings such as
   sender address or name (because in general it should be considered
   unpredictable which aaccccoouunntt--hhooookk was last used).

   Some examples:
account-hook . 'unset imap_user; unset imap_pass; unset tunnel'
account-hook imap://host1/ 'set imap_user=me1 imap_pass=foo'
account-hook imap://host2/ 'set tunnel="ssh host2 /usr/libexec/imapd"'
account-hook smtp://user@host3/ 'set tunnel="ssh host3 /usr/libexec/smtpd"'

   To manage multiple accounts with, for example, different values of
   $$rreeccoorrdd or sender addresses, ffoollddeerr--hhooookk has to be be used together
   with the mmaaiillbbooxxeess command.

   _E_x_a_m_p_l_e_ _6_._2_._ _M_a_n_a_g_i_n_g_ _m_u_l_t_i_p_l_e_ _a_c_c_o_u_n_t_s
mailboxes imap://user@host1/INBOX
folder-hook imap://user@host1/ 'set folder=imap://host1/ ; set record=+INBOX/Sen
t'
mailboxes imap://user@host2/INBOX
folder-hook imap://user@host2/ 'set folder=imap://host2/ ; set record=+INBOX/Sen
t'

   In example EExxaammppllee  66..22,,  ""MMaannaaggiinngg  mmuullttiippllee  aaccccoouunnttss"" the folders are
   defined using mmaaiillbbooxxeess so NeoMutt polls them for new mail. Each
   ffoollddeerr--hhooookk triggers when one mailbox below each IMAP account is opened
   and sets $$ffoollddeerr to the account's root folder. Next, it sets $$rreeccoorrdd to
   the _I_N_B_O_X_/_S_e_n_t folder below the newly set $$ffoollddeerr. Please notice that
   the value the "+" mmaaiillbbooxx  sshhoorrttccuutt refers to depends on the _c_u_r_r_e_n_t
   value of $$ffoollddeerr and therefore has to be set separately per account.
   Setting other values like $$ffrroomm or $$ssiiggnnaattuurree is analogous to setting
   $$rreeccoorrdd.

7. Local Caching

   NeoMutt contains two types of local caching: _(_1_) the so-called "header
   caching" and _(_2_) the so-called "body caching" which are both described
   in this section.

   Header caching is optional as it depends on external libraries, body
   caching is always enabled if NeoMutt is compiled with POP and/or IMAP
   support as these use it (body caching requires no external library).

7.1. Header Caching

   NeoMutt provides optional support for caching message headers for the
   following types of folders: IMAP, POP, Maildir and MH. Header caching
   greatly speeds up opening large folders because for remote folders,
   headers usually only need to be downloaded once. For Maildir and MH,
   reading the headers from a single file is much faster than looking at
   possibly thousands of single files (since Maildir and MH use one file
   per message.)

   Header caching can be enabled by configuring one of the database
   backends. One of tokyocabinet, kyotocabinet, qdbm, gdbm, lmdb or bdb.

   If enabled, $$hheeaaddeerr__ccaacchhee can be used to either point to a file or a
   directory. If set to point to a file, one database file for all folders
   will be used (which may result in lower performance), but one file per
   folder if it points to a directory.

   Additionally, $$hheeaaddeerr__ccaacchhee__bbaacckkeenndd can be used to specify which
   backend to use. The list of available backends can be specified at
   configure time with a set of --with-<backend> options. Currently, the
   following backends are supported: tokyocabinet, kyotocabinet, qdbm,
   gdbm, bdb, lmdb.

7.2. Body Caching

   Both cache methods can be combined using the same directory for storage
   (and for IMAP/POP even provide meaningful file names) which simplifies
   manual maintenance tasks.

   In addition to caching message headers only, NeoMutt can also cache
   whole message bodies. This results in faster display of messages for
   POP and IMAP folders because messages usually have to be downloaded
   only once.

   For configuration, the variable $$mmeessssaaggee__ccaacchheeddiirr must point to a
   directory. There, NeoMutt will create a hierarchy of subdirectories
   named like the account and mailbox path the cache is for.

7.3. Cache Directories

   For using both, header and body caching, $$hheeaaddeerr__ccaacchhee and
   $$mmeessssaaggee__ccaacchheeddiirr can be safely set to the same value.

   In a header or body cache directory, NeoMutt creates a directory
   hierarchy named like: proto:user@hostname where proto is either "pop"
   or "imap." Within there, for each folder, NeoMutt stores messages in
   single files and header caches in files with the ".hcache" extension.
   All files can be removed as needed if the consumed disk space becomes
   an issue as NeoMutt will silently fetch missing items again. Pathnames
   are always stored in UTF-8 encoding.

   For Maildir and MH, the header cache files are named after the MD5
   checksum of the path.

7.4. Maintenance

   NeoMutt does not (yet) support maintenance features for header cache
   database files so that files have to be removed in case they grow too
   big. It depends on the database library used for header caching whether
   disk space freed by removing messages is re-used.

   For body caches, NeoMutt can keep the local cache in sync with the
   remote mailbox if the $$mmeessssaaggee__ccaacchhee__cclleeaann variable is set. Cleaning
   means to remove messages from the cache which are no longer present in
   the mailbox which only happens when other mail clients or instances of
   NeoMutt using a different body cache location delete messages (NeoMutt
   itself removes deleted messages from the cache when syncing a mailbox).
   As cleaning can take a noticeable amount of time, it should not be set
   in general but only occasionally.

8. Sending Anonymous Messages via Mixmaster

   You may also have compiled NeoMutt to co-operate with Mixmaster, an
   anonymous remailer. Mixmaster permits you to send your messages
   anonymously using a chain of remailers. Mixmaster support in NeoMutt is
   for mixmaster version 2.04 or later.

   To use it, you'll have to obey certain restrictions. Most important,
   you cannot use the Cc and Bcc headers. To tell NeoMutt to use
   mixmaster, you have to select a remailer chain, using the mix function
   on the compose menu.

   The chain selection screen is divided into two parts. In the (larger)
   upper part, you get a list of remailers you may use. In the lower part,
   you see the currently selected chain of remailers.

   You can navigate in the chain using the <chain-prev> and <chain-next>
   functions, which are by default bound to the left and right arrows and
   to the h and l keys (think vi keyboard bindings). To insert a remailer
   at the current chain position, use the <insert> function. To append a
   remailer behind the current chain position, use <select-entry> or
   <append>. You can also delete entries from the chain, using the
   corresponding function. Finally, to abandon your changes, leave the
   menu, or <accept> them pressing (by default) the Return key.

   Note that different remailers do have different capabilities, indicated
   in the %c entry of the remailer menu lines (see $$mmiixx__eennttrryy__ffoorrmmaatt).
   Most important is the "middleman" capability, indicated by a capital
   "M": This means that the remailer in question cannot be used as the
   final element of a chain, but will only forward messages to other
   mixmaster remailers. For details on the other capabilities, please have
   a look at the mixmaster documentation.

9. Attach Headers Color Feature

Color attachment headers using regex, just like mail bodies

9.1. Support

   _S_i_n_c_e_: NeoMutt 2016-09-10

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

9.2. Introduction

   This feature allows specifying regexes to color attachment headers just
   like the mail body would. The headers are the parts colored by the
   attachment color. Coloring them is useful to highlight the results of
   GPGME's signature checks or simply the mimetype or size of the
   attachment. Only the part matched by the regex is colored.

9.3. Usage

   The attach_headers color should be used just like the body color.
color attach_headers foreground background pattern

9.4. neomuttrc

# Example NeoMutt config file for the attach-headers-color feature.

# Color if the attachment is autoviewed
color   attach_headers     brightgreen     default    "Autoview"
# Color only the brackets around the headers
color   attach_headers     brightyellow    default    "^\\[--"
color   attach_headers     brightyellow    default    "--]$"
# Color the mime type and the size
color   attach_headers     green           default    "Type: [a-z]+/[a-z0-9\-]+"
color   attach_headers     green           default    "Size: [0-9\.]+[KM]"
# Color GPGME signature checks
color   attach_headers     brightgreen     default    "Good signature from.*"
color   attach_headers     brightred       default    "Bad signature from.*"
color   attach_headers     brightred       default    "BAD signature from.*"
color   attach_headers     brightred       default    "Note: This key has expire
d!"
color   attach_headers     brightmagenta   default    "Problem signature from.*"
color   attach_headers     brightmagenta   default    "WARNING: This key is not
certified with a trusted signature!"
color   attach_headers     brightmagenta   default    "         There is no indi
cation that the signature belongs to the owner."
color   attach_headers     brightmagenta   default    "can't handle these multip
le signatures"
color   attach_headers     brightmagenta   default    "signature verification su
ppressed"
color   attach_headers     brightmagenta   default    "invalid node with packet
of type"

# vim: syntax=neomuttrc

9.5. See Also

     * CCoolloorr  ccoommmmaanndd
     * RReegguullaarr  EExxpprreessssiioonnss

9.6. Known Bugs

   None

9.7. Credits

     * Guillaume Brogi <gguuii--gguuii@@nneettccoouurrrriieerr..ccoomm>

10. Compose to Sender Feature

Send new mail to the sender of the current mail

10.1. Support

   _S_i_n_c_e_: NeoMutt 2016-10-02

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

10.2. Introduction

   The compose-to-sender feature adds a new command to start composing a
   new email to the sender of the current message. This is not a reply,
   but a new, separate, message.

   It works on tagged messages too, sending one email to all of the
   senders of the tagged messages.

10.3. Functions

   compose-to-sender adds the following function to NeoMutt. By default,
   it is not bound to a key.

   _T_a_b_l_e_ _6_._1_._ _c_o_m_p_o_s_e_-_t_o_-_s_e_n_d_e_r_ _F_u_n_c_t_i_o_n_s
   Menus Function Description
   index,pager <compose-to-sender> compose a new email to the sender of
   the current email

10.4. neomuttrc

# Example NeoMutt config file for the compose-to-sender feature.

# --------------------------------------------------------------------------
# FUNCTIONS - shown with an example mapping
# --------------------------------------------------------------------------
# Compose a new email (not a reply) to the sender
bind index,pager @ compose-to-sender

# vim: syntax=neomuttrc

10.5. Known Bugs

   None

10.6. Credits

     * Brian Medley
     * Guillaume Brogi <gguuii--gguuii@@nneettccoouurrrriieerr..ccoomm>

11. Compressed Folders Feature

Read from/write to compressed mailboxes

11.1. Support

   _S_i_n_c_e_: NeoMutt 2016-05-30

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

11.2. Introduction

   The Compressed Folder feature allows NeoMutt to read mailbox files that
   are compressed. But it isn't limited to compressed files. It works well
   with encrypted files, too. In fact, if you can create a program/script
   to convert to and from your format, then NeoMutt can read it.

   The feature adds three hooks to NeoMutt: open-hook, close-hook and
   append-hook. They define commands to: uncompress a file; compress a
   file; append messages to an already compressed file.

   There are some examples of both compressed and encrypted files, later.
   For now, the documentation will just concentrate on compressed files.

11.3. Commands

   open-hook _r_e_g_e_x _"_s_h_e_l_l_-_c_o_m_m_a_n_d_"
   close-hook _r_e_g_e_x _"_s_h_e_l_l_-_c_o_m_m_a_n_d_"
   append-hook _r_e_g_e_x _"_s_h_e_l_l_-_c_o_m_m_a_n_d_"

   The shell-command must contain two placeholders for filenames: %f and
   %t. These represent "from" and "to" filenames. These placeholders
   should be placed inside single-quotes to prevent unintended shell
   expansions.

   If you need the exact string "%f" or "%t" in your command, simply
   double up the "%" character, e.g. "%%f" or "%%t".

   _T_a_b_l_e_ _6_._2_._ _N_o_t_ _a_l_l_ _H_o_o_k_s_ _a_r_e_ _R_e_q_u_i_r_e_d
   Open Close Append Effect Useful if
   Open -- -- Folder is readonly The folder is just a backup
   Open Close -- Folder is read/write, but the entire folder must be
   written if anything is changed Your compression format doesn't support
   appending
   Open Close Append Folder is read/write and emails can be efficiently
   added to the end Your compression format supports appending
   Open -- Append Folder is readonly, but can be appended to You want to
   store emails, but never change them

Note

   The command:
     * should return a non-zero exit status on failure
     * should not delete any files

11.3.1. Read from compressed mailbox

open-hook regex "shell-command"

   If NeoMutt is unable to open a file, it then looks for open-hook that
   matches the filename.

   If your compression program doesn't have a well-defined extension, then
   you can use . as the regex.

11.3.1.1. Example of open-hook

open-hook '\.gz$' "gzip --stdout --decompress '%f' > '%t'"

     * NeoMutt finds a file, "example.gz", that it can't read
     * NeoMutt has an open-hook whose regex matches the filename: \.gz$
     * NeoMutt uses the command gzip -cd to create a temporary file that
       it _c_a_n read

11.3.2. Write to a compressed mailbox

close-hook regex "shell-command"

   When NeoMutt has finished with a compressed mail folder, it will look
   for a matching close-hook to recompress the file. This hook is
   ooppttiioonnaall.

Note

   If the folder has not been modified, the close-hook will not be called.

11.3.2.1. Example of close-hook

close-hook '\.gz$' "gzip --stdout '%t' > '%f'"

     * NeoMutt has finished with a folder, "example.gz", that it opened
       with open-hook
     * The folder has been modified
     * NeoMutt has a close-hook whose regex matches the filename: \.gz$
     * NeoMutt uses the command gzip -c to create a new compressed file

Note

   The close-hook can also include extra options, e.g. compression level:
   --best

11.3.3. Append to a compressed mailbox

append-hook regex "shell-command"

   When NeoMutt wants to append an email to a compressed mail folder, it
   will look for a matching append-hook. This hook is ooppttiioonnaall.

   Using the append-hook will save time, but NeoMutt won't be able to
   determine the type of the mail folder inside the compressed file.

   NeoMutt will _a_s_s_u_m_e the type to be that of the $mbox_type variable.
   NeoMutt also uses this type for temporary files.

   NeoMutt will only use the append-hook for existing files. The
   close-hook will be used for empty, or missing files.

Note

   If your command writes to stdout, it is vital that you use >> in the
   "append-hook". If not, data will be lost.

11.3.3.1. Example of append-hook

append-hook '\.gz$' "gzip --stdout '%t' >> '%f'"

     * NeoMutt wants to append an email to a folder, "example.gz", that it
       opened with open-hook
     * NeoMutt has an append-hook whose regex matches the filename: \.gz$
     * NeoMutt knows the mailbox type from the $mbox variable
     * NeoMutt uses the command gzip -c to append to an existing
       compressed file

Note

   The append-hook can also include extra options, e.g. compression level:
   --best

11.3.4. Empty Files

   NeoMutt assumes that an empty file is not compressed. In this
   situation, unset $$ssaavvee__eemmppttyy, so that the compressed file will be
   removed if you delete all of the messages.

11.3.5. Security

   Encrypted files are decrypted into temporary files which are stored in
   the $$ttmmppddiirr directory. This could be a security risk.

11.4. neomuttrc

# Example NeoMutt config file for the compress feature.

# This feature adds three hooks to NeoMutt which allow it to
# work with compressed, or encrypted, mailboxes.

# The hooks are of the form:
#       open-hook   regex "shell-command"
#       close-hook  regex "shell-command"
#       append-hook regex "shell-command"
# The 'append-hook' is optional.

# Handler for gzip compressed mailboxes
open-hook   '\.gz$' "gzip --stdout --decompress '%f' >  '%t'"
close-hook  '\.gz$' "gzip --stdout              '%t' >  '%f'"
append-hook '\.gz$' "gzip --stdout              '%t' >> '%f'"
# Handler for bzip2 compressed mailboxes
open-hook   '\.bz2$' "bzip2 --stdout --decompress '%f' >  '%t'"
close-hook  '\.bz2$' "bzip2 --stdout              '%t' >  '%f'"
append-hook '\.bz2$' "bzip2 --stdout              '%t' >> '%f'"
# Handler for xz compressed mailboxes
open-hook   '\.xz$' "xz --stdout --decompress '%f' >  '%t'"
close-hook  '\.xz$' "xz --stdout              '%t' >  '%f'"
append-hook '\.xz$' "xz --stdout              '%t' >> '%f'"
# Handler for pgp encrypted mailboxes
# PGP does not support appending to an encrypted file
open-hook   '\.pgp$' "pgp -f < '%f' > '%t'"
close-hook  '\.pgp$' "pgp -fe YourPgpUserIdOrKeyId < '%t' > '%f'"
# Handler for gpg encrypted mailboxes
# gpg does not support appending to an encrypted file
open-hook   '\.gpg$' "gpg --decrypt < '%f' > '%t'"
close-hook  '\.gpg$' "gpg --encrypt --recipient YourGpgUserIdOrKeyId < '%t' > '%
f'"

# vim: syntax=neomuttrc

11.5. See Also

     * RReegguullaarr  EExxpprreessssiioonnss
     * $$ttmmppddiirr
     * $$mmbbooxx__ttyyppee
     * $$ssaavvee__eemmppttyy
     * ffoollddeerr--hhooookk

11.6. Credits

     * Roland Rosenfeld <rroollaanndd@@ssppiinnnnaakkeerr..ddee>
     * Alain Penders <AAllaaiinn@@FFiinnaallee--DDeevv..ccoomm>
     * Christoph "Myon" Berg <mmyyoonn@@ddeebbiiaann..oorrgg>
     * Evgeni Golov <eevvggeennii@@ddeebbiiaann..oorrgg>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

12. Conditional Dates Feature

Use rules to choose date format

12.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_:
          nneesstteedd--iiff  ffeeaattuurree

12.2. Introduction

   The "Conditional Dates" feature allows you to construct $$iinnddeexx__ffoorrmmaatt
   expressions based on the age of the email.

   NeoMutt's default $index_format displays email dates in the form:
   abbreviated-month day-of-month - "Jan 14".

   The format is configurable but only per-mailbox. This feature allows
   you to configure the display depending on the age of the email.

   _T_a_b_l_e_ _6_._3_._ _P_o_t_e_n_t_i_a_l_ _F_o_r_m_a_t_t_i_n_g_ _S_c_h_e_m_e
      Email Sent     Format Example
   Today             %H:%M  13:23
   This Month        %a %d  Thu 17
   This Year         %b %d  Dec 10
   Older than 1 Year %m/%y  06/14

   For an explanation of the date formatting strings, see strftime(3).

   By carefully picking your formats, the dates can remain unambiguous and
   compact.

   NeoMutt's conditional format strings have the form: (whitespace
   introduced for clarity)
%? TEST ? TRUE & FALSE ?

   The examples below use the test "%[" - the date of the message in the
   local timezone. They will also work with "%(" - the local time that the
   message arrived.

   The date tests are of the form:
%[nX? TRUE & FALSE ?

     * "n" is an optional count (defaults to 1 if missing)
     * "X" is the time period

   _T_a_b_l_e_ _6_._4_._ _D_a_t_e_ _F_o_r_m_a_t_t_i_n_g_ _C_o_d_e_s
   Letter Time Period
   y      Years
   m      Months
   w      Weeks
   d      Days
   H      Hours
   M      Minutes

   _T_a_b_l_e_ _6_._5_._ _E_x_a_m_p_l_e_ _D_a_t_e_ _T_e_s_t_s
   Test       Meaning
   %[y  This year
   %[1y This year
   %[6m In the last 6 months
   %[w  This week
   %[d  Today
   %[4H In the last 4 hours

12.2.1. Example 1

   We start with a one-condition test.

   _T_a_b_l_e_ _6_._6_._ _E_x_a_m_p_l_e_ _1
   Test Date Range Format String  Example
   %[1m This month %[%b %d]      Dec 10
        Older      %[%Y-%m-%d]   2015-04-23

   The $index_format string would contain:
%?[1m?%[%b %d]&%[%Y-%m-%d]?

   Reparsed a little, for clarity, you can see the test condition and the
   two format strings.
%?[1m?        &           ?

      %[%b %d] %[%Y-%m-%d]

12.2.2. Example 2

   This example contains three test conditions and four date formats.

   _T_a_b_l_e_ _6_._7_._ _E_x_a_m_p_l_e_ _2
   Test Date Range Format String Example
   %[d  Today      %[%H:%M ]     12:34
   %[m  This month %[%a %d]      Thu 12
   %[y  This year  %[%b %d]      Dec 10
        Older      %[%m/%y ]     06/15

   The $index_format string would contain:
%<[y?%<[m?%<[d?%[%H:%M ]&%[%a %d]>&%[%b %d]>&%[%m/%y ]>

   Reparsed a little, for clarity, you can see the test conditions and the
   four format strings.
%<[y?                                       &%[%m/%y ]>  Older
     %<[m?                        &%[%b %d]>             This year
          %<[d?         &%[%a %d]>                       This month
               %[%H:%M ]                                 Today

   This a another view of the same example, with some whitespace for
   clarity.
%<[y? %<[m? %<[d? AAA & BBB > & CCC > & DDD >

   AAA = %[%H:%M ] BBB = %[%a %d] CCC = %[%b %d] DDD =
             %[%m/%y ]

12.3. Variables

   The "Conditional Dates" feature doesn't have any config of its own. It
   modifies the behavior of the format strings.

12.4. neomuttrc

# Example NeoMutt config file for the cond-date feature.

#
# The default index_format is:
#       '%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?) %s'
#
# We replace the date field '%{%b %d}', giving:
set index_format='%4C %Z %<[y?%<[m?%<[d?%[%H:%M ]&%[%a %d]>&%[%b %d]>&%[%m/%y ]>
 %-15.15L (%?l?%4l&%4c?) %s'
# Test  Date Range  Format String  Example
# --------------------------------------------
# %[d   Today       %[%H:%M ]      12:34
# %[m   This month  %[%a %d]       Thu 12
# %[y   This year   %[%b %d]       Dec 10
#  --    Older       %[%m/%y ]      06/15

# vim: syntax=neomuttrc

12.5. See Also

     * $$iinnddeexx__ffoorrmmaatt
     * nneesstteedd--iiff  ffeeaattuurree
     * strftime(3)

12.6. Known Bugs

   Date parsing doesn't quite do what you expect. "1w" doesn't mean the
   "in the last 7 days", but "_t_h_i_s week". This doesn't match the normal
   NeoMutt behavior: for example ~d>1w means emails dated in the last 7
   days.

12.7. Credits

     * Aaron Schrab <aaaarroonn@@sscchhrraabb..ccoomm>
     * Eric Davis <eeddaavviiss@@iinnssaannuumm..ccoomm>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

13. Encrypt-to-Self Feature

Save a self-encrypted copy of emails

13.1. Support

   _S_i_n_c_e_: NeoMutt 2016-07-23

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

13.2. Introduction

   Once you encrypt an email to someone you cannot read it. This is good
   for security, but bad for record-keeping. If you wanted to keep a copy
   of an encrypted email you could set $$ffcccc__cclleeaarr.

   A better option is to enable $$ssmmiimmee__sseellff__eennccrryypptt, then set
   $$ssmmiimmee__ddeeffaauulltt__kkeeyy to your personal S/MIME key id.
set smime_self_encrypt = yes
set smime_default_key  = bb345e23.0

   Or, if you use PGP, $$ppggpp__sseellff__eennccrryypptt, then set $$ppggpp__ddeeffaauulltt__kkeeyy to
   your personal PGP key id.
set pgp_self_encrypt = yes
set pgp_default_key  = A4AF18C5582473BD35A1E9CE78BB3D480042198E

   If you have different key for signing, then you can set $$ppggpp__ssiiggnn__aass or
   $$ssmmiimmee__ssiiggnn__aass respectively.

13.3. Variables

   _T_a_b_l_e_ _6_._8_._ _e_n_c_r_y_p_t_-_s_e_l_f_ _V_a_r_i_a_b_l_e_s
          Name         Type   Default
   pgp_default_key    string  (empty)
   pgp_self_encrypt   boolean yes
   pgp_sign_as        string  (empty)
   smime_default_key  string  (empty)
   smime_self_encrypt boolean yes
   smime_sign_as      string  (empty)

13.4. neomuttrc

# Example NeoMutt config file for the encrypt-to-self feature.

# --------------------------------------------------------------------------
# VARIABLES - shown with their default values
# --------------------------------------------------------------------------
# Save a copy of outgoing email, encrypted to yourself
set pgp_self_encrypt = "yes"
set pgp_default_key = "PGP-KEY"
# set pgp_sign_as = "PGP-SIGNING-KEY"

# Save a copy of outgoing email, encrypted to yourself
set smime_self_encrypt = "yes"
set smime_default_key = "SMIME-KEY"
# set smime_sign_as = "SMIME-SIGNING-KEY"

# vim: syntax=neomuttrc

13.5. Known Bugs

   None

13.6. Credits

     * Omen Wild <oommeenn@@mmaannddaarrbb..ccoomm>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>
     * Guillaume Brogi <gguuii--gguuii@@nneettccoouurrrriieerr..ccoomm>

14. Fmemopen Feature

Replace some temporary files with memory buffers

14.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_:
          open_memstream(), fmemopen() from glibc

   This feature can be enabled by running configure with the option
   --enable-fmemopen

14.2. Introduction

   The "fmemopen" feature speeds up some searches.

   This feature changes a few places where NeoMutt creates temporary
   files. It replaces them with in-memory buffers. This should improve the
   performance when searching the header or body using the
   $$tthhoorroouugghh__sseeaarrcchh option.

   There are no user-configurable parts.

   This feature depends on open_memstream() and fmemopen(). They are
   provided by glibc. Without them, NeoMutt will simply create temporary
   files.

14.3. See Also

     * CCoommppiillee--TTiimmee  FFeeaattuurreess
     * fmemopen(3)

14.4. Known Bugs

   ddeebbiiaann  bbuugg  883344440088

14.5. Credits

     * Julius Plenz <pplleennzz@@cciiss..ffuu--bbeerrlliinn..ddee>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

15. Forgotten Attachment Feature

Alert user when (s)he forgets to attach a file to an outgoing email.

15.1. Support

   _S_i_n_c_e_: NeoMutt 2016-09-10

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

15.2. Introduction

   The "forgotten-attachment" feature provides a new setting for NeoMutt
   that alerts the user if the message body contains a certain keyword but
   there are no attachments added. This is meant to ensure that the user
   does not forget to attach a file after promising to do so in the mail.
   The attachment keyword will not be scanned in text matched by
   $$qquuoottee__rreeggeexx.

15.3. Variables

   _T_a_b_l_e_ _6_._9_._ _f_o_r_g_o_t_t_e_n_-_a_t_t_a_c_h_m_e_n_t_ _V_a_r_i_a_b_l_e_s
           Name                Type        Default
   abort_noattach_regex regular expression
   \\<(attach|attached|attachments?)\\>
   abort_noattach       quadoption         no

15.4. neomuttrc

# Example NeoMutt config file for the forgotten-attachment feature.

# The 'forgotten-attachment' feature provides a new setting for NeoMutt that
# alerts the user if the message body contains a certain regular expression but
there are
# no attachments added. This is meant to ensure that the user does not forget
# to attach a file after promising to do so in the mail.

# Ask if the user wishes to abort sending if $abort_noattach_regex is found in t
he
# body, but no attachments have been added
# It can be set to:
#    "yes"     : always abort
#    "ask-yes" : ask whether to abort
#    "no"      : send the mail
set abort_noattach = no
# Search for the following regular expression in the body of the email
# English: attach, attached, attachment, attachments
set abort_noattach_regex = "\\<attach(|ed|ments?)\\>"
# Nederlands:
# set abort_noattach_regex = "\\<(bijvoegen|bijgevoegd|bijlage|bijlagen)\\>"
# Deutsch:
# set abort_noattach_regex = "\\<(anhaengen|angehaengt|anhang|anhaenge|haengt an
)\\>"
# Franc,ais:
# set abort_noattach_regex = "\\<(attache|attaches|attache|attachons|joint|joint
e|joints|jointes|joins|joignons)\\>"

# vim: syntax=neomuttrc

15.5. See Also

     * TThhee  AAttttaacchhmmeenntt  MMeennuu
     * TThhee  AAttttaacchhmmeenntt  MMeennuu  kkeeyy  mmaappppiinnggss

15.6. Known Bugs

   None

15.7. Credits

     * Darshit Shah <ddaarrnniirr@@ggmmaaiill..ccoomm>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>
     * Johannes Weissl <jjaarrggoonn@@mmoollbb..oorrgg>
     * Steven! Ragnaroek <sstteevveenn@@nnuucclleeaarrssaannddwwiicchh..ccoomm>

16. Global Hooks

Define actions to run globally within NeoMutt

16.1. Introduction

   These hooks are called when global events take place in NeoMutt.

   _R_u_n_ _a_ _c_o_m_m_a_n_d_._._.
     * _t_i_m_e_o_u_t_-_h_o_o_k - periodically
     * _s_t_a_r_t_u_p_-_h_o_o_k - when NeoMutt starts up, before opening the first
       mailbox
     * _s_h_u_t_d_o_w_n_-_h_o_o_k - NeoMutt shuts down, before closing the last mailbox

16.1.1. Timeout Hook

Run a command periodically

   _S_i_n_c_e_: NeoMutt 2016-08-08

   This feature implements a new hook that is called periodically when
   NeoMutt checks for new mail. This hook is called every $timeout
   seconds.

16.1.2. Startup Hook

Run a command when NeoMutt starts up, before opening the first mailbox

   _S_i_n_c_e_: NeoMutt 2016-11-25

   This feature implements a new hook that is called when NeoMutt first
   starts up, but before opening the first mailbox. This is most likely to
   be useful to users of nnoottmmuucchh.

16.1.3. Shutdown Hook

Run a command when NeoMutt shuts down, before closing the last mailbox

   _S_i_n_c_e_: NeoMutt 2016-11-25

   This feature implements a hook that is called when NeoMutt shuts down,
   but before closing the first mailbox. This is most likely to be useful
   to users of nnoottmmuucchh.

16.2. Commands

   timeout-hook _c_o_m_m_a_n_d

   startup-hook _c_o_m_m_a_n_d

   shutdown-hook _c_o_m_m_a_n_d

16.3. neomuttrc

# Example NeoMutt config file for the global hooks feature.

# --------------------------------------------------------------------------
# COMMANDS - shown with an example argument
# --------------------------------------------------------------------------
# After $timeout seconds of inactivity, run this NeoMutt command
timeout-hook 'exec sync-mailbox'
# When NeoMutt first loads, run this NeoMutt command
startup-hook 'exec sync-mailbox'
# When NeoMutt quits, run this NeoMutt command
shutdown-hook 'exec sync-mailbox'

# vim: syntax=neomuttrc

16.4. See Also

     * $$ttiimmeeoouutt

16.5. Known Bugs

   None

16.6. Credits

     * Armin Wolfermann <aarrmmiinn@@wwoollffeerrmmaannnn..oorrgg>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>
     * Thomas Adam <tthhoommaass@@xxtteeddddyy..oorrgg>

17. Ifdef Feature

Conditional config options

17.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

17.2. Introduction

   The "ifdef" feature introduces three new commands to NeoMutt and allow
   you to share one config file between versions of NeoMutt that may have
   different features compiled in.
ifdef  symbol "config-command [args...]"  # If a symbol is defined
ifndef symbol "config-command [args...]"  # If a symbol is not defined
finish                                    # Finish reading the current file

   Here a symbol can be a $$vvaarriiaabbllee, <<ffuunnccttiioonn>>, ccoommmmaanndd or compile-time
   symbol, such as "imap".

   A list of compile-time symbols can be seen in the output of the command
neomutt -v

   (in the "Compile options" section).

   finish is particularly useful when combined with ifndef. e.g.
# Sidebar config file
ifndef sidebar finish

17.3. Commands

   ifdef _s_y_m_b_o_l _"_c_o_n_f_i_g_-_c_o_m_m_a_n_d_ _[_a_r_g_s_._._._]_"
   ifndef _s_y_m_b_o_l _"_c_o_n_f_i_g_-_c_o_m_m_a_n_d_ _[_a_r_g_s_._._._]_"
   finish

17.4. neomuttrc

# Example NeoMutt config file for the ifdef feature.

# This feature introduces three useful commands which allow you to share
# one config file between versions of NeoMutt that may have different
# features compiled in.

#   ifdef  symbol "config-command [args...]"
#   ifndef symbol "config-command [args...]"
#   finish
# The 'ifdef' command tests whether NeoMutt understands the name of
# a variable, function, command or compile-time symbol.

# If it does, then it executes a config command.

# The 'ifndef' command tests whether a symbol does NOT exist.

# The 'finish' command tells NeoMutt to stop reading current config file.

# If the 'trash' variable exists, set it.
ifdef trash 'set trash=~/Mail/trash'
# If the 'tag-pattern' function exists, bind a key to it.
ifdef tag-pattern 'bind index <F6> tag-pattern'
# If the 'imap-fetch-mail' command exists, read my IMAP config.
ifdef imap-fetch-mail 'source ~/.neomutt/imap.rc'
# If the compile-time symbol 'sidebar' does not exist, then
# stop reading the current config file.
ifndef sidebar finish

# vim: syntax=neomuttrc

17.5. Known Bugs

   None

17.6. Credits

     * Cedric Duval <cceeddrriiccdduuvvaall@@ffrreeee..ffrr>
     * Matteo F. Vescovi <mmffvveessccoovvii@@ggmmaaiill..ccoomm>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

18. Index Color Feature

Custom rules for theming the email index

18.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_:
          ssttaattuuss--ccoolloorr  ffeeaattuurree

18.2. Introduction

   The "index-color" feature allows you to specify colors for individual
   parts of the email index. e.g. Subject, Author, Flags.

   First choose which part of the index you'd like to color. Then, if
   needed, pick a pattern to match.

   Note: The pattern does not have to refer to the object you wish to
   color. e.g.
color index_author red default "~sneomutt"

   The author appears red when the subject (~s) contains "neomutt".

18.3. Colors

   All the colors default to default, i.e. unset.

   The index objects can be themed using the color command. Some objects
   require a pattern.
color index-object foreground background
color index-object foreground background pattern

   _T_a_b_l_e_ _6_._1_0_._ _I_n_d_e_x_ _C_o_l_o_r_s
       Object      Pattern                  Highlights
   index           yes     Entire index line
   index_author    yes     Author name, %A %a %F %L %n
   index_collapsed no      Number of messages in a collapsed thread, %M
   index_date      no      Date field
   index_flags     yes     Message flags, %S %Z
   index_label     no      Message label, %y %Y
   index_number    no      Message number, %C
   index_size      no      Message size, %c %l
   index_subject   yes     Subject, %s

18.4. neomuttrc

# Example NeoMutt config file for the index-color feature.

# Entire index line
color index white black '.*'
# Author name, %A %a %F %L %n
# Give the author column a dark grey background
color index_author default color234 '.*'
# Highlight a particular from (~f)
color index_author brightyellow color234 '~fRay Charles'
# Message flags, %S %Z
# Highlight the flags for flagged (~F) emails
color index_flags default red '~F'
# Subject, %s
# Look for a particular subject (~s)
color index_subject brightcyan default '~s\(closes #[0-9]+\)'
# Number of messages in a collapsed thread, %M
color index_collapsed default brightblue
# Date field
color index_date green default
# Message label, %y %Y
color index_label default brightgreen
# Message number, %C
color index_number red default
# Message size, %c %l
color index_size cyan default

# vim: syntax=neomuttrc

18.5. See Also

     * RReegguullaarr  EExxpprreessssiioonnss
     * PPaatttteerrnnss
     * $$iinnddeexx__ffoorrmmaatt
     * CCoolloorr  ccoommmmaanndd
     * SSttaattuuss--CCoolloorr  ffeeaattuurree

18.6. Known Bugs

   None

18.7. Credits

     * Christian Aichinger <GGrreeeekk00@@ggmmxx..nneett>
     * Christoph "Myon" Berg <mmyyoonn@@ddeebbiiaann..oorrgg>
     * Elimar Riesebieter <rriieesseebbiiee@@llxxtteecc..ddee>
     * Eric Davis <eeddaavviiss@@iinnssaannuumm..ccoomm>
     * Vladimir Marek <VVllaaddiimmiirr..MMaarreekk@@oorraaccllee..ccoomm>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

19. Initials Expando Feature

Expando for author's initials

19.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

19.2. Introduction

   The "initials" feature adds an expando (%I) for an author's initials.

   The index panel displays a list of emails. Its layout is controlled by
   the $$iinnddeexx__ffoorrmmaatt variable. Using this expando saves space in the index
   panel. This can be useful if you are regularly working with a small set
   of people.

19.3. Variables

   This feature has no config of its own. It adds an expando which can be
   used in the $$iinnddeexx__ffoorrmmaatt variable.

19.4. neomuttrc

# Example NeoMutt config file for the initials feature.

# The 'initials' feature has no config of its own.

# It adds an expando for an author's initials,
# which can be used in the 'index_format' variable.

# The default 'index_format' is:
set index_format='%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?) %s'
# Where %L represents the author/recipient
# This might look like:
#       1   + Nov 17 David Bowie   Changesbowie    ( 689)
#       2   ! Nov 17 Stevie Nicks  Rumours         ( 555)
#       3   + Nov 16 Jimi Hendrix  Voodoo Child    ( 263)
#       4   + Nov 16 Debbie Harry  Parallel Lines  ( 540)
# Using the %I expando:
set index_format='%4C %Z %{%b %d} %I (%?l?%4l&%4c?) %s'
# This might look like:
#       1   + Nov 17 DB Changesbowie    ( 689)
#       2   ! Nov 17 SN Rumours         ( 555)
#       3   + Nov 16 JH Voodoo Child    ( 263)
#       4   + Nov 16 DH Parallel Lines  ( 540)

# vim: syntax=neomuttrc

19.5. See Also

     * $$iinnddeexx__ffoorrmmaatt
     * iinnddeexx--ccoolloorr  ffeeaattuurree
     * ffoollddeerr--hhooookk

19.6. Known Bugs

   None

19.7. Credits

     * Vsevolod Volkov <vvvvvv@@mmuutttt..oorrgg..uuaa>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

20. Kyoto Cabinet Feature

Kyoto Cabinet backend for the header cache

20.1. Support

   _S_i_n_c_e_: NeoMutt 2016-10-02

   _D_e_p_e_n_d_e_n_c_i_e_s_:
          KKyyoottoo  CCaabbiinneett  lliibbrraarriieess

   To check if NeoMutt supports Kyoto Cabinet, look for
     * "kyoto" in the NeoMutt version.
     * "+hcache" in the compile options
     * "hcache backend: kyotocabinet" in the NeoMutt version

20.2. Introduction

   This feature adds support for using Kyoto Cabinet, the successor to
   Tokyo Cabinet, as a storage backend for NeoMutt's header cache
   (hcache). It is enabled at configure time with the
   _-_-_w_i_t_h_-_k_y_o_t_o_c_a_b_i_n_e_t_=_<_p_a_t_h_> switch.

20.3. See Also

     * LLooccaall  CCaacchhiinngg
     * KKyyoottoo  CCaabbiinneett

20.4. Known Bugs

   None

20.5. Credits

     * Clemens Lang <nneevveerrppaanniicc@@ggmmaaiill..ccoomm>

21. Limit Current Thread Feature

Focus on one Email Thread

21.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-28

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

21.2. Introduction

   This feature adds a new way of using the LLiimmiitt  CCoommmmaanndd. The
   <limit-current-thread> function restricts the view to just the current
   thread. Setting the limit (the l key) to "all" will restore the full
   email list.

21.3. Functions

   Limit-current-thread adds the following function to NeoMutt. By
   default, it is not bound to a key.

   _T_a_b_l_e_ _6_._1_1_._ _L_i_m_i_t_-_C_u_r_r_e_n_t_-_T_h_r_e_a_d_ _F_u_n_c_t_i_o_n_s
   Menus        Function                Description
   index <limit-current-thread> Limit view to current thread

21.4. neomuttrc

# Example NeoMutt config file for the limit-current-thread feature.

# Limit view to current thread
bind index <esc>L limit-current-thread

# vim: syntax=neomuttrc

21.5. Known Bugs

   None

21.6. Credits

     * David Sterba <ddsstteerrbbaa@@ssuussee..cczz>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

22. LMDB Feature

LMDB backend for the header cache

22.1. Support

   _S_i_n_c_e_: NeoMutt 2016-07-23

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

22.2. Introduction

   This feature adds support for using LMDB as a storage backend for
   NeoMutt's header cache (hcache). It is enabled at configure time with
   the _-_-_w_i_t_h_-_l_m_d_b_=_<_p_a_t_h_> switch.

Note

   It is not recommended to store the lmdb database on a shared drive.

22.3. See Also

     * LLooccaall  CCaacchhiinngg

22.4. Known Bugs

   None

22.5. Credits

     * Pietro Cerutti <ggaahhrr@@ggaahhrr..cchh>
     * Jan-Piet Mens <jjpp@@mmeennss..ddee>
     * Clemens Lang <nneevveerrppaanniicc@@ggmmaaiill..ccoomm>

23. Multiple FCC Feature

Save multiple copies of outgoing mail

23.1. Support

   _S_i_n_c_e_: NeoMutt 2016-08-08

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

23.2. Introduction

   This feature allows the user to save outgoing emails in multiple
   folders.

   Folders should be listed separated by commas, _b_u_t_ _n_o_ _s_p_a_c_e_s.

   The "fcc" field of an email can be set in two ways:
     * The <edit-fcc> command in the compose menu (default key: "f")
     * Creating a fcc-hook in your .neomuttrc

23.3. See Also

     * $$rreeccoorrdd
     * ffcccc--hhooookk

23.4. Known Bugs

   None

23.5. Credits

     * Omen Wild <oommeenn@@mmaannddaarrbb..ccoomm>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

24. Nested If Feature

Allow complex nested conditions in format strings

24.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

24.2. Introduction

   NeoMutt's format strings can contain embedded if-then-else conditions.
   They are of the form:
%?VAR?TRUE&FALSE?

   If the variable "VAR" has a value greater than zero, print the "TRUE"
   string, otherwise print the "FALSE" string.

   e.g. %?S?Size: %S&Empty?

   Which can be read as:

   if (%S > 0) { print "Size: %S" } else { print "Empty" }

   These conditions are useful, but in NeoMutt they cannot be nested
   within one another. This feature uses the notation %<VAR?TRUE&FALSE>
   and allows them to be nested.

   The %<...> notation was used to format the current local time. but
   that's not really very useful since NeoMutt has no means of refreshing
   the screen periodically.

   A simple nested condition might be: (Some whitespace has been
   introduced for clarity)
%<x? %<y? XY & X > & %<y? Y & NONE > >  Conditions
     %<y? XY & X >                      x>0
          XY                            x>0,y>0
               X                        x>0,y=0

%<x? %<y? XY & X > & %<y? Y & NONE > >  Conditions
                     %<y? Y & NONE >    x=0
                          Y             x=0,y>0
                              NONE      x=0,y=0

   Equivalent to:

   if (x > 0) {
     if (y > 0) {
       print 'XY'
     } else {
       print 'X'
     }
   } else {
     if (y > 0) {
       print 'Y'
     } else {
       print 'NONE'
     }
   }

   Examples:
set index_format='%4C %Z %{%b %d} %-25.25n %s%> %<M?%M Msgs &%<l?%l Lines&%c Byt
es>>'

   if a thread is folded display the number of messages (%M)
   else if we know how many lines in the message display lines in message
   (%l)
   else display the size of the message in bytes (%c)
set index_format='%4C %Z %{%b %d} %-25.25n %<M?[%M] %s&%s%* %<l?%l&%c>>'

   if a thread is folded display the number of messages (%M) and the subje
   ct (%s)
   else if we know how many lines are in the message display subject (%s)
   and the lines in message (%l)
   else display the subject (%s) and the size of the message in bytes (%c)

Note

   If you wish to use angle brackets < > in a nested condition, then it's
   necessary to escape them, e.g.
set index_format='%<M?\<%M\>&%s>'

24.3. Variables

   The "nested-if" feature doesn't have any config of its own. It modifies
   the behavior of the format strings.

24.4. neomuttrc

# Example NeoMutt config file for the nested-if feature.

# This feature uses the format: '%<VAR?TRUE&FALSE>' for conditional
# format strings that can be nested.

# Example 1
# if a thread is folded
#       display the number of messages (%M)
# else if we know how many lines in the message
#       display lines in message (%l)
# else display the size of the message in bytes (%c)
set index_format='%4C %Z %{%b %d} %-25.25n %s%> %<M?%M Msgs &%<l?%l Lines&%c Byt
es>>'

# Example 2
# if a thread is folded
#       display the number of messages (%M)
#       display the subject (%s)
# else if we know how many lines in the message
#       display lines in message (%l)
# else
#       display the size of the message in bytes (%c)
set index_format='%4C %Z %{%b %d} %-25.25n %<M?[%M] %s&%s%* %<l?%l&%c>>'

# vim: syntax=neomuttrc

24.5. See Also

     * ccoonndd--ddaattee  ffeeaattuurree
     * $$iinnddeexx__ffoorrmmaatt
     * $$ssttaattuuss__ffoorrmmaatt

24.6. Known Bugs

   This feature is hard to understand

24.7. Credits

     * David Champion <ddggcc@@uucchhiiccaaggoo..eedduu>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>
     * Aleksa Sarai <ccyypphhaarr@@ccyypphhaarr..ccoomm>

25. New Mail Feature

Execute a command upon the receipt of new mail.

25.1. Support

   _S_i_n_c_e_: NeoMutt 2016-07-23

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

25.2. Introduction

   This feature enables the new_mail_command setting, which can be used to
   execute a custom script (e.g. a notification handler) upon receiving a
   new mail.

   The command string can contain expandos, such as %n for the number of
   new messages. For a complete list, see: $$ssttaattuuss__ffoorrmmaatt.

Note

   When the notification is sent, the folder of the new mail is no longer
   known. This is a limitation of NeoMutt. The `%f` expando will show the
   open folder.

   For example in Linux you can use (most distributions already provide
   notify-send):
set new_mail_command="notify-send --icon='/home/santiago/Pictures/neomutt.png' \
  'New Email' '%n new messages, %u unread.' &"

   And in OS X you will need to install a command line interface for
   Notification Center, for example tteerrmmiinnaall--nnoottiiffiieerr:
set new_mail_command="terminal-notifier -title '%v' -subtitle 'New Mail' \
  -message '%n new messages, %u unread.' -activate 'com.apple.Terminal'"

25.3. Variables

   _T_a_b_l_e_ _6_._1_2_._ _N_e_w_ _M_a_i_l_ _C_o_m_m_a_n_d_ _V_a_r_i_a_b_l_e_s
         Name        Type  Default
   new_mail_command string (empty)

25.4. neomuttrc

# Example NeoMutt config file for the new-mail feature.

# --------------------------------------------------------------------------
# VARIABLES - shown with their default values
# --------------------------------------------------------------------------
# Set the command you want NeoMutt to execute upon the receipt of a new email
set new_mail_command = ""
# Linux example:
# set new_command="notify-send --icon='/home/santiago/Pictures/neomutt.png' \
#   'New Email in %f' '%n new messages, %u unread.' &"
# OS X example:
# set new_mail_command="terminal-notifier -title '%v' -subtitle 'New Mail in %f'
 \
#   -message '%n new messages, %u unread.' -activate 'com.apple.Terminal'"
# --------------------------------------------------------------------------

# vim: syntax=neomuttrc

25.5. See Also

     * ffoollddeerr--hhooookk

25.6. Known Bugs

   None

25.7. Credits

     * Yoshiki Vazquez-Baeza <yyoosshhiikkii@@uuccssdd..eedduu>
     * Santiago Torres-Arias <ssaannttiiaaggoo@@nnyyuu..eedduu>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

26. NNTP Feature

Talk to a Usenet news server

26.1. Support

   _S_i_n_c_e_: NeoMutt 2016-05-30

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

26.2. Introduction

   Reading news via NNTP

   NeoMutt can read from a news server using NNTP.

   The default news server can be obtained from the $NNTPSERVER
   environment variable or from the /etc/nntpserver file. Like in other
   news readers, information about the subscribed newsgroups is saved in
   the file specified by the $$nneewwssrrcc variable. You can open a newsgroup
   with the function <change-newsgroup>

   The variable $$nneewwss__ccaacchhee__ddiirr can be used to point to a directory.
   NeoMutt will create a hierarchy of subdirectories named like the
   account and newsgroup the cache is for. The hierarchy is also used to
   store header cache if NeoMutt was compiled with hheeaaddeerr  ccaacchhee support.

26.3. Variables

   _T_a_b_l_e_ _6_._1_3_._ _N_N_T_P_ _V_a_r_i_a_b_l_e_s
           Name           Type           Default
   ask_follow_up         boolean no
   ask_x_comment_to      boolean no
   catchup_newsgroup     quad    ask-yes
   followup_to_poster    quad    ask-yes
   group_index_format    string  %4C %M%N %5s %-45.45f %d
   inews                 string  (empty)
   mime_subject          boolean yes
   newsgroups_charset    string  utf-8
   newsrc                string  ~/.newsrc
   news_cache_dir        string  ~/.neomutt
   news_server           string  (empty)
   nntp_authenticators   string  (empty)
   nntp_context          number  1000
   nntp_listgroup        boolean yes
   nntp_load_description boolean yes
   nntp_pass             string  (empty)
   nntp_poll             number  60
   nntp_user             string  (empty)
   post_moderated        quad    ask-yes
   save_unsubscribed     boolean no
   show_new_news         boolean yes
   show_only_unread      boolean no
   x_comment_to          boolean no

26.4. Functions

   NNTP adds the following functions to NeoMutt. By default, none of them
   are bound to keys.

   _T_a_b_l_e_ _6_._1_4_._ _N_N_T_P_ _F_u_n_c_t_i_o_n_s
   Menus Function Description
   browser,index <catchup> mark all articles in newsgroup as read
   index,pager <change-newsgroup> open a different newsgroup
   compose <edit-followup-to> edit the Followup-To field
   compose <edit-newsgroups> edit the newsgroups list
   compose <edit-x-comment-to> edit the X-Comment-To field
   attach,index,pager <followup-message> followup to newsgroup
   index,pager <post-message> post message to newsgroup
   browser <reload-active> load list of all newsgroups from NNTP server
   browser <subscribe> subscribe to current mbox (IMAP/NNTP only)
   browser <subscribe-pattern> subscribe to newsgroups matching a pattern
   browser <uncatchup> mark all articles in newsgroup as unread
   browser <unsubscribe> unsubscribe from current mbox (IMAP/NNTP only)
   browser <unsubscribe-pattern> unsubscribe from newsgroups matching a
   pattern
   index,pager <change-newsgroup-readonly> open a different newsgroup in
   read only mode
   attach,index,pager <forward-to-group> forward to newsgroup
   index <get-children> get all children of the current message
   index <get-parent> get parent of the current message
   index <reconstruct-thread> reconstruct thread containing current
   message
   index <get-message> get message with Message-Id

26.5. neomuttrc

# Example NeoMutt config file for the nntp feature.

# --------------------------------------------------------------------------
# VARIABLES - shown with their default values
# --------------------------------------------------------------------------
set ask_follow_up = no
set ask_x_comment_to = no
set catchup_newsgroup = ask-yes
set followup_to_poster = ask-yes
set group_index_format = '%4C %M%N %5s  %-45.45f %d'
set inews = ''
set mime_subject = yes
set newsgroups_charset = utf-8
set newsrc = '~/.newsrc'
set news_cache_dir = '~/.neomutt'
set news_server = ''
set nntp_authenticators = ''
set nntp_context = 1000
set nntp_listgroup = yes
set nntp_load_description = yes
set nntp_pass = ''
set nntp_poll = 60
set nntp_user = ''
set post_moderated = ask-yes
set save_unsubscribed = no
set show_new_news = yes
set show_only_unread = no
set x_comment_to = no
# --------------------------------------------------------------------------
# FUNCTIONS - shown with an example mapping
# --------------------------------------------------------------------------
# mark all articles in newsgroup as read
bind browser,index y catchup
# open a different newsgroup
bind index,pager i change-newsgroup
# edit the Followup-To field
bind compose o edit-followup-to
# edit the newsgroups list
bind compose N edit-newsgroups
# edit the X-Comment-To field
bind compose x edit-x-comment-to
# followup to newsgroup
bind attach,index,pager F followup-message
# post message to newsgroup
bind index,pager P post-message
# load list of all newsgroups from NNTP server
bind browser g reload-active
# subscribe to current mbox (IMAP/NNTP only)
bind browser s subscribe
# subscribe to newsgroups matching a pattern
bind browser S subscribe-pattern
# mark all articles in newsgroup as unread
bind browser Y uncatchup
# unsubscribe from current mbox (IMAP/NNTP only)
bind browser u unsubscribe
# unsubscribe from newsgroups matching a pattern
bind browser U unsubscribe-pattern
# open a different newsgroup in read only mode
bind index,pager \ei change-newsgroup-readonly
# forward to newsgroup
bind attach,index,pager \eF forward-to-group
# get all children of the current message
# bind index ??? get-children
# get parent of the current message
bind index \eG get-parent
# reconstruct thread containing current message
# bind index ??? reconstruct-thread
# get message with Message-Id
bind index \CG get-message
# --------------------------------------------------------------------------

# vim: syntax=neomuttrc

26.6. Known Bugs

   None

26.7. Credits

     * Vsevolod Volkov <vvvvvv@@mmuutttt..oorrgg..uuaa>
     * Felix von Leitner <lleeiittnneerr@@ffeeffee..ddee>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

27. Custom backend based Tags Feature

Implements Notmuch tags and Imap keywords

27.1. Support

   _S_i_n_c_e_: NeoMutt 2017-10-16

   _D_e_p_e_n_d_e_n_c_i_e_s_:
     * qquuaassii--ddeelleettee  ffeeaattuurree
     * iinnddeexx--ccoolloorr  ffeeaattuurree

27.2. Introduction

   Some backends allow to index and tags mail without storing the tags
   within the mail envelope. Two backends are currently implementing this
   feature. Notmuch handles them natively and IMAP stores them in custom
   IMAP keywords.

27.3. Variables

   _T_a_b_l_e_ _6_._1_5_._ _C_u_s_t_o_m_ _t_a_g_s_ _V_a_r_i_a_b_l_e_s
      Name      Type  Default
   hidden_tags string
   unread,draft,flagged,passed,replied,attachment,signed,encrypted

27.4. Functions

   Notmuch adds the following functions to NeoMutt. By default, none of
   them are bound to keys.

   _T_a_b_l_e_ _6_._1_6_._ _N_o_t_m_u_c_h_/_I_M_A_P_ _F_u_n_c_t_i_o_n_s
   Menus Function Description
   index,pager <modify-labels> add, remove, or toggle tags: IMAP: edit the
   tags list Notmuch: [+]<tag> to add, -<tag> to remove, !<tag> to
   toggle(notmuch) tags. Note: Tab completion of tag names is available
   index,pager <modify-labels-then-hide> add, remove, or toggle tags IMAP:
   edit the tags list Notmuch: [+]<tag> to add, -<tag> to remove, !<tag>
   to toggle labels and then hide or unhide the message by changing the
   "quasi-deleted" to match if it would be shown when requerying. Normal
   redisplay rules apply here, so the user must call <sync-mailbox> for
   the changes to be displayed. Note: Tab completion of tag names is
   available.

27.5. Commands

   tag-transforms _t_a_g _t_r_a_n_s_f_o_r_m_e_d_-_s_t_r_i_n_g { _t_a_g _t_r_a_n_s_f_o_r_m_e_d_-_s_t_r_i_n_g ...}
   tag-formats _t_a_g _f_o_r_m_a_t_-_s_t_r_i_n_g { _t_a_g _f_o_r_m_a_t_-_s_t_r_i_n_g ...}

27.6. Colors

   Adds these to index-color feature:

   _T_a_b_l_e_ _6_._1_7_._ _I_n_d_e_x_ _C_o_l_o_r_s
     Object   Pattern                  Highlights
   index_tag  yes     an individual message tag, %G, uses tag name
   index_tags no      the transformed message tags, %g or %J

27.7. neomuttrc

# Example NeoMutt config file for the custom tags feature.

# VARIABLES - shown with their default values
# --------------------------------------------------------------------------
# This variable specifies private notmuch tags which should not be printed
# on screen (index, pager).
set nm_hidden_tags = "unread,draft,flagged,passed,replied,attachment,signed,encr
ypted"
# --------------------------------------------------------------------------
# FUNCTIONS - shown with an example mapping
# --------------------------------------------------------------------------
# modify (notmuch/imap) tags
bind index,pager \` modify-labels
# modify (notmuch/imap) tag non-interactively.
bind index,pager tt "<modify-labels>!todo\n" "Toggle the 'todo' tag"
# modify labels and then hide message
# bind index,pager ??? modify-labels-then-hide
# --------------------------------------------------------------------------
# COMMANDS - shown with an example
# --------------------------------------------------------------------------
# Replace some tags with icons
# tag-transforms tag transformed-string { tag transformed-string ...}
# tag-transforms "inbox"   "i"   \
#                "unread"  "u"   \
#                "replied" ">u "  \
#                "sent"    "-> "  \
#                "todo"    "T"   \
#                "deleted" "DEL" \
#                "invites" "CAL"

# The formats must start with 'G' and the entire sequence is case sensitive.
# tag-formats tag format-string { tag format-string ...}
# tag-formats "inbox"   "GI" \
#             "unread"  "GU" \
#             "replied" "GR" \
#             "sent"    "GS" \
#             "todo"    "Gt" \
#             "deleted" "GD" \
#             "invites" "Gi"

# Now instead of using '%g' or '%J' in your $index_format, which lists all tags
# in a non-deterministic order, you can something like the following which puts
# a transformed tag name in a specific spot on the index line:
# set index_format='%4C %S %[%y.%m.%d] %-18.18n %?GU?%GU& ? %?GR?%GR& ? %?GI?%GI
& ? %s'

# The %G formatting sequence may display all tags including tags hidden by
# nm_hidden_tags.
#
# --------------------------------------------------------------------------
# COLORS - some unpleasant examples are given
# --------------------------------------------------------------------------
# These symbols are added to the index-color feature:
# an individual message tag, %G, uses tag name
# this symbol uses a pattern
color index_tag red white "inbox"
# the transformed message tags, %g
# this symbol does not use a pattern
color index_tags green default
# --------------------------------------------------------------------------

# vim: syntax=neomuttrc

27.8. Credits

     * Mehdi Abaakouk <ssiilleehhtt@@ssiilleehhtt..nneett>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>
     * Bernard 'Guyzmo' Pratz <gguuyyzzmmoo++ggiitthhuubb++ppuubb@@mm00gg..nneett>

28. Notmuch Feature

Email search engine

28.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-17

   _D_e_p_e_n_d_e_n_c_i_e_s_:
     * qquuaassii--ddeelleettee  ffeeaattuurree
     * iinnddeexx--ccoolloorr  ffeeaattuurree
     * Notmuch libraries

28.2. Introduction

   Notmuch is an email fulltext indexing and tagging engine.
     * For more information, see: hhttttppss::////nnoottmmuucchhmmaaiill..oorrgg//
     * More examples: hhttttppss::////nnoottmmuucchhmmaaiill..oorrgg//mmuuttttttiippss//

28.3. Using Notmuch

28.3.1. Folders URI

   _n_o_t_m_u_c_h_:_/_/_[_<_p_a_t_h_>_]_[_?_<_i_t_e_m_>_=_<_n_a_m_e_>_[_&_ _._._._]_]

   The <path> is an absolute path to the directory where the notmuch
   database is found as returned by "notmuch config get database.path"
   command. Note that the <path> should NOT include .notmuch directory
   name.

   If the "<path>" is not defined then $nm_default_uri or $folder is used,
   for example:
set nm_default_uri = "notmuch:///home/foo/maildir"
virtual-mailboxes "My INBOX" "notmuch://?query=tag:inbox"

28.3.2. Items

   _q_u_e_r_y_=_<_s_t_r_i_n_g_>

   See SEARCH SYNTAX in notmuch man page. Don't forget to use operators
   ("and"/"or") in your queries.

   Note that proper URI should not contain blank space and all "bad" chars
   should be encoded, for example

   tag:AAA and tag:BBB - encoding -> tag:AAA%20and%20tag:BBB

   but NeoMutt config file parser is smart enough to accept space in
   quoted strings. It means that you can use

   notmuch:///foo?query=tag:AAA and tag:BBB

   in your config files to keep things readable.

   For more details about Xapian queries, see:
   hhttttppss::////xxaappiiaann..oorrgg//ddooccss//qquueerryyppaarrsseerr..hhttmmll

   _l_i_m_i_t_=_<_n_u_m_b_e_r_>

   Restricts number of messages/threads in the result. The default limit
   is nm_db_limit.

   _t_y_p_e_=_<_t_h_r_e_a_d_s_|_m_e_s_s_a_g_e_s_>

   Reads all matching messages or whole-threads. The default is 'messages'
   or nm_query_type.

28.3.3. Format String for the Notmuch Browser

   Default:

                 %2C %?n?%4n/& ?%4m %f

   This variable allows you to customize the browser display to your
   personal taste. This string is similar to $$iinnddeexx__ffoorrmmaatt, but has its
   own set of printf(3)-like sequences:
   %C  current file number
   %f  folder name (description)
   %m  number of messages in the mailbox *
   %n  number of unread messages in the mailbox *
   %N  N if mailbox has new mail, blank otherwise
   %>X right justify the rest of the string and pad with character "X"
   %|X pad to the end of the line with character "X"
   %*X soft-fill with character "X" as pad

   For an explanation of "soft-fill", see the $$iinnddeexx__ffoorrmmaatt documentation.

   * = can be optionally printed if nonzero

28.4. Variables

   _T_a_b_l_e_ _6_._1_8_._ _N_o_t_m_u_c_h_ _V_a_r_i_a_b_l_e_s
         Name         Type     Default
   nm_db_limit       number  0
   nm_default_uri    string  (empty)
   nm_exclude_tags   string  (empty)
   nm_open_timeout   number  5
   nm_query_type     string  messages
   nm_record         boolean no
   nm_record_tags    string  (empty)
   nm_unread_tag     string  unread
   vfolder_format    string  %6n(%6N) %f
   virtual_spoolfile boolean no

   More variables about tags configuration can be found in CCuussttoomm  bbaacckkeenndd
   TTaaggss  FFeeaattuurree

28.5. Functions

   Notmuch adds the following functions to NeoMutt. By default, none of
   them are bound to keys.

   _T_a_b_l_e_ _6_._1_9_._ _N_o_t_m_u_c_h_ _F_u_n_c_t_i_o_n_s
   Menus Function Description
   index,pager <change-vfolder> switch to another virtual folder, a new
   folder maybe be specified by vfolder description (see
   virtual-mailboxes) or URI. the default is next vfolder with unread
   messages
   index,pager <entire-thread> read entire thread of the current message
   index,pager <sidebar-toggle-virtual> toggle between mailboxes and
   virtual mailboxes
   index,pager <vfolder-from-query> generate virtual folder from notmuch
   search query. Note: TAB completion of 'tag:' names is available.
   index,pager <vfolder-window-forward> generate virtual folder by moving
   the query's time window forward
   index,pager <vfolder-window-backward> generate virtual folder by moving
   the query's time window backward

   More functions about tags can be found in CCuussttoomm  bbaacckkeenndd  TTaaggss  FFeeaattuurree

28.6. Commands

   virtual-mailboxes _d_e_s_c_r_i_p_t_i_o_n _n_o_t_m_u_c_h_-_U_R_I { _d_e_s_c_r_i_p_t_i_o_n _n_o_t_m_u_c_h_-_U_R_I
   ...}
   unvirtual-mailboxes { _* | _m_a_i_l_b_o_x ... }

   More commands about tags can be found in CCuussttoomm  bbaacckkeenndd  TTaaggss  FFeeaattuurree

28.7. Colors

   See CCuussttoomm  bbaacckkeenndd  TTaaggss  ccoolloorrss

28.8. neomuttrc

# Example NeoMutt config file for the notmuch feature.

# --------------------------------------------------------------------------
# VARIABLES - shown with their default values
# --------------------------------------------------------------------------
# This variable specifies notmuch query limit.
set nm_db_limit = 0
# This variable specifies the default Notmuch database in format:
# notmuch://<absolute path>
set nm_default_uri = ""
# The messages tagged with these tags are excluded and not loaded
# from notmuch DB to NeoMutt unless specified explicitly.
set nm_exclude_tags = ""
# This option specifies timeout for Notmuch database. Default is 5 seconds.
set nm_open_timeout = 5
# This variable specifies notmuch query type, supported types: 'threads' and
# 'messages'.
set nm_query_type = messages
# Add messages stored to the NeoMutt record (see $record in the NeoMutt docs)
# also to notmuch DB. If you reply to an email then the new email inherits
# tags from the original email.
set nm_record = no
# Tags that should be removed or added to the to the messages stored in the NeoM
utt record.
# example:
#   set record = "~/sent-mails"
#   set nm_record = yes
#   set nm_record_tags = "-inbox,archive,me"
set nm_record_tags = ""
# This variable specifies notmuch tag which is used for unread messages.
set nm_unread_tag = unread
# This variable allows you to customize the file browser display for virtual
# folders to your personal taste.
# %C   current folder number
# %f   folder name (description)
# %m   number of messages in the mailbox *
# %n   number of unread messages in the mailbox *
# %N   N if mailbox has new mail, blank otherwise
# %>X  right justify the rest of the string and pad with character ``X''
# %|X  pad to the end of the line with character ``X''
# %*X  soft-fill with character ``X'' as pad
set vfolder_format = "%6n(%6N) %f"
# When set, NeoMutt will use the first virtual mailbox (see virtual-mailboxes)
# as a spoolfile.
set virtual_spoolfile = no
# setup time window preferences
# first setup the duration, and then the time unit of that duration
# when set to 0 (the default) the search window feature is disabled
set nm_query_window_duration=2
set nm_query_window_timebase="week" # or "hour", "day", "week", "month", "year"
# --------------------------------------------------------------------------
# FUNCTIONS - shown with an example mapping
# --------------------------------------------------------------------------
# open a different virtual folder
bind index,pager X change-vfolder
# read entire thread of the current message
bind index,pager + entire-thread
# generate virtual folder from query
bind index,pager \eX vfolder-from-query
# generate virtual folder from query with time window
bind index,pager < vfolder-window-backward
bind index,pager > vfolder-window-forward
# toggle between mailboxes and virtual mailboxes
# bind index,pager ??? sidebar-toggle-virtual
# --------------------------------------------------------------------------
# COMMANDS - shown with an example
# --------------------------------------------------------------------------
# virtual-mailboxes description notmuch-URI { description notmuch-URI ...}
# virtual-mailboxes "Climbing" "notmuch://?query=climbing"
# unvirtual-mailboxes { * | mailbox ...}
#
# --------------------------------------------------------------------------

# vim: syntax=neomuttrc

28.9. See Also

     * CCoommppiillee--TTiimmee  FFeeaattuurreess

28.10. Known Bugs

   None

28.11. Credits

     * Karel Zak <kkzzaakk@@rreeddhhaatt..ccoomm>
     * Chris Mason <ccllmm@@ffbb..ccoomm>
     * Christoph Rissner <ccrrii@@vviissootteecchh..aatt>
     * David Riebenbauer <ddaavvrriieebb@@lliieeggeessttaa..aatt>
     * David Sterba <ddsstteerrbbaa@@ssuussee..cczz>
     * David Wilson <ddww@@bboottaanniiccuuss..nneett>
     * Don Zickus <ddzziicckkuuss@@rreeddhhaatt..ccoomm>
     * Eric Davis <eeddaavviiss@@iinnssaannuumm..ccoomm>
     * Jan Synacek <jjssyynnaacceekk@@rreeddhhaatt..ccoomm>
     * Jeremiah C. Foster <jjeerreemmiiaahh@@jjeerreemmiiaahhffoosstteerr..ccoomm>
     * Josh Poimboeuf <jjppooiimmbbooee@@rreeddhhaatt..ccoomm>
     * Kirill A. Shutemov <kkiirriillll@@sshhuutteemmoovv..nnaammee>
     * Luke Macken <llmmaacckkeenn@@rreeddhhaatt..ccoomm>
     * Mantas Mikulenas <ggrraawwiittyy@@ggmmaaiill..ccoomm>
     * Patrick Brisbin <ppbbrriissbbiinn@@ggmmaaiill..ccoomm>
     * Philippe Le Brouster <ppllbb@@nneebbkkhhaa..nneett>
     * Raghavendra D Prabhu <rrpprraabbhhuu@@wwnnoohhaanngg..nneett>
     * Sami Farin <hhvvttaaiiffwwkkbbggeeffbbaaeeii@@ggmmaaiill..ccoomm>
     * Stefan Assmann <ssaassssmmaannnn@@kkppaanniicc..ddee>
     * Stefan Kuhn <pp__rreeggiiuuss@@ggmmxx..cchh>
     * Tim Stoakes <ttiimm@@ssttooaakkeess..nneett>
     * Vladimir Marek <VVllaaddiimmiirr..MMaarreekk@@oorraaccllee..ccoomm>
     * Victor Manuel Jaquez Leal <vvjjaaqquueezz@@iiggaalliiaa..ccoomm>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>
     * Bernard 'Guyzmo' Pratz <gguuyyzzmmoo++ggiitthhuubb++ppuubb@@mm00gg..nneett>

29. Progress Bar Feature

Show a visual progress bar on slow operations

29.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

29.2. Introduction

   The "progress" feature shows a visual progress bar on slow tasks, such
   as indexing a large folder over the net.

29.3. Colors

   _T_a_b_l_e_ _6_._2_0_._ _P_r_o_g_r_e_s_s_ _C_o_l_o_r_s
     Name   Default Color     Description
   progress default       Visual progress bar

29.4. neomuttrc

# Example NeoMutt config file for the progress feature.

# The 'progress' feature provides clear visual feedback for
# slow tasks, such as indexing a large folder over the net.

# Set the color of the progress bar
# White text on a red background
color progress white red

# vim: syntax=neomuttrc

29.5. See Also

     * CCoolloorr  ccoommmmaanndd

29.6. Known Bugs

   None

29.7. Credits

     * Rocco Rutte <ppddmmeeff@@ggmmxx..nneett>
     * Vincent Lefevre <vviinncceenntt@@vviinncc1177..oorrgg>
     * Stefan Kuhn <wwuuooddaann@@hhiissppeeeedd..cchh>
     * Karel Zak <kkzzaakk@@rreeddhhaatt..ccoomm>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

30. Quasi-Delete Feature

Mark emails that should be hidden, but not deleted

30.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

30.2. Introduction

   The "quasi-delete" function marks an email that should be hidden from
   the index, but NOT deleted. The email will disappear from the index
   when <<ssyynncc--mmaaiillbbooxx>> is called.

   On its own, this feature isn't very useful. It forms a useful part of
   the notmuch plugin.

30.3. Functions

   _T_a_b_l_e_ _6_._2_1_._ _Q_u_a_s_i_-_D_e_l_e_t_e_ _F_u_n_c_t_i_o_n_s
   Menus Default Key Function Description
   index,pager (none) <quasi-delete> delete from NeoMutt, don't touch on
   disk

30.4. neomuttrc

# Example NeoMutt config file for the quasi-delete feature.

# The 'quasi-delete' function marks an email that should be hidden
# from the index, but NOT deleted.
bind index,pager Q quasi-delete

# vim: syntax=neomuttrc

30.5. See Also

     * nnoottmmuucchh  ffeeaattuurree

30.6. Known Bugs

   None

30.7. Credits

     * Karel Zak <kkzzaakk@@rreeddhhaatt..ccoomm>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

31. Reply With X-Original-To Feature

Direct reply to email using X-Original-To header

31.1. Support

   _S_i_n_c_e_: NeoMutt 2016-09-10

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

31.2. Introduction

   Adds a reply_with_xorig for NeoMutt configuration files. If enabled,
   allows to reply to an email using the email address in the first
   X-Original-To: header of a mail as the From: header of the answer.

31.3. Variables

   _T_a_b_l_e_ _6_._2_2_._ _R_e_p_l_y_ _W_i_t_h_ _X_-_O_r_i_g_i_n_a_l_-_T_o_ _V_a_r_i_a_b_l_e_s
         Name        Type   Default
   reply_with_xorig Boolean no

31.4. neomuttrc

# Example NeoMutt config file for the reply-with-xorig feature.

# --------------------------------------------------------------------------
# VARIABLES - shown with their default values
# --------------------------------------------------------------------------
# Use X-Original-To header to reply when reverse is disabled or no alternate
# is found.
set reply_with_xorig = "yes"

# vim: syntax=neomuttrc

31.5. Credits

     * Pierre-Elliott Becue <bbeeccuuee@@ccrraannss..oorrgg>

32. Sensible Browser Feature

Make the file browser behave

32.1. Support

   _S_i_n_c_e_: NeoMutt 2016-09-10

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

32.2. Introduction

   The "sensible browser" is a set of small changes to NeoMutt's mailbox
   browser which make the browser behave in a more predictable way.

   The behavior is divided into two use cases: Fixed Order; Variable
   Order.

32.2.1. A Fixed Order of Mailboxes

   This is for users who like their mailboxes in a fixed order, e.g.
   alphabetical, or unsorted (in the order of the config file).
# Fixed order
set sort_browser="alpha"
set sort_browser="unsorted"

   When you first start the browser, e.g. c? your current mailbox will be
   highlighted.

   When you navigate to a parent mailbox ("..") your old mailbox will be
   highlighted.

   ".." will always be listed at the top, however the rest of the list is
   sorted.

32.2.2. A Variable Order of Mailboxes

   This is for users who like their mailboxes sorted by a characteristic
   that changes, e.g. count of new mail, or the size of mailbox.
# Variable order
set sort_browser="reverse-count"
set sort_browser="reverse-size"

   When you first start the browser, e.g. c? the highlight will be on the
   first mailbox, e.g. the one with the most new mail.

   When you navigate to a parent mailbox ("..") your old mailbox will be
   highlighted.

   ".." will always be listed at the top, however the rest of the list is
   sorted.

32.3. See Also

     * $$ffoollddeerr__ffoorrmmaatt

32.4. Known Bugs

   None

32.5. Credits

     * Pierre-Elliott Becue <bbeeccuuee@@ccrraannss..oorrgg>
     * Haakon Riiser <hhaaaakkoonn..rriiiisseerr@@ffyyss..uuiioo..nnoo>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

33. Sidebar Feature

Overview of mailboxes

33.1. Support

   _S_i_n_c_e_: NeoMutt 2016-09-10, NeoMutt 1.7.0

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

33.2. Introduction

   The Sidebar shows a list of all your mailboxes. The list can be turned
   on and off, it can be themed and the list style can be configured.

   This part of the manual is a reference guide. If you want a simple
   introduction with examples see the SSiiddeebbaarr  HHoowwttoo. If you just want to
   get started, you could use the sample SSiiddeebbaarr  nneeoommuuttttrrcc.

33.3. Variables

   _T_a_b_l_e_ _6_._2_3_._ _S_i_d_e_b_a_r_ _V_a_r_i_a_b_l_e_s
            Name            Type       Default
   sidebar_delim_chars     string  /.
   sidebar_divider_char    string  |
   sidebar_folder_indent   boolean no
   sidebar_format          string  %B%* %n
   sidebar_indent_string   string     (two spaces)
   sidebar_new_mail_only   boolean no
   sidebar_next_new_wrap   boolean no
   sidebar_on_right        boolean no
   sidebar_short_path      boolean no
   sidebar_component_depth number  0
   sidebar_sort_method     enum    unsorted
   sidebar_visible         boolean no
   sidebar_width           number  20

   For more details, and examples, about the $sidebar_format, see the
   SSiiddeebbaarr  IInnttrroo.

33.4. Functions

   Sidebar adds the following functions to NeoMutt. By default, none of
   them are bound to keys.

   _T_a_b_l_e_ _6_._2_4_._ _S_i_d_e_b_a_r_ _F_u_n_c_t_i_o_n_s
   Menus Function Description
   index,pager <sidebar-next> Move the highlight to next mailbox
   index,pager <sidebar-next-new> Move the highlight to next mailbox with
   new mail
   index,pager <sidebar-open> Open highlighted mailbox
   index,pager <sidebar-page-down> Scroll the Sidebar down 1 page
   index,pager <sidebar-page-up> Scroll the Sidebar up 1 page
   index,pager <sidebar-prev> Move the highlight to previous mailbox
   index,pager <sidebar-prev-new> Move the highlight to previous mailbox
   with new mail
   index,pager <sidebar-toggle-visible> Make the Sidebar (in)visible

33.5. Commands

   sidebar_whitelist _m_a_i_l_b_o_x [ _m_a_i_l_b_o_x ...]
   unsidebar_whitelist { _* | _m_a_i_l_b_o_x ... }

   This command specifies mailboxes that will always be displayed in the
   sidebar, even if $$ssiiddeebbaarr__nneeww__mmaaiill__oonnllyy is set and the mailbox does not
   contain new mail.

   The "unsidebar_whitelist" command is used to remove a mailbox from the
   list of whitelisted mailboxes. Use "unsidebar_whitelist *" to remove
   all mailboxes.

33.6. Colors

   _T_a_b_l_e_ _6_._2_5_._ _S_i_d_e_b_a_r_ _C_o_l_o_r_s
   Name Default Color Description
   sidebar_divider default The dividing line between the Sidebar and the
   Index/Pager panels
   sidebar_flagged default Mailboxes containing flagged mail
   sidebar_highlight underline Cursor to select a mailbox
   sidebar_indicator neomutt indicator The mailbox open in the Index panel
   sidebar_new default Mailboxes containing new mail
   sidebar_ordinary default Mailboxes that have no new/flagged mails, etc.
   sidebar_spoolfile default Mailbox that receives incoming mail

   If the sidebar_indicator color isn't set, then the default NeoMutt
   indicator color will be used (the color used in the index panel).

33.7. Sort

   _T_a_b_l_e_ _6_._2_6_._ _S_i_d_e_b_a_r_ _S_o_r_t
     Sort            Description
   alpha    Alphabetically by path
   count    Total number of messages
   flagged  Number of flagged messages
   name     Alphabetically by path
   new      Number of unread messages
   path     Alphabetically by path
   unread   Number of unread messages
   unsorted Order of the mailboxes command

33.8. neomuttrc

# Example NeoMutt config file for the sidebar feature.

# --------------------------------------------------------------------------
# VARIABLES - shown with their default values
# --------------------------------------------------------------------------
# Should the Sidebar be shown?
set sidebar_visible = no
# How wide should the Sidebar be in screen columns?

# Note: Some characters, e.g. Chinese, take up two columns each.
set sidebar_width = 20
# Should the mailbox paths be abbreviated?
set sidebar_short_path = no
# Number of top-level mailbox path subdirectories to truncate for display
set sidebar_component_depth = 0
# When abbreviating mailbox path names, use any of these characters as path
# separators. Only the part after the last separators will be shown.
# For file folders '/' is good. For IMAP folders, often '.' is useful.
set sidebar_delim_chars = '/.'
# If the mailbox path is abbreviated, should it be indented?
set sidebar_folder_indent = no
# Indent mailbox paths with this string.
set sidebar_indent_string = '  '
# Make the Sidebar only display mailboxes that contain new, or flagged,
# mail.
set sidebar_new_mail_only = no
# Any mailboxes that are whitelisted will always be visible, even if the
# sidebar_new_mail_only option is enabled.
sidebar_whitelist '/home/user/mailbox1'
sidebar_whitelist '/home/user/mailbox2'
# When searching for mailboxes containing new mail, should the search wrap
# around when it reaches the end of the list?
set sidebar_next_new_wrap = no
# Show the Sidebar on the right-hand side of the screen
set sidebar_on_right = no
# The character to use as the divider between the Sidebar and the other NeoMutt
# panels.
set sidebar_divider_char = '|'
# Enable extended buffy mode to calculate total, new, and flagged
# message counts for each mailbox.
set mail_check_stats
# Display the Sidebar mailboxes using this format string.
set sidebar_format = '%B%?F? [%F]?%* %?N?%N/?%S'
# Sort the mailboxes in the Sidebar using this method:
#       count    - total number of messages
#       flagged  - number of flagged messages
#       new      - number of new messages
#       path     - mailbox path
#       unsorted - do not sort the mailboxes
set sidebar_sort_method = 'unsorted'
# --------------------------------------------------------------------------
# FUNCTIONS - shown with an example mapping
# --------------------------------------------------------------------------
# Move the highlight to the previous mailbox
bind index,pager \Cp sidebar-prev
# Move the highlight to the next mailbox
bind index,pager \Cn sidebar-next
# Open the highlighted mailbox
bind index,pager \Co sidebar-open
# Move the highlight to the previous page
# This is useful if you have a LOT of mailboxes.
bind index,pager <F3> sidebar-page-up
# Move the highlight to the next page
# This is useful if you have a LOT of mailboxes.
bind index,pager <F4> sidebar-page-down
# Move the highlight to the previous mailbox containing new, or flagged,
# mail.
bind index,pager <F5> sidebar-prev-new
# Move the highlight to the next mailbox containing new, or flagged, mail.
bind index,pager <F6> sidebar-next-new
# Toggle the visibility of the Sidebar.
bind index,pager B sidebar-toggle-visible
# --------------------------------------------------------------------------
# COLORS - some unpleasant examples are given
# --------------------------------------------------------------------------
# Note: All color operations are of the form:
#       color OBJECT FOREGROUND BACKGROUND
# Color of the current, open, mailbox
# Note: This is a general NeoMutt option which colors all selected items.
color indicator cyan black
# Color of the highlighted, but not open, mailbox.
color sidebar_highlight black color8
# Color of the divider separating the Sidebar from NeoMutt panels
color sidebar_divider color8 black
# Color to give mailboxes containing flagged mail
color sidebar_flagged red black
# Color to give mailboxes containing new mail
color sidebar_new green black
# Color to give mailboxes containing no new/flagged mail, etc.
color sidebar_ordinary color245 default
# --------------------------------------------------------------------------

# vim: syntax=neomuttrc

33.9. See Also

     * RReegguullaarr  EExxpprreessssiioonnss
     * PPaatttteerrnnss
     * CCoolloorr  ccoommmmaanndd
     * nnoottmmuucchh  ffeeaattuurree

33.10. Known Bugs

   None

33.11. Credits

     * Justin Hibbits <jjrrhh2299@@ppoo..ccwwrruu..eedduu>
     * Thomer M. Gil <mmuutttt@@tthhoommeerr..ccoomm>
     * David Sterba <ddsstteerrbbaa@@ssuussee..cczz>
     * Evgeni Golov <eevvggeennii@@ddeebbiiaann..oorrgg>
     * Fabian Groffen <ggrroobbiiaann@@ggeennttoooo..oorrgg>
     * Jason DeTiberus <jjddeettiibbeerr@@rreeddhhaatt..ccoomm>
     * Stefan Assmann <ssaassssmmaannnn@@kkppaanniicc..ddee>
     * Steve Kemp <sstteevvee@@sstteevvee..oorrgg..uukk>
     * Terry Chan <ttcchhaann@@lluunnaarr--lliinnuuxx..oorrgg>
     * Tyler Earnest <ttyylleerree@@rrnnee..sstt>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

34. Skip Quoted Feature

Leave some context visible

34.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-28

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

34.2. Introduction

   When viewing an email, the <skip-to-quoted> function (by default the S
   key) will scroll past any email headers or quoted text. Sometimes, a
   little context is useful.

   By setting the $skip_quoted_offset variable, you can select how much of
   the quoted text is left visible.

34.3. Variables

   _T_a_b_l_e_ _6_._2_7_._ _S_k_i_p_-_Q_u_o_t_e_d_ _V_a_r_i_a_b_l_e_s
          Name         Type  Default
   skip_quoted_offset number 0

34.4. neomuttrc

# Example NeoMutt config file for the skip-quoted feature.

# The 'S' (skip-quoted) command scrolls the pager past the quoted text (usually
# indented with '> '. Setting 'skip_quoted_offset' leaves some lines of quoted
# text on screen for context.

# Show three quoted lines before the reply
set skip_quoted_offset = 3

# vim: syntax=neomuttrc

34.5. Known Bugs

   None

34.6. Credits

     * David Sterba <ddsstteerrbbaa@@ssuussee..cczz>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

35. Status Color Feature

Custom rules for theming the status bar

35.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_: None

35.2. Introduction

   The "status-color" feature allows you to theme different parts of the
   status bar (also when it's used by the index).

   Unlike normal color commands, color status can now take up to 2 extra
   parameters (regex, num).

35.3. Commands

   color status _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d [ _r_e_g_e_x [ _n_u_m ]]

   With zero parameters, NeoMutt will set the default color for the entire
   status bar.

   With one parameter, NeoMutt will only color the parts matching the
   regex.

   With two parameters, NeoMutt will only color the num'th sub-match of
   the regex.

35.4. Colors

   _T_a_b_l_e_ _6_._2_8_._ _S_t_a_t_u_s_ _C_o_l_o_r_s
    Name  Default Color Description
   status reverse       Status bar

35.5. neomuttrc

# Example NeoMutt config file for the status-color feature.

# The 'status-color' feature allows you to theme different parts of
# the status bar (also when it's used by the index).

# For the examples below, set some defaults
set status_format='-%r-NeoMutt: %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d?
Del:%d?%?F? \
  Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l? %l?]---(%s/%S)-%>-(%P)---'
set index_format='%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?) %s'
set sort=threads
set sort_aux=last-date-received
# 'status color' can take up to 2 extra parameters
# color status foreground background [ regex [ num ]]
# 0 extra parameters
# Set the default color for the entire status line
color status blue white
# 1 extra parameter
# Set the color for a matching pattern
# color status foreground background regex
# Highlight New, Deleted, or Flagged emails
color status brightred white '(New|Del|Flag):[0-9]+'
# Highlight mailbox ordering if it's different from the default
# First, highlight anything (*/*)
color status brightred default '\([^)]+/[^)]+\)'
# Then override the color for one specific case
color status default default '\(threads/last-date-received\)'
# 2 extra parameters
# Set the color for the nth submatch of a pattern
# color status foreground background regex num
# Highlight the contents of the []s but not the [] themselves
color status red default '\[([^]]+)\]' 1
# The '1' refers to the first regex submatch, which is the inner
# part in ()s
# Highlight the mailbox
color status brightwhite default 'NeoMutt: ([^ ]+)' 1
# Search for 'NeoMutt: ' but only highlight what comes after it

# vim: syntax=neomuttrc

35.6. See Also

     * CCoommppiillee--TTiimmee  FFeeaattuurreess
     * RReegguullaarr  EExxpprreessssiioonnss
     * PPaatttteerrnnss
     * iinnddeexx--ccoolloorr  ffeeaattuurree
     * CCoolloorr  ccoommmmaanndd

35.7. Known Bugs

   None

35.8. Credits

     * David Sterba <ddsstteerrbbaa@@ssuussee..cczz>
     * Thomas Glanzmann <tthhoommaass@@ggllaannzzmmaannnn..ddee>
     * Kirill A. Shutemov <kkiirriillll@@sshhuutteemmoovv..nnaammee>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

36. TLS-SNI Feature

Negotiate with a server for a TLS/SSL certificate

36.1. Support

   _S_i_n_c_e_: NeoMutt 2016-03-07

   _D_e_p_e_n_d_e_n_c_i_e_s_:
          OpenSSL

36.2. Introduction

   The "TLS-SNI" feature adds support for TLS virtual hosting. If your
   mail server doesn't support this everything will still work normally.

   TLS supports sending the expected server hostname during the handshake,
   via the SNI extension. This can be used to select a server certificate
   to issue to the client, permitting virtual-hosting without requiring
   multiple IP addresses.

   This has been tested against Exim 4.80, which optionally logs SNI and
   can perform vhosting.

   To verify TLS SNI support by a server, you can use:
openssl s_client -host <imap server> -port <port> -tls1 -servername <imap server
>

36.3. Known Bugs

   None

36.4. Credits

     * Jeremy Katz <kkaattzzjj@@lliinnuuxxppoowweerr..oorrgg>
     * Phil Pennock <mmuutttt--ddeevv@@ssppooddhhuuiiss..ddeemmoonn..nnll>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

37. Trash Folder Feature

Automatically move deleted emails to a trash bin

37.1. Support

   _S_i_n_c_e_: NeoMutt 2016-09-10, NeoMutt 1.7.0

   _D_e_p_e_n_d_e_n_c_i_e_s_:
          If IMAP is enabled, the trash folder will use it wisely

37.2. Introduction

   In NeoMutt, when you "delete" an email it is first marked deleted. The
   email isn't really gone until <<ssyynncc--mmaaiillbbooxx>> is called. This happens
   when the user leaves the folder, or the function is called manually.

   After <sync-mailbox> has been called the email is gone forever.

   The $$ttrraasshh variable defines a folder in which to keep old emails. As
   before, first you mark emails for deletion. When <sync-mailbox> is
   called the emails are moved to the trash folder.

   The $trash path can be either a full directory, or be relative to the
   $$ffoollddeerr variable, like the mailboxes command.

Note

   Emails deleted from the trash folder are gone forever.

37.3. Variables

   _T_a_b_l_e_ _6_._2_9_._ _T_r_a_s_h_ _V_a_r_i_a_b_l_e_s
   Name   Type  Default
   trash string (none)

37.4. Functions

   _T_a_b_l_e_ _6_._3_0_._ _T_r_a_s_h_ _F_u_n_c_t_i_o_n_s
   Menus Default Key Function Description
   index,pager (none) <purge-message> really delete the current entry,
   bypassing the trash folder

37.5. neomuttrc

# Example NeoMutt config file for the 'trash' feature.

# This feature defines a new 'trash' folder.

# When mail is deleted it will be moved to this folder.

# Folder in which to put deleted emails
set trash='+Trash'
set trash='/home/flatcap/Mail/Trash'
# The default delete key 'd' will move an email to the 'trash' folder
# Bind 'D' to REALLY delete an email
bind index D purge-message
# Note: Deleting emails from the 'trash' folder will REALLY delete them.

# vim: syntax=neomuttrc

37.6. See Also

     * ffoollddeerr--hhooookk

37.7. Known Bugs

   None

37.8. Credits

     * Cedric Duval <cceeddrriiccdduuvvaall@@ffrreeee..ffrr>
     * Benjamin Kuperman <kkuuppeerrmmaann@@aaccmm..oorrgg>
     * Paul Miller <ppaauull@@vvoollttaarr..oorrgg>
     * Richard Russon <rriicchh@@ffllaattccaapp..oorrgg>

Chapter 7. Security Considerations

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  PPaasssswwoorrddss
   22..  TTeemmppoorraarryy  FFiilleess
   33..  IInnffoorrmmaattiioonn  LLeeaakkss

        33..11..  MMeessssaaggee--IIdd::  hheeaaddeerrss
        33..22..  mmaaiillttoo::--ssttyyllee  LLiinnkkss

   44..  EExxtteerrnnaall  AApppplliiccaattiioonnss

   First of all, NeoMutt contains no security holes included by intention
   but may contain unknown security holes. As a consequence, please run
   NeoMutt only with as few permissions as possible. Especially, do not
   run NeoMutt as the super user.

   When configuring NeoMutt, there're some points to note about secure
   setups so please read this chapter carefully.

1. Passwords

   Although NeoMutt can be told the various passwords for accounts, please
   never store passwords in configuration files. Besides the fact that the
   system's operator can always read them, you could forget to mask it out
   when reporting a bug or asking for help via a mailing list. Even worse,
   your mail including your password could be archived by internet search
   engines, mail-to-news gateways etc. It may already be too late before
   you notice your mistake.

2. Temporary Files

   NeoMutt uses many temporary files for viewing messages, verifying
   digital signatures, etc. As long as being used, these files are visible
   by other users and maybe even readable in case of misconfiguration.
   Also, a different location for these files may be desired which can be
   changed via the $$ttmmppddiirr variable.

3. Information Leaks

3.1. Message-Id: headers

   Message-Id: headers contain a local part that is to be created in a
   unique fashion. In order to do so, NeoMutt will "leak" some information
   to the outside world when sending messages: the generation of this
   header includes a step counter which is increased (and rotated) with
   every message sent. In a longer running NeoMutt session, others can
   make assumptions about your mailing habits depending on the number of
   messages sent. If this is not desired, the header can be manually
   provided using $$eeddiitt__hheeaaddeerrss (though not recommended).

3.2. mailto:-style Links

   As NeoMutt be can be set up to be the mail client to handle mailto:
   style links in websites, there're security considerations, too.
   Arbitrary header fields can be embedded in these links which could
   override existing header fields or attach arbitrary files using tthhee
   AAttttaacchh::  ppsseeuuddoohheeaaddeerr. This may be problematic if the $$eeddiitt--hheeaaddeerrss
   variable is _u_n_s_e_t, i.e. the user doesn't want to see header fields
   while editing the message and doesn't pay enough attention to the
   compose menu's listing of attachments.

   For example, following a link like
mailto:joe@host?Attach=~/.gnupg/secring.gpg

   will send out the user's private gnupg keyring to joe@host if the user
   doesn't follow the information on screen carefully enough.

   To prevent these issues, NeoMutt by default only accepts the Subject
   and Body headers. Allowed headers can be adjusted with the mmaaiillttoo__aallllooww
   and uunnmmaaiillttoo__aallllooww commands.

4. External Applications

   NeoMutt in many places has to rely on external applications or for
   convenience supports mechanisms involving external applications.

   One of these is the mailcap mechanism as defined by RFC1524. Details
   about a secure use of the mailcap mechanisms is given in SSeeccttiioonn  33..22,,
   ""SSeeccuurree  UUssee  ooff  MMaaiillccaapp"".

   Besides the mailcap mechanism, NeoMutt uses a number of other external
   utilities for operation, for example to provide crypto support, in
   backtick expansion in configuration files or format string filters. The
   same security considerations apply for these as for tools involved via
   mailcap.

Chapter 8. Performance Tuning

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  RReeaaddiinngg  aanndd  WWrriittiinngg  MMaaiillbbooxxeess
   22..  RReeaaddiinngg  MMeessssaaggeess  ffrroomm  RReemmoottee  FFoollddeerrss
   33..  SSeeaarrcchhiinngg  aanndd  LLiimmiittiinngg

1. Reading and Writing Mailboxes

   NeoMutt's performance when reading mailboxes can be improved in two
   ways:
    1. For remote folders (IMAP and POP) as well as folders using
       one-file-per message storage (Maildir and MH), NeoMutt's
       performance can be greatly improved using hheeaaddeerr  ccaacchhiinngg. using a
       single database per folder.
    2. NeoMutt provides the $$rreeaadd__iinncc and $$wwrriittee__iinncc variables to specify
       at which rate to update progress counters. If these values are too
       low, NeoMutt may spend more time on updating the progress counter
       than it spends on actually reading/writing folders.
       For example, when opening a maildir folder with a few thousand
       messages, the default value for $$rreeaadd__iinncc may be too low. It can be
       tuned on on a folder-basis using ffoollddeerr--hhooookkss:
# use very high $read_inc to speed up reading hcache'd maildirs
folder-hook . 'set read_inc=1000'
# use lower value for reading slower remote IMAP folders
folder-hook ^imap 'set read_inc=100'
# use even lower value for reading even slower remote POP folders
folder-hook ^pop 'set read_inc=1'

   These settings work on a per-message basis. However, as messages may
   greatly differ in size and certain operations are much faster than
   others, even per-folder settings of the increment variables may not be
   desirable as they produce either too few or too much progress updates.
   Thus, NeoMutt allows to limit the number of progress updates per second
   it'll actually send to the terminal using the $$ttiimmee__iinncc variable.

2. Reading Messages from Remote Folders

   Reading messages from remote folders such as IMAP an POP can be slow
   especially for large mailboxes since NeoMutt only caches a very limited
   number of recently viewed messages (usually 10) per session (so that it
   will be gone for the next session.)

   To improve performance and permanently cache whole messages, please
   refer to NeoMutt's so-called bbooddyy  ccaacchhiinngg for details.

3. Searching and Limiting

   When searching mailboxes either via a search or a limit action, for
   some patterns NeoMutt distinguishes between regular expression and
   string searches. For regular expressions, patterns are prefixed with
   "~" and with "=" for string searches.

   Even though a regular expression search is fast, it's several times
   slower than a pure string search which is noticeable especially on
   large folders. As a consequence, a string search should be used instead
   of a regular expression search if the user already knows enough about
   the search pattern.

   For example, when limiting a large folder to all messages sent to or by
   an author, it's much faster to search for the initial part of an e-mail
   address via =Luser@ instead of ~Luser@. This is especially true for
   searching message bodies since a larger amount of input has to be
   searched.

   As for regular expressions, a lower case string search pattern makes
   NeoMutt perform a case-insensitive search except for IMAP (because for
   IMAP NeoMutt performs server-side searches which don't support
   case-insensitivity).

Chapter 9. Reference

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  CCoommmmaanndd--LLiinnee  OOppttiioonnss
   22..  CCoonnffiigguurraattiioonn  CCoommmmaannddss
   33..  CCoonnffiigguurraattiioonn  VVaarriiaabblleess

        33..11..  aabboorrtt__nnooaattttaacchh
        33..22..  aabboorrtt__nnooaattttaacchh__rreeggeexx
        33..33..  aabboorrtt__nnoossuubbjjeecctt
        33..44..  aabboorrtt__uunnmmooddiiffiieedd
        33..55..  aalliiaass__ffiillee
        33..66..  aalliiaass__ffoorrmmaatt
        33..77..  aallllooww__88bbiitt
        33..88..  aallllooww__aannssii
        33..99..  aarrrrooww__ccuurrssoorr
        33..1100..  aasscciiii__cchhaarrss
        33..1111..  aasskk__ffoollllooww__uupp
        33..1122..  aasskk__xx__ccoommmmeenntt__ttoo
        33..1133..  aasskkbbcccc
        33..1144..  aasskkcccc
        33..1155..  aassssuummeedd__cchhaarrsseett
        33..1166..  aattttaacchh__cchhaarrsseett
        33..1177..  aattttaacchh__ffoorrmmaatt
        33..1188..  aattttaacchh__sseepp
        33..1199..  aattttaacchh__sspplliitt
        33..2200..  aattttrriibbuuttiioonn
        33..2211..  aattttrriibbuuttiioonn__llooccaallee
        33..2222..  aauuttoo__ttaagg
        33..2233..  aauuttooeeddiitt
        33..2244..  bbeeeepp
        33..2255..  bbeeeepp__nneeww
        33..2266..  bboouunnccee
        33..2277..  bboouunnccee__ddeelliivveerreedd
        33..2288..  bbrraaiillllee__ffrriieennddllyy
        33..2299..  bbrroowwsseerr__aabbbbrreevviiaattee__mmaaiillbbooxxeess
        33..3300..  ccaattcchhuupp__nneewwssggrroouupp
        33..3311..  cceerrttiiffiiccaattee__ffiillee
        33..3322..  cchhaannggee__ffoollddeerr__nneexxtt
        33..3333..  cchhaarrsseett
        33..3344..  cchheecckk__mmbbooxx__ssiizzee
        33..3355..  cchheecckk__nneeww
        33..3366..  ccoollllaappssee__aallll
        33..3377..  ccoollllaappssee__ffllaaggggeedd
        33..3388..  ccoollllaappssee__uunnrreeaadd
        33..3399..  ccoommppoossee__ffoorrmmaatt
        33..4400..  ccoonnffiigg__cchhaarrsseett
        33..4411..  ccoonnffiirrmmaappppeenndd
        33..4422..  ccoonnffiirrmmccrreeaattee
        33..4433..  ccoonnnneecctt__ttiimmeeoouutt
        33..4444..  ccoonntteenntt__ttyyppee
        33..4455..  ccooppyy
        33..4466..  ccrryypptt__aauuttooeennccrryypptt
        33..4477..  ccrryypptt__aauuttooppggpp
        33..4488..  ccrryypptt__aauuttoossiiggnn
        33..4499..  ccrryypptt__aauuttoossmmiimmee
        33..5500..  ccrryypptt__ccoonnffiirrmmhhooookk
        33..5511..  ccrryypptt__ooppppoorrttuunniissttiicc__eennccrryypptt
        33..5522..  ccrryypptt__rreeppllyyeennccrryypptt
        33..5533..  ccrryypptt__rreeppllyyssiiggnn
        33..5544..  ccrryypptt__rreeppllyyssiiggnneennccrryypptteedd
        33..5555..  ccrryypptt__ttiimmeessttaammpp
        33..5566..  ccrryypptt__uussee__ggppggmmee
        33..5577..  ccrryypptt__uussee__ppkkaa
        33..5588..  ccrryypptt__vveerriiffyy__ssiigg
        33..5599..  ddaattee__ffoorrmmaatt
        33..6600..  ddeebbuugg__ffiillee
        33..6611..  ddeebbuugg__lleevveell
        33..6622..  ddeeffaauulltt__hhooookk
        33..6633..  ddeelleettee
        33..6644..  ddeelleettee__uunnttaagg
        33..6655..  ddiiggeesstt__ccoollllaappssee
        33..6666..  ddiissppllaayy__ffiilltteerr
        33..6677..  ddssnn__nnoottiiffyy
        33..6688..  ddssnn__rreettuurrnn
        33..6699..  dduupplliiccaattee__tthhrreeaaddss
        33..7700..  eeddiitt__hheeaaddeerrss
        33..7711..  eeddiittoorr
        33..7722..  eemmppttyy__ssuubbjjeecctt
        33..7733..  eennccooddee__ffrroomm
        33..7744..  eennttrrooppyy__ffiillee
        33..7755..  eennvveellooppee__ffrroomm__aaddddrreessss
        33..7766..  eessccaappee
        33..7777..  ffaasstt__rreeppllyy
        33..7788..  ffcccc__aattttaacchh
        33..7799..  ffcccc__cclleeaarr
        33..8800..  ffllaagg__cchhaarrss
        33..8811..  ffllaagg__ssaaffee
        33..8822..  ffoollddeerr
        33..8833..  ffoollddeerr__ffoorrmmaatt
        33..8844..  ffoolllloowwuupp__ttoo
        33..8855..  ffoolllloowwuupp__ttoo__ppoosstteerr
        33..8866..  ffoorrccee__nnaammee
        33..8877..  ffoorrwwaarrdd__aattttrriibbuuttiioonn__iinnttrroo
        33..8888..  ffoorrwwaarrdd__aattttrriibbuuttiioonn__ttrraaiilleerr
        33..8899..  ffoorrwwaarrdd__ddeeccooddee
        33..9900..  ffoorrwwaarrdd__ddeeccrryypptt
        33..9911..  ffoorrwwaarrdd__eeddiitt
        33..9922..  ffoorrwwaarrdd__ffoorrmmaatt
        33..9933..  ffoorrwwaarrdd__qquuoottee
        33..9944..  ffoorrwwaarrdd__rreeffeerreenncceess
        33..9955..  ffrroomm
        33..9966..  ffrroomm__cchhaarrss
        33..9977..  ggeeccooss__mmaasskk
        33..9988..  ggrroouupp__iinnddeexx__ffoorrmmaatt
        33..9999..  hhddrrss
        33..110000..  hheeaaddeerr
        33..110011..  hheeaaddeerr__ccaacchhee
        33..110022..  hheeaaddeerr__ccaacchhee__bbaacckkeenndd
        33..110033..  hheeaaddeerr__ccaacchhee__ccoommpprreessss
        33..110044..  hheeaaddeerr__ccaacchhee__ppaaggeessiizzee
        33..110055..  hheeaaddeerr__ccoolloorr__ppaarrttiiaall
        33..110066..  hheellpp
        33..110077..  hhiiddddeenn__hhoosstt
        33..110088..  hhiiddddeenn__ttaaggss
        33..110099..  hhiiddee__lliimmiitteedd
        33..111100..  hhiiddee__mmiissssiinngg
        33..111111..  hhiiddee__tthhrreeaadd__ssuubbjjeecctt
        33..111122..  hhiiddee__ttoopp__lliimmiitteedd
        33..111133..  hhiiddee__ttoopp__mmiissssiinngg
        33..111144..  hhiissttoorryy
        33..111155..  hhiissttoorryy__ffiillee
        33..111166..  hhiissttoorryy__rreemmoovvee__dduuppss
        33..111177..  hhoonnoorr__ddiissppoossiittiioonn
        33..111188..  hhoonnoorr__ffoolllloowwuupp__ttoo
        33..111199..  hhoossttnnaammee
        33..112200..  iiddnn__ddeeccooddee
        33..112211..  iiddnn__eennccooddee
        33..112222..  iiggnnoorree__lliisstt__rreeppllyy__ttoo
        33..112233..  iimmaapp__aauutthheennttiiccaattoorrss
        33..112244..  iimmaapp__cchheecckk__ssuubbssccrriibbeedd
        33..112255..  iimmaapp__ddeelliimm__cchhaarrss
        33..112266..  iimmaapp__hheeaaddeerrss
        33..112277..  iimmaapp__iiddllee
        33..112288..  iimmaapp__kkeeeeppaalliivvee
        33..112299..  iimmaapp__lliisstt__ssuubbssccrriibbeedd
        33..113300..  iimmaapp__llooggiinn
        33..113311..  iimmaapp__ppaassss
        33..113322..  iimmaapp__ppaassssiivvee
        33..113333..  iimmaapp__ppeeeekk
        33..113344..  iimmaapp__ppiippeelliinnee__ddeepptthh
        33..113355..  iimmaapp__ppoollll__ttiimmeeoouutt
        33..113366..  iimmaapp__sseerrvveerrnnooiissee
        33..113377..  iimmaapp__uusseerr
        33..113388..  iimmpplliicciitt__aauuttoovviieeww
        33..113399..  iinncclluuddee
        33..114400..  iinncclluuddee__oonnllyyffiirrsstt
        33..114411..  iinnddeenntt__ssttrriinngg
        33..114422..  iinnddeexx__ffoorrmmaatt
        33..114433..  iinneewwss
        33..114444..  iissppeellll
        33..114455..  kkeeeepp__ffllaaggggeedd
        33..114466..  mmaaiill__cchheecckk
        33..114477..  mmaaiill__cchheecckk__rreecceenntt
        33..114488..  mmaaiill__cchheecckk__ssttaattss
        33..114499..  mmaaiill__cchheecckk__ssttaattss__iinntteerrvvaall
        33..115500..  mmaaiillccaapp__ppaatthh
        33..115511..  mmaaiillccaapp__ssaanniittiizzee
        33..115522..  mmaaiillddiirr__cchheecckk__ccuurr
        33..115533..  mmaaiillddiirr__hheeaaddeerr__ccaacchhee__vveerriiffyy
        33..115544..  mmaaiillddiirr__ttrraasshh
        33..115555..  mmaarrkk__mmaaccrroo__pprreeffiixx
        33..115566..  mmaarrkk__oolldd
        33..115577..  mmaarrkkeerrss
        33..115588..  mmaasskk
        33..115599..  mmbbooxx
        33..116600..  mmbbooxx__ttyyppee
        33..116611..  mmeennuu__ccoonntteexxtt
        33..116622..  mmeennuu__mmoovvee__ooffff
        33..116633..  mmeennuu__ssccrroollll
        33..116644..  mmeessssaaggee__ccaacchhee__cclleeaann
        33..116655..  mmeessssaaggee__ccaacchheeddiirr
        33..116666..  mmeessssaaggee__ffoorrmmaatt
        33..116677..  mmeettaa__kkeeyy
        33..116688..  mmeettoooo
        33..116699..  mmhh__ppuurrggee
        33..117700..  mmhh__sseeqq__ffllaaggggeedd
        33..117711..  mmhh__sseeqq__rreepplliieedd
        33..117722..  mmhh__sseeqq__uunnsseeeenn
        33..117733..  mmiimmee__ffoorrwwaarrdd
        33..117744..  mmiimmee__ffoorrwwaarrdd__ddeeccooddee
        33..117755..  mmiimmee__ffoorrwwaarrdd__rreesstt
        33..117766..  mmiimmee__ssuubbjjeecctt
        33..117777..  mmiimmee__ttyyppee__qquueerryy__ccoommmmaanndd
        33..117788..  mmiimmee__ttyyppee__qquueerryy__ffiirrsstt
        33..117799..  mmoovvee
        33..118800..  nnaarrrrooww__ttrreeee
        33..118811..  nneett__iinncc
        33..118822..  nneeww__mmaaiill__ccoommmmaanndd
        33..118833..  nneewwss__ccaacchhee__ddiirr
        33..118844..  nneewwss__sseerrvveerr
        33..118855..  nneewwssggrroouuppss__cchhaarrsseett
        33..118866..  nneewwssrrcc
        33..118877..  nnmm__ddbb__lliimmiitt
        33..118888..  nnmm__ddeeffaauulltt__uurrii
        33..118899..  nnmm__eexxcclluuddee__ttaaggss
        33..119900..  nnmm__ooppeenn__ttiimmeeoouutt
        33..119911..  nnmm__qquueerryy__ttyyppee
        33..119922..  nnmm__qquueerryy__wwiinnddooww__ccuurrrreenntt__ppoossiittiioonn
        33..119933..  nnmm__qquueerryy__wwiinnddooww__ccuurrrreenntt__sseeaarrcchh
        33..119944..  nnmm__qquueerryy__wwiinnddooww__dduurraattiioonn
        33..119955..  nnmm__qquueerryy__wwiinnddooww__ttiimmeebbaassee
        33..119966..  nnmm__rreeccoorrdd
        33..119977..  nnmm__rreeccoorrdd__ttaaggss
        33..119988..  nnmm__uunnrreeaadd__ttaagg
        33..119999..  nnnnttpp__aauutthheennttiiccaattoorrss
        33..220000..  nnnnttpp__ccoonntteexxtt
        33..220011..  nnnnttpp__lliissttggrroouupp
        33..220022..  nnnnttpp__llooaadd__ddeessccrriippttiioonn
        33..220033..  nnnnttpp__ppaassss
        33..220044..  nnnnttpp__ppoollll
        33..220055..  nnnnttpp__uusseerr
        33..220066..  ppaaggeerr
        33..220077..  ppaaggeerr__ccoonntteexxtt
        33..220088..  ppaaggeerr__ffoorrmmaatt
        33..220099..  ppaaggeerr__iinnddeexx__lliinneess
        33..221100..  ppaaggeerr__ssttoopp
        33..221111..  ppggpp__aauuttoo__ddeeccooddee
        33..221122..  ppggpp__aauuttooiinnlliinnee
        33..221133..  ppggpp__cchheecckk__eexxiitt
        33..221144..  ppggpp__cchheecckk__ggppgg__ddeeccrryypptt__ssttaattuuss__ffdd
        33..221155..  ppggpp__cclleeaarrssiiggnn__ccoommmmaanndd
        33..221166..  ppggpp__ddeeccooddee__ccoommmmaanndd
        33..221177..  ppggpp__ddeeccrryypptt__ccoommmmaanndd
        33..221188..  ppggpp__ddeeccrryyppttiioonn__ookkaayy
        33..221199..  ppggpp__ddeeffaauulltt__kkeeyy
        33..222200..  ppggpp__eennccrryypptt__oonnllyy__ccoommmmaanndd
        33..222211..  ppggpp__eennccrryypptt__ssiiggnn__ccoommmmaanndd
        33..222222..  ppggpp__eennttrryy__ffoorrmmaatt
        33..222233..  ppggpp__eexxppoorrtt__ccoommmmaanndd
        33..222244..  ppggpp__ggeettkkeeyyss__ccoommmmaanndd
        33..222255..  ppggpp__ggoooodd__ssiiggnn
        33..222266..  ppggpp__iiggnnoorree__ssuubbkkeeyyss
        33..222277..  ppggpp__iimmppoorrtt__ccoommmmaanndd
        33..222288..  ppggpp__lliisstt__ppuubbrriinngg__ccoommmmaanndd
        33..222299..  ppggpp__lliisstt__sseeccrriinngg__ccoommmmaanndd
        33..223300..  ppggpp__lloonngg__iiddss
        33..223311..  ppggpp__mmiimmee__aauuttoo
        33..223322..  ppggpp__rreeppllyyiinnlliinnee
        33..223333..  ppggpp__rreettaaiinnaabbllee__ssiiggss
        33..223344..  ppggpp__sseellff__eennccrryypptt
        33..223355..  ppggpp__sshhooww__uunnuussaabbllee
        33..223366..  ppggpp__ssiiggnn__aass
        33..223377..  ppggpp__ssiiggnn__ccoommmmaanndd
        33..223388..  ppggpp__ssoorrtt__kkeeyyss
        33..223399..  ppggpp__ssttrriicctt__eenncc
        33..224400..  ppggpp__ttiimmeeoouutt
        33..224411..  ppggpp__uussee__ggppgg__aaggeenntt
        33..224422..  ppggpp__vveerriiffyy__ccoommmmaanndd
        33..224433..  ppggpp__vveerriiffyy__kkeeyy__ccoommmmaanndd
        33..224444..  ppiippee__ddeeccooddee
        33..224455..  ppiippee__sseepp
        33..224466..  ppiippee__sspplliitt
        33..224477..  ppoopp__aauutthh__ttrryy__aallll
        33..224488..  ppoopp__aauutthheennttiiccaattoorrss
        33..224499..  ppoopp__cchheecckkiinntteerrvvaall
        33..225500..  ppoopp__ddeelleettee
        33..225511..  ppoopp__hhoosstt
        33..225522..  ppoopp__llaasstt
        33..225533..  ppoopp__ppaassss
        33..225544..  ppoopp__rreeccoonnnneecctt
        33..225555..  ppoopp__uusseerr
        33..225566..  ppoosstt__iinnddeenntt__ssttrriinngg
        33..225577..  ppoosstt__mmooddeerraatteedd
        33..225588..  ppoossttppoonnee
        33..225599..  ppoossttppoonnee__eennccrryypptt
        33..226600..  ppoossttppoonnee__eennccrryypptt__aass
        33..226611..  ppoossttppoonneedd
        33..226622..  pprreeccoonnnneecctt
        33..226633..  pprreeffeerrrreedd__llaanngguuaaggeess
        33..226644..  pprriinntt
        33..226655..  pprriinntt__ccoommmmaanndd
        33..226666..  pprriinntt__ddeeccooddee
        33..226677..  pprriinntt__sspplliitt
        33..226688..  pprroommpptt__aafftteerr
        33..226699..  qquueerryy__ccoommmmaanndd
        33..227700..  qquueerryy__ffoorrmmaatt
        33..227711..  qquuiitt
        33..227722..  qquuoottee__rreeggeexx
        33..227733..  rreeaadd__iinncc
        33..227744..  rreeaadd__oonnllyy
        33..227755..  rreeaallnnaammee
        33..227766..  rreeccaallll
        33..227777..  rreeccoorrdd
        33..227788..  rreeffllooww__ssppaaccee__qquuootteess
        33..227799..  rreeffllooww__tteexxtt
        33..228800..  rreeffllooww__wwrraapp
        33..228811..  rreeppllyy__rreeggeexx
        33..228822..  rreeppllyy__sseellff
        33..228833..  rreeppllyy__ttoo
        33..228844..  rreeppllyy__wwiitthh__xxoorriigg
        33..228855..  rreessoollvvee
        33..228866..  rreessuummee__ddrraafftt__ffiilleess
        33..228877..  rreessuummee__eeddiitteedd__ddrraafftt__ffiilleess
        33..228888..  rreevveerrssee__aalliiaass
        33..228899..  rreevveerrssee__nnaammee
        33..229900..  rreevveerrssee__rreeaallnnaammee
        33..229911..  rrffcc22004477__ppaarraammeetteerrss
        33..229922..  ssaavvee__aaddddrreessss
        33..229933..  ssaavvee__eemmppttyy
        33..229944..  ssaavvee__hhiissttoorryy
        33..229955..  ssaavvee__nnaammee
        33..229966..  ssaavvee__uunnssuubbssccrriibbeedd
        33..229977..  ssccoorree
        33..229988..  ssccoorree__tthhrreesshhoolldd__ddeelleettee
        33..229999..  ssccoorree__tthhrreesshhoolldd__ffllaagg
        33..330000..  ssccoorree__tthhrreesshhoolldd__rreeaadd
        33..330011..  sseeaarrcchh__ccoonntteexxtt
        33..330022..  sseenndd__cchhaarrsseett
        33..330033..  sseennddmmaaiill
        33..330044..  sseennddmmaaiill__wwaaiitt
        33..330055..  sshheellll
        33..330066..  sshhooww__mmuullttiippaarrtt__aalltteerrnnaattiivvee
        33..330077..  sshhooww__nneeww__nneewwss
        33..330088..  sshhooww__oonnllyy__uunnrreeaadd
        33..330099..  ssiiddeebbaarr__ccoommppoonneenntt__ddeepptthh
        33..331100..  ssiiddeebbaarr__ddeelliimm__cchhaarrss
        33..331111..  ssiiddeebbaarr__ddiivviiddeerr__cchhaarr
        33..331122..  ssiiddeebbaarr__ffoollddeerr__iinnddeenntt
        33..331133..  ssiiddeebbaarr__ffoorrmmaatt
        33..331144..  ssiiddeebbaarr__iinnddeenntt__ssttrriinngg
        33..331155..  ssiiddeebbaarr__nneeww__mmaaiill__oonnllyy
        33..331166..  ssiiddeebbaarr__nneexxtt__nneeww__wwrraapp
        33..331177..  ssiiddeebbaarr__oonn__rriigghhtt
        33..331188..  ssiiddeebbaarr__sshhoorrtt__ppaatthh
        33..331199..  ssiiddeebbaarr__ssoorrtt__mmeetthhoodd
        33..332200..  ssiiddeebbaarr__vviissiibbllee
        33..332211..  ssiiddeebbaarr__wwiiddtthh
        33..332222..  ssiigg__ddaasshheess
        33..332233..  ssiigg__oonn__ttoopp
        33..332244..  ssiiggnnaattuurree
        33..332255..  ssiimmppllee__sseeaarrcchh
        33..332266..  sskkiipp__qquuootteedd__ooffffsseett
        33..332277..  sslleeeepp__ttiimmee
        33..332288..  ssmmaarrtt__wwrraapp
        33..332299..  ssmmiilleeyyss
        33..333300..  ssmmiimmee__aasskk__cceerrtt__llaabbeell
        33..333311..  ssmmiimmee__ccaa__llooccaattiioonn
        33..333322..  ssmmiimmee__cceerrttiiffiiccaatteess
        33..333333..  ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd
        33..333344..  ssmmiimmee__ddeeccrryypptt__uussee__ddeeffaauulltt__kkeeyy
        33..333355..  ssmmiimmee__ddeeffaauulltt__kkeeyy
        33..333366..  ssmmiimmee__eennccrryypptt__ccoommmmaanndd
        33..333377..  ssmmiimmee__eennccrryypptt__wwiitthh
        33..333388..  ssmmiimmee__ggeett__cceerrtt__ccoommmmaanndd
        33..333399..  ssmmiimmee__ggeett__cceerrtt__eemmaaiill__ccoommmmaanndd
        33..334400..  ssmmiimmee__ggeett__ssiiggnneerr__cceerrtt__ccoommmmaanndd
        33..334411..  ssmmiimmee__iimmppoorrtt__cceerrtt__ccoommmmaanndd
        33..334422..  ssmmiimmee__iiss__ddeeffaauulltt
        33..334433..  ssmmiimmee__kkeeyyss
        33..334444..  ssmmiimmee__ppkk77oouutt__ccoommmmaanndd
        33..334455..  ssmmiimmee__sseellff__eennccrryypptt
        33..334466..  ssmmiimmee__ssiiggnn__aass
        33..334477..  ssmmiimmee__ssiiggnn__ccoommmmaanndd
        33..334488..  ssmmiimmee__ssiiggnn__ddiiggeesstt__aallgg
        33..334499..  ssmmiimmee__ttiimmeeoouutt
        33..335500..  ssmmiimmee__vveerriiffyy__ccoommmmaanndd
        33..335511..  ssmmiimmee__vveerriiffyy__ooppaaqquuee__ccoommmmaanndd
        33..335522..  ssmmttpp__aauutthheennttiiccaattoorrss
        33..335533..  ssmmttpp__ppaassss
        33..335544..  ssmmttpp__uurrll
        33..335555..  ssoorrtt
        33..335566..  ssoorrtt__aalliiaass
        33..335577..  ssoorrtt__aauuxx
        33..335588..  ssoorrtt__bbrroowwsseerr
        33..335599..  ssoorrtt__rree
        33..336600..  ssppaamm__sseeppaarraattoorr
        33..336611..  ssppoooollffiillee
        33..336622..  ssssll__cciipphheerrss
        33..336633..  ssssll__cclliieenntt__cceerrtt
        33..336644..  ssssll__ffoorrccee__ttllss
        33..336655..  ssssll__ssttaarrttttllss
        33..336666..  ssssll__uussee__ssssllvv22
        33..336677..  ssssll__uussee__ssssllvv33
        33..336688..  ssssll__uussee__ttllssvv11
        33..336699..  ssssll__uussee__ttllssvv11__11
        33..337700..  ssssll__uussee__ttllssvv11__22
        33..337711..  ssssll__uusseessyysstteemmcceerrttss
        33..337722..  ssssll__vveerriiffyy__ddaatteess
        33..337733..  ssssll__vveerriiffyy__hhoosstt
        33..337744..  ssssll__vveerriiffyy__ppaarrttiiaall__cchhaaiinnss
        33..337755..  ssttaattuuss__cchhaarrss
        33..337766..  ssttaattuuss__ffoorrmmaatt
        33..337777..  ssttaattuuss__oonn__ttoopp
        33..337788..  ssttrriicctt__tthhrreeaaddss
        33..337799..  ssuussppeenndd
        33..338800..  tteexxtt__fflloowweedd
        33..338811..  tthhoorroouugghh__sseeaarrcchh
        33..338822..  tthhrreeaadd__rreecceeiivveedd
        33..338833..  ttiillddee
        33..338844..  ttiimmee__iinncc
        33..338855..  ttiimmeeoouutt
        33..338866..  ttmmppddiirr
        33..338877..  ttoo__cchhaarrss
        33..338888..  ttrraasshh
        33..338899..  ttss__eennaabblleedd
        33..339900..  ttss__iiccoonn__ffoorrmmaatt
        33..339911..  ttss__ssttaattuuss__ffoorrmmaatt
        33..339922..  ttuunnnneell
        33..339933..  uunnccoollllaappssee__jjuummpp
        33..339944..  uunnccoollllaappssee__nneeww
        33..339955..  uussee__88bbiittmmiimmee
        33..339966..  uussee__ddoommaaiinn
        33..339977..  uussee__eennvveellooppee__ffrroomm
        33..339988..  uussee__ffrroomm
        33..339999..  uussee__iippvv66
        33..440000..  uusseerr__aaggeenntt
        33..440011..  vvffoollddeerr__ffoorrmmaatt
        33..440022..  vviirrttuuaall__ssppoooollffiillee
        33..440033..  vviissuuaall
        33..440044..  wwaaiitt__kkeeyy
        33..440055..  wweeeedd
        33..440066..  wwrraapp
        33..440077..  wwrraapp__hheeaaddeerrss
        33..440088..  wwrraapp__sseeaarrcchh
        33..440099..  wwrriittee__bbcccc
        33..441100..  wwrriittee__iinncc
        33..441111..  xx__ccoommmmeenntt__ttoo

   44..  FFuunnccttiioonnss

        44..11..  GGeenneerriicc  MMeennuu
        44..22..  IInnddeexx  MMeennuu
        44..33..  PPaaggeerr  MMeennuu
        44..44..  AAlliiaass  MMeennuu
        44..55..  QQuueerryy  MMeennuu
        44..66..  AAttttaacchhmmeenntt  MMeennuu
        44..77..  CCoommppoossee  MMeennuu
        44..88..  PPoossttppoonnee  MMeennuu
        44..99..  BBrroowwsseerr  MMeennuu
        44..1100..  PPggpp  MMeennuu
        44..1111..  SSmmiimmee  MMeennuu
        44..1122..  EEddiittoorr  MMeennuu

1. Command-Line Options

   Running neomutt with no arguments will make NeoMutt attempt to read
   your spool mailbox. However, it is possible to read other mailboxes and
   to send messages from the command line as well.

   _T_a_b_l_e_ _9_._1_._ _C_o_m_m_a_n_d_ _l_i_n_e_ _o_p_t_i_o_n_s
   Option Description
   -- Special argument forces NeoMutt to stop option parsing and treat
   remaining arguments as addresses even if they start with a dash
   -A alias Print an expanded version of the given alias to stdout and
   exit
   -a file Attach one or more files to a message (must be the last
   option). Add any addresses after the '_-_-' argument, e.g.:
neomutt -a image.jpg -- address1
neomutt -a image.jpg *.png -- address1 address2

   -B Run in batch mode (do not start the ncurses UI)
   -b address Specify a blind carbon copy (Bcc) recipient
   -c address Specify a carbon copy (Cc) recipient
   -D Dump all config variables as '_n_a_m_e_=_v_a_l_u_e' pairs to stdout
   -D -S Like _-_D, but hide the value of sensitive variables
   -d level Log debugging output to a file (default is
   "~/.neomuttdebug0"). The level can range from 1-5 and affects verbosity
   (a value of 2 is recommended). Using this option along with _-_l is
   useful to log the early startup process (before reading any
   configuration and hence $$ddeebbuugg__lleevveell and $$ddeebbuugg__ffiillee)
   -E Edit draft (_-_H) or include (_-_i) file during message composition
   -e command Specify a command to be run after reading the config files
   -F config Specify an alternative initialization file to read, see
   section LLooccaattiioonn  ooff  IInniittiiaalliizzaattiioonn  FFiilleess for a list of regular
   configuration files
   -f mailbox Specify a mailbox (as defined with mmaaiillbbooxxeess  ccoommmmaanndd) to
   load
   -G Start NeoMutt with a listing of subscribed newsgroups
   -g server Like _-_G, but start at specified news server
   -H draft Specify a draft file with header and body for message
   composing
   -h Print this help message and exit
   -i include Specify an include file to be embedded in the body of a
   message
   -l file Specify a file for debugging output (default
   "~/.neomuttdebug0"). This overrules $$ddeebbuugg__ffiillee setting and NeoMutt
   keeps up to five debug logs ({ file | $$ddeebbuugg__ffiillee | ~/.neomuttdebug
   }[0-4]) before override the oldest file
   -m type Specify a default mailbox format type for newly created
   folders. The type is either MH, MMDF, Maildir or mbox
   (case-insensitive)
   -n Do not read the system-wide configuration file
   -p Resume a prior postponed message, if any
   -Q variable Query a configuration variable and print its value to
   stdout (after the config has been read and any commands executed)
   -R Open mailbox in read-only mode
   -s subject Specify a subject (must be enclosed in quotes if it has
   spaces)
   -v Print the NeoMutt version and compile-time definitions and exit
   -vv Print the NeoMutt license and copyright information and exit
   -x Simulate the _m_a_i_l_x(1) send mode
   -y Start NeoMutt with a listing of all defined mailboxes
   -Z Open the first mailbox with new message or exit immediately with
   exit code 1 if none is found in all defined mailboxes
   -z Open the first or specified (_-_f) mailbox if it holds any message or
   exit immediately with exit code 1 otherwise

   To read messages in a mailbox or exit immediately

   neomutt [ -nz ] [ -F _c_o_n_f_i_g ] [ -m _t_y_p_e ] [ -f _m_a_i_l_b_o_x ]

   To compose a new message

   neomutt [ -Enx ] [ -F _c_o_n_f_i_g ] [ -b _a_d_d_r_e_s_s ] [ -c _a_d_d_r_e_s_s ] [ -H _d_r_a_f_t
   ] [ -i _i_n_c_l_u_d_e ] [ -s _s_u_b_j_e_c_t ] [ -a _f_i_l_e [...] -- ] { _a_d_d_r_e_s_s |
   _m_a_i_l_t_o___u_r_l ...}

   NeoMutt also supports a "batch" mode to send prepared messages. Simply
   redirect input from the file you wish to send. For example,
neomutt -s "data set for run #2" professor@bigschool.edu < ~/run2.dat

   will send a message to <professor@bigschool.edu> with a subject of
   "data set for run #2". In the body of the message will be the contents
   of the file "~/run2.dat".

   An include file passed with -i will be used as the body of the message.
   When combined with -E, the include file will be directly edited during
   message composition. The file will be modified regardless of whether
   the message is sent or aborted.

   A draft file passed with -H will be used as the initial header and body
   for the message. Multipart messages can be used as a draft file. When
   combined with -E, the draft file will be updated to the final state of
   the message after composition, regardless of whether the message is
   sent, aborted, or even postponed. Note that if the message is sent
   encrypted or signed, the draft file will be saved that way too.

   All files passed with -a _f_i_l_e will be attached as a MIME part to the
   message. To attach a single or several files, use -- to separate files
   and recipient addresses:
neomutt -a image.png -- some@one.org

   or
neomutt -a *.png -- some@one.org

Note

   The -a option must be last in the option list.

   In addition to accepting a list of email addresses, NeoMutt also
   accepts a URL with the mailto: schema as specified in RFC2368. This is
   useful when configuring a web browser to launch NeoMutt when clicking
   on mailto links.
neomutt mailto:some@one.org?subject=test&cc=other@one.org

2. Configuration Commands

   The following are the commands understood by NeoMutt:
     * aaccccoouunntt--hhooookk _r_e_g_e_x _c_o_m_m_a_n_d
     * aalliiaass [ -group _n_a_m_e ...] _k_e_y _a_d_d_r_e_s_s [ _,_ _a_d_d_r_e_s_s ...]
       uunnaalliiaass [ -group _n_a_m_e ...] { _* | _k_e_y ... }
     * aalltteerrnnaatteess [ -group _n_a_m_e ...] _r_e_g_e_x [ _r_e_g_e_x ...]
       uunnaalltteerrnnaatteess [ -group _n_a_m_e ...] { _* | _r_e_g_e_x ... }
     * aalltteerrnnaattiivvee__oorrddeerr _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] [ _m_i_m_e_-_t_y_p_e [
       _/_m_i_m_e_-_s_u_b_t_y_p_e ] ...]
       uunnaalltteerrnnaattiivvee__oorrddeerr { * | [ _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] ...]}
     * aattttaacchhmmeennttss { + | - } _d_i_s_p_o_s_i_t_i_o_n _m_i_m_e_-_t_y_p_e
       uunnaattttaacchhmmeennttss { + | - } _d_i_s_p_o_s_i_t_i_o_n _m_i_m_e_-_t_y_p_e
     * aauuttoo__vviieeww _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] [ _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ]
       ...]
       uunnaauuttoo__vviieeww { * | [ _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] ...]}
     * bbiinndd _m_a_p [ _,_m_a_p ...] _k_e_y _f_u_n_c_t_i_o_n
     * cchhaarrsseett--hhooookk _a_l_i_a_s _c_h_a_r_s_e_t
       iiccoonnvv--hhooookk _c_h_a_r_s_e_t _l_o_c_a_l_-_c_h_a_r_s_e_t
     * ccoolloorr _o_b_j_e_c_t _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d
       ccoolloorr { header | body } _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d _r_e_g_e_x
       ccoolloorr index _f_o_r_e_g_r_o_u_n_d _b_a_c_k_g_r_o_u_n_d _p_a_t_t_e_r_n
       uunnccoolloorr { index | header | body } { _* | _p_a_t_t_e_r_n ... }
     * ccrryypptt--hhooookk _r_e_g_e_x _k_e_y_i_d
     * eexxeecc _f_u_n_c_t_i_o_n [ _f_u_n_c_t_i_o_n ...]
     * ffcccc--ssaavvee--hhooookk _p_a_t_t_e_r_n _m_a_i_l_b_o_x
       ffcccc--hhooookk _p_a_t_t_e_r_n _m_a_i_l_b_o_x
       ssaavvee--hhooookk _p_a_t_t_e_r_n _m_a_i_l_b_o_x
     * ffoollddeerr--hhooookk _r_e_g_e_x _c_o_m_m_a_n_d
     * ggrroouupp [ -group _n_a_m_e ...] { -rx _e_x_p_r ... | -addr _e_x_p_r ... }
       uunnggrroouupp [ -group _n_a_m_e ...] { _* | -rx _e_x_p_r ... | -addr _e_x_p_r ... }
     * hhddrr__oorrddeerr _h_e_a_d_e_r [ _h_e_a_d_e_r ...]
       uunnhhddrr__oorrddeerr { _* | _h_e_a_d_e_r ... }
     * iiffddeeff _s_y_m_b_o_l _"_c_o_n_f_i_g_-_c_o_m_m_a_n_d_ _[_a_r_g_s_._._._]_"
       iiffnnddeeff _s_y_m_b_o_l _"_c_o_n_f_i_g_-_c_o_m_m_a_n_d_ _[_a_r_g_s_._._._]_"
       ffiinniisshh
     * iiggnnoorree _p_a_t_t_e_r_n [ _p_a_t_t_e_r_n ...]
       uunniiggnnoorree { _* | _p_a_t_t_e_r_n ... }
     * lliissttss [ -group _n_a_m_e ] _r_e_g_e_x [ _r_e_g_e_x ...]
       uunnlliissttss [ -group _n_a_m_e ...] { _* | _r_e_g_e_x ... }
       ssuubbssccrriibbee [ -group _n_a_m_e ...] _r_e_g_e_x [ _r_e_g_e_x ...]
       uunnssuubbssccrriibbee [ -group _n_a_m_e ...] { _* | _r_e_g_e_x ... }
     * mmaaccrroo _m_e_n_u [ _,_m_e_n_u ...] _k_e_y _s_e_q_u_e_n_c_e [ _d_e_s_c_r_i_p_t_i_o_n ]
     * mmaaiillbbooxxeess _m_a_i_l_b_o_x [ _m_a_i_l_b_o_x ...]
       uunnmmaaiillbbooxxeess { _* | _m_a_i_l_b_o_x ... }
     * mmaaiillttoo__aallllooww { _* | _h_e_a_d_e_r_-_f_i_e_l_d ... }
       uunnmmaaiillttoo__aallllooww { _* | _h_e_a_d_e_r_-_f_i_e_l_d ... }
     * mmbbooxx--hhooookk _r_e_g_e_x _m_a_i_l_b_o_x
     * mmeessssaaggee--hhooookk _p_a_t_t_e_r_n _c_o_m_m_a_n_d
     * mmiimmee__llooookkuupp _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] [ _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e
       ] ...]
       uunnmmiimmee__llooookkuupp { * | [ _m_i_m_e_-_t_y_p_e [ _/_m_i_m_e_-_s_u_b_t_y_p_e ] ...]}
     * mmoonnoo _o_b_j_e_c_t _a_t_t_r_i_b_u_t_e
       mmoonnoo { header | body } _a_t_t_r_i_b_u_t_e _r_e_g_e_x
       mmoonnoo index-object _a_t_t_r_i_b_u_t_e _p_a_t_t_e_r_n
       uunnmmoonnoo { index-object | header | body } { _* | _p_a_t_t_e_r_n ... }
     * mmyy__hhddrr _s_t_r_i_n_g
       uunnmmyy__hhddrr { _* | _f_i_e_l_d ... }
     * ooppeenn--hhooookk _r_e_g_e_x _"_s_h_e_l_l_-_c_o_m_m_a_n_d_"
       cclloossee--hhooookk _r_e_g_e_x _"_s_h_e_l_l_-_c_o_m_m_a_n_d_"
       aappppeenndd--hhooookk _r_e_g_e_x _"_s_h_e_l_l_-_c_o_m_m_a_n_d_"
     * ppuusshh _s_t_r_i_n_g
     * rreeppllyy--hhooookk _p_a_t_t_e_r_n _c_o_m_m_a_n_d
       sseenndd--hhooookk _p_a_t_t_e_r_n _c_o_m_m_a_n_d
       sseenndd22--hhooookk _p_a_t_t_e_r_n _c_o_m_m_a_n_d
     * ssccoorree _p_a_t_t_e_r_n _v_a_l_u_e
       uunnssccoorree { _* | _p_a_t_t_e_r_n ... }
     * sseett { [ no | inv | & | ? ] _v_a_r_i_a_b_l_e | _v_a_r_i_a_b_l_e_=_v_a_l_u_e } [...]
       uunnsseett _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
       rreesseett _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
       ttooggggllee _v_a_r_i_a_b_l_e [ _v_a_r_i_a_b_l_e ...]
     * sseetteennvv { _?_v_a_r_i_a_b_l_e | _v_a_r_i_a_b_l_e_ _v_a_l_u_e }
       uunnsseetteennvv _v_a_r_i_a_b_l_e
     * ssiiddeebbaarr__wwhhiitteelliisstt _m_a_i_l_b_o_x [ _m_a_i_l_b_o_x ...]
       uunnssiiddeebbaarr__wwhhiitteelliisstt { _* | _m_a_i_l_b_o_x ... }
     * ssoouurrccee _f_i_l_e_n_a_m_e
     * ssppaamm _p_a_t_t_e_r_n _f_o_r_m_a_t
       nnoossppaamm { _* | _p_a_t_t_e_r_n }
     * ssuubbjjeeccttrrxx _p_a_t_t_e_r_n _r_e_p_l_a_c_e_m_e_n_t
       uunnssuubbjjeeccttrrxx { _* | _p_a_t_t_e_r_n }
     * ttiimmeeoouutt--hhooookk _c_o_m_m_a_n_d
       ssttaarrttuupp--hhooookk _c_o_m_m_a_n_d
       sshhuuttddoowwnn--hhooookk _c_o_m_m_a_n_d
     * uunnhhooookk { _* | _h_o_o_k_-_t_y_p_e }

3. Configuration Variables

3.1. abort_noattach

   Type: quadoption
   Default: no

   If set to _y_e_s, when composing messages containing the regular
   expression specified by $$aabboorrtt__nnooaattttaacchh__rreeggeexx and no attachments are
   given, composition will be aborted. If set to _n_o, composing messages as
   such will never be aborted.

   Example:
set abort_noattach_regex = "\\<attach(|ed|ments?)\\>"

3.2. abort_noattach_regex

   Type: regular expression
   Default: "\<(attach|attached|attachments?)\>"

   Specifies a regular expression to match against the body of the
   message, to determine if an attachment was mentioned but mistakenly
   forgotten. If it matches, $$aabboorrtt__nnooaattttaacchh will be consulted to
   determine if message sending will be aborted.

   Like other regular expressions in NeoMutt, the search is case sensitive
   if the pattern contains at least one upper case letter, and case
   insensitive otherwise.

3.3. abort_nosubject

   Type: quadoption
   Default: ask-yes

   If set to _y_e_s, when composing messages and no subject is given at the
   subject prompt, composition will be aborted. If set to _n_o, composing
   messages with no subject given at the subject prompt will never be
   aborted.

3.4. abort_unmodified

   Type: quadoption
   Default: yes

   If set to _y_e_s, composition will automatically abort after editing the
   message body if no changes are made to the file (this check only
   happens after the _f_i_r_s_t edit of the file). When set to _n_o, composition
   will never be aborted.

3.5. alias_file

   Type: path
   Default: "~/.neomuttrc"

   The default file in which to save aliases created by the <<ccrreeaattee--aalliiaass>>
   function. Entries added to this file are encoded in the character set
   specified by $$ccoonnffiigg__cchhaarrsseett if it is _s_e_t or the current character set
   otherwise.

   _N_o_t_e_: NeoMutt will not automatically source this file; you must
   explicitly use the "ssoouurrccee" command for it to be executed in case this
   option points to a dedicated alias file.

   The default for this option is the currently used neomuttrc file, or
   "~/.neomuttrc" if no user neomuttrc was found.

3.6. alias_format

   Type: string
   Default: "%4n %2f %t %-10a   %r"

   Specifies the format of the data displayed for the "aalliiaass" menu. The
   following printf(3)-style sequences are available:
   %a Alias name
   %f Flags - currently, a "d" for an alias marked for deletion
   %n Index number
   %r Address which alias expands to
   %t Character which indicates if the alias is tagged for inclusion

3.7. allow_8bit

   Type: boolean
   Default: yes

   Controls whether 8-bit data is converted to 7-bit using either Quoted-
   Printable or Base64 encoding when sending mail.

3.8. allow_ansi

   Type: boolean
   Default: no

   Controls whether ANSI color codes in messages (and color tags in rich
   text messages) are to be interpreted. Messages containing these codes
   are rare, but if this option is _s_e_t, their text will be colored
   accordingly. Note that this may override your color choices, and even
   present a security problem, since a message could include a line like
[-- PGP output follows ...

   and give it the same color as your attachment color (see also
   $$ccrryypptt__ttiimmeessttaammpp).

3.9. arrow_cursor

   Type: boolean
   Default: no

   When _s_e_t, an arrow ("->") will be used to indicate the current entry in
   menus instead of highlighting the whole line. On slow network or modem
   links this will make response faster because there is less that has to
   be redrawn on the screen when moving to the next or previous entries in
   the menu.

3.10. ascii_chars

   Type: boolean
   Default: no

   If _s_e_t, NeoMutt will use plain ASCII characters when displaying thread
   and attachment trees, instead of the default _A_C_S characters.

3.11. ask_follow_up

   Type: boolean
   Default: no

   If set, NeoMutt will prompt you for follow-up groups before editing the
   body of an outgoing message.

3.12. ask_x_comment_to

   Type: boolean
   Default: no

   If set, NeoMutt will prompt you for x-comment-to field before editing
   the body of an outgoing message.

3.13. askbcc

   Type: boolean
   Default: no

   If _s_e_t, NeoMutt will prompt you for blind-carbon-copy (Bcc) recipients
   before editing an outgoing message.

3.14. askcc

   Type: boolean
   Default: no

   If _s_e_t, NeoMutt will prompt you for carbon-copy (Cc) recipients before
   editing the body of an outgoing message.

3.15. assumed_charset

   Type: string
   Default: (empty)

   This variable is a colon-separated list of character encoding schemes
   for messages without character encoding indication. Header field values
   and message body content without character encoding indication would be
   assumed that they are written in one of this list. By default, all the
   header fields and message body without any charset indication are
   assumed to be in "us-ascii".

   For example, Japanese users might prefer this:
set assumed_charset="iso-2022-jp:euc-jp:shift_jis:utf-8"

   However, only the first content is valid for the message body.

3.16. attach_charset

   Type: string
   Default: (empty)

   This variable is a colon-separated list of character encoding schemes
   for text file attachments. NeoMutt uses this setting to guess which
   encoding files being attached are encoded in to convert them to a
   proper character set given in $$sseenndd__cchhaarrsseett.

   If _u_n_s_e_t, the value of $$cchhaarrsseett will be used instead. For example, the
   following configuration would work for Japanese text handling:
set attach_charset="iso-2022-jp:euc-jp:shift_jis:utf-8"

   Note: for Japanese users, "iso-2022-*" must be put at the head of the
   value as shown above if included.

3.17. attach_format

   Type: string
   Default: "%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] "

   This variable describes the format of the "attachment" menu. The
   following printf(3)-style sequences are understood:
   %C Charset
   %c Requires charset conversion ("n" or "c")
   %D Deleted flag
   %d Description (if none, falls back to %F)
   %e MIME content-transfer-encoding
   %f Filename
   %F Filename in content-disposition header (if none, falls back to %f)
   %I Disposition ("I" for inline, "A" for attachment)
   %m Major MIME type
   %M MIME subtype
   %n Attachment number
   %Q "Q", if MIME part qualifies for attachment counting
   %s Size
   %T Graphic tree characters
   %t Tagged flag
   %u Unlink (=to delete) flag
   %X Number of qualifying MIME parts in this part and its children
   (please see the "aattttaacchhmmeennttss" section for possible speed effects)
   %>X Right justify the rest of the string and pad with character "X"
   %|X Pad to the end of the line with character "X"
   %*X Soft-fill with character "X" as pad

   For an explanation of "soft-fill", see the $$iinnddeexx__ffoorrmmaatt documentation.

3.18. attach_sep

   Type: string
   Default: "\n"

   The separator to add between attachments when operating (saving,
   printing, piping, etc) on a list of tagged attachments.

3.19. attach_split

   Type: boolean
   Default: yes

   If this variable is _u_n_s_e_t, when operating (saving, printing, piping,
   etc) on a list of tagged attachments, NeoMutt will concatenate the
   attachments and will operate on them as a single attachment. The
   $$aattttaacchh__sseepp separator is added after each attachment. When _s_e_t, NeoMutt
   will operate on the attachments one by one.

3.20. attribution

   Type: string
   Default: "On %d, %n wrote:"

   This is the string that will precede a message which has been included
   in a reply. For a full listing of defined printf(3)-like sequences see
   the section on $$iinnddeexx__ffoorrmmaatt.

3.21. attribution_locale

   Type: string
   Default: (empty)

   The locale used by strftime(3) to format dates in the aattttrriibbuuttiioonn
   string. Legal values are the strings your system accepts for the locale
   environment variable $LC_TIME.

   This variable is to allow the attribution date format to be customized
   by recipient or folder using hooks. By default, NeoMutt will use your
   locale environment, so there is no need to set this except to override
   that default.

3.22. auto_tag

   Type: boolean
   Default: no

   When _s_e_t, functions in the _i_n_d_e_x menu which affect a message will be
   applied to all tagged messages (if there are any). When unset, you must
   first use the <tag-prefix> function (bound to ";" by default) to make
   the next function apply to all tagged messages.

3.23. autoedit

   Type: boolean
   Default: no

   When _s_e_t along with $$eeddiitt__hheeaaddeerrss, NeoMutt will skip the initial
   send-menu (prompting for subject and recipients) and allow you to
   immediately begin editing the body of your message. The send-menu may
   still be accessed once you have finished editing the body of your
   message.

   _N_o_t_e_: when this option is _s_e_t, you cannot use send-hooks that depend on
   the recipients when composing a new (non-reply) message, as the initial
   list of recipients is empty.

   Also see $$ffaasstt__rreeppllyy.

3.24. beep

   Type: boolean
   Default: yes

   When this variable is _s_e_t, NeoMutt will beep when an error occurs.

3.25. beep_new

   Type: boolean
   Default: no

   When this variable is _s_e_t, NeoMutt will beep whenever it prints a
   message notifying you of new mail. This is independent of the setting
   of the $$bbeeeepp variable.

3.26. bounce

   Type: quadoption
   Default: ask-yes

   Controls whether you will be asked to confirm bouncing messages. If set
   to _y_e_s you don't get asked if you want to bounce a message. Setting
   this variable to _n_o is not generally useful, and thus not recommended,
   because you are unable to bounce messages.

3.27. bounce_delivered

   Type: boolean
   Default: yes

   When this variable is _s_e_t, NeoMutt will include Delivered-To headers
   when bouncing messages. Postfix users may wish to _u_n_s_e_t this variable.

3.28. braille_friendly

   Type: boolean
   Default: no

   When this variable is _s_e_t, NeoMutt will place the cursor at the
   beginning of the current line in menus, even when the $$aarrrrooww__ccuurrssoorr
   variable is _u_n_s_e_t, making it easier for blind persons using Braille
   displays to follow these menus. The option is _u_n_s_e_t by default because
   many visual terminals don't permit making the cursor invisible.

3.29. browser_abbreviate_mailboxes

   Type: boolean
   Default: yes

   When this variable is _s_e_t, mutt will abbreviate mailbox names in the
   browser mailbox list, using '~' and '=' shortcuts.

   The default "alpha" setting of $$ssoorrtt__bbrroowwsseerr uses locale-based sorting
   (using strcoll(3)), which ignores some punctuation. This can lead to
   some situations where the order doesn't make intuitive sense. In those
   cases, it may be desirable to _u_n_s_e_t this variable.

3.30. catchup_newsgroup

   Type: quadoption
   Default: ask-yes

   If this variable is _s_e_t, NeoMutt will mark all articles in newsgroup as
   read when you quit the newsgroup (catchup newsgroup).

3.31. certificate_file

   Type: path
   Default: "~/.mutt_certificates"

   This variable specifies the file where the certificates you trust are
   saved. When an unknown certificate is encountered, you are asked if you
   accept it or not. If you accept it, the certificate can also be saved
   in this file and further connections are automatically accepted.

   You can also manually add CA certificates in this file. Any server
   certificate that is signed with one of these CA certificates is also
   automatically accepted.

   Example:
set certificate_file=~/.neomutt/certificates

3.32. change_folder_next

   Type: boolean
   Default: no

   When this variable is _s_e_t, the <change-folder> function mailbox
   suggestion will start at the next folder in your "mmaaiillbbooxxeess" list,
   instead of starting at the first folder in the list.

3.33. charset

   Type: string
   Default: (empty)

   Character set your terminal uses to display and enter textual data. It
   is also the fallback for $$sseenndd__cchhaarrsseett.

   Upon startup NeoMutt tries to derive this value from environment
   variables such as $LC_CTYPE or $LANG.

   _N_o_t_e_: It should only be set in case NeoMutt isn't able to determine the
   character set used correctly.

3.34. check_mbox_size

   Type: boolean
   Default: no

   When this variable is _s_e_t, NeoMutt will use file size attribute instead
   of access time when checking for new mail in mbox and mmdf folders.

   This variable is _u_n_s_e_t by default and should only be enabled when new
   mail detection for these folder types is unreliable or doesn't work.

   Note that enabling this variable should happen before any "mmaaiillbbooxxeess"
   directives occur in configuration files regarding mbox or mmdf folders
   because NeoMutt needs to determine the initial new mail status of such
   a mailbox by performing a fast mailbox scan when it is defined.
   Afterwards the new mail status is tracked by file size changes.

3.35. check_new

   Type: boolean
   Default: yes

   _N_o_t_e_: this option only affects _m_a_i_l_d_i_r and _M_H style mailboxes.

   When _s_e_t, NeoMutt will check for new mail delivered while the mailbox
   is open. Especially with MH mailboxes, this operation can take quite
   some time since it involves scanning the directory and checking each
   file to see if it has already been looked at. If this variable is
   _u_n_s_e_t, no check for new mail is performed while the mailbox is open.

3.36. collapse_all

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will collapse all threads when entering a folder.

3.37. collapse_flagged

   Type: boolean
   Default: yes

   When _u_n_s_e_t, NeoMutt will not collapse a thread if it contains any
   flagged messages.

3.38. collapse_unread

   Type: boolean
   Default: yes

   When _u_n_s_e_t, NeoMutt will not collapse a thread if it contains any
   unread messages.

3.39. compose_format

   Type: string
   Default: "-- NeoMutt: Compose  [Approx. msg size: %l   Atts: %a]%>-"

   Controls the format of the status line displayed in the "compose" menu.
   This string is similar to $$ssttaattuuss__ffoorrmmaatt, but has its own set of
   printf(3)-like sequences:
   %a Total number of attachments
   %h Local hostname
   %l Approximate size (in bytes) of the current message
   %v NeoMutt version string

   See the text describing the $$ssttaattuuss__ffoorrmmaatt option for more information
   on how to set $$ccoommppoossee__ffoorrmmaatt.

3.40. config_charset

   Type: string
   Default: (empty)

   When defined, NeoMutt will recode commands in rc files from this
   encoding to the current character set as specified by $$cchhaarrsseett and
   aliases written to $$aalliiaass__ffiillee from the current character set.

   Please note that if setting $$cchhaarrsseett it must be done before setting
   $$ccoonnffiigg__cchhaarrsseett.

   Recoding should be avoided as it may render unconvertable characters as
   question marks which can lead to undesired side effects (for example in
   regular expressions).

3.41. confirmappend

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will prompt for confirmation when appending messages
   to an existing mailbox.

3.42. confirmcreate

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will prompt for confirmation when saving messages to
   a mailbox which does not yet exist before creating it.

3.43. connect_timeout

   Type: number
   Default: 30

   Causes NeoMutt to timeout a network connection (for IMAP, POP or SMTP)
   after this many seconds if the connection is not able to be
   established. A negative value causes NeoMutt to wait indefinitely for
   the connection attempt to succeed.

3.44. content_type

   Type: string
   Default: "text/plain"

   Sets the default Content-Type for the body of newly composed messages.

3.45. copy

   Type: quadoption
   Default: yes

   This variable controls whether or not copies of your outgoing messages
   will be saved for later references. Also see $$rreeccoorrdd, $$ssaavvee__nnaammee,
   $$ffoorrccee__nnaammee and "ffcccc--hhooookk".

3.46. crypt_autoencrypt

   Type: boolean
   Default: no

   Setting this variable will cause NeoMutt to always attempt to PGP
   encrypt outgoing messages. This is probably only useful in connection
   to the "sseenndd--hhooookk" command. It can be overridden by use of the pgp
   menu, when encryption is not required or signing is requested as well.
   If $$ssmmiimmee__iiss__ddeeffaauulltt is _s_e_t, then OpenSSL is used instead to create
   S/MIME messages and settings can be overridden by use of the smime menu
   instead. (Crypto only)

3.47. crypt_autopgp

   Type: boolean
   Default: yes

   This variable controls whether or not NeoMutt may automatically enable
   PGP encryption/signing for messages. See also $$ccrryypptt__aauuttooeennccrryypptt,
   $$ccrryypptt__rreeppllyyeennccrryypptt, $$ccrryypptt__aauuttoossiiggnn, $$ccrryypptt__rreeppllyyssiiggnn and
   $$ssmmiimmee__iiss__ddeeffaauulltt.

3.48. crypt_autosign

   Type: boolean
   Default: no

   Setting this variable will cause NeoMutt to always attempt to
   cryptographically sign outgoing messages. This can be overridden by use
   of the pgp menu, when signing is not required or encryption is
   requested as well. If $$ssmmiimmee__iiss__ddeeffaauulltt is _s_e_t, then OpenSSL is used
   instead to create S/MIME messages and settings can be overridden by use
   of the smime menu instead of the pgp menu. (Crypto only)

3.49. crypt_autosmime

   Type: boolean
   Default: yes

   This variable controls whether or not NeoMutt may automatically enable
   S/MIME encryption/signing for messages. See also $$ccrryypptt__aauuttooeennccrryypptt,
   $$ccrryypptt__rreeppllyyeennccrryypptt, $$ccrryypptt__aauuttoossiiggnn, $$ccrryypptt__rreeppllyyssiiggnn and
   $$ssmmiimmee__iiss__ddeeffaauulltt.

3.50. crypt_confirmhook

   Type: boolean
   Default: yes

   If set, then you will be prompted for confirmation of keys when using
   the _c_r_y_p_t_-_h_o_o_k command. If unset, no such confirmation prompt will be
   presented. This is generally considered unsafe, especially where typos
   are concerned.

3.51. crypt_opportunistic_encrypt

   Type: boolean
   Default: no

   Setting this variable will cause NeoMutt to automatically enable and
   disable encryption, based on whether all message recipient keys can be
   located by NeoMutt.

   When this option is enabled, NeoMutt will enable/disable encryption
   each time the TO, CC, and BCC lists are edited. If $$eeddiitt__hheeaaddeerrss is
   set, NeoMutt will also do so each time the message is edited.

   While this is set, encryption can't be manually enabled/disabled. The
   pgp or smime menus provide a selection to temporarily disable this
   option for the current message.

   If $$ccrryypptt__aauuttooeennccrryypptt or $$ccrryypptt__rreeppllyyeennccrryypptt enable encryption for a
   message, this option will be disabled for that message. It can be
   manually re-enabled in the pgp or smime menus. (Crypto only)

3.52. crypt_replyencrypt

   Type: boolean
   Default: yes

   If _s_e_t, automatically PGP or OpenSSL encrypt replies to messages which
   are encrypted. (Crypto only)

3.53. crypt_replysign

   Type: boolean
   Default: no

   If _s_e_t, automatically PGP or OpenSSL sign replies to messages which are
   signed.

   _N_o_t_e_: this does not work on messages that are encrypted _a_n_d signed!
   (Crypto only)

3.54. crypt_replysignencrypted

   Type: boolean
   Default: no

   If _s_e_t, automatically PGP or OpenSSL sign replies to messages which are
   encrypted. This makes sense in combination with $$ccrryypptt__rreeppllyyeennccrryypptt,
   because it allows you to sign all messages which are automatically
   encrypted. This works around the problem noted in $$ccrryypptt__rreeppllyyssiiggnn,
   that NeoMutt is not able to find out whether an encrypted message is
   also signed. (Crypto only)

3.55. crypt_timestamp

   Type: boolean
   Default: yes

   If _s_e_t, NeoMutt will include a time stamp in the lines surrounding PGP
   or S/MIME output, so spoofing such lines is more difficult. If you are
   using colors to mark these lines, and rely on these, you may _u_n_s_e_t this
   setting. (Crypto only)

3.56. crypt_use_gpgme

   Type: boolean
   Default: no

   This variable controls the use of the GPGME-enabled crypto backends. If
   it is _s_e_t and NeoMutt was built with gpgme support, the gpgme code for
   S/MIME and PGP will be used instead of the classic code. Note that you
   need to set this option in .neomuttrc; it won't have any effect when
   used interactively.

   Note that the GPGME backend does not support creating old-style inline
   (traditional) PGP encrypted or signed messages (see $$ppggpp__aauuttooiinnlliinnee).

3.57. crypt_use_pka

   Type: boolean
   Default: no

   Controls whether NeoMutt uses PKA (see
   http://www.g10code.de/docs/pka-intro.de.pdf) during signature
   verification (only supported by the GPGME backend).

3.58. crypt_verify_sig

   Type: quadoption
   Default: yes

   If _"_y_e_s_", always attempt to verify PGP or S/MIME signatures. If
   _"_a_s_k_-_*_", ask whether or not to verify the signature. If _"_n_o_", never
   attempt to verify cryptographic signatures. (Crypto only)

3.59. date_format

   Type: string
   Default: "!%a, %b %d, %Y at %I:%M:%S%p %Z"

   This variable controls the format of the date printed by the "%d"
   sequence in $$iinnddeexx__ffoorrmmaatt. This is passed to the strftime(3) function
   to process the date, see the man page for the proper syntax.

   Unless the first character in the string is a bang ("!"), the month and
   week day names are expanded according to the locale. If the first
   character in the string is a bang, the bang is discarded, and the month
   and week day names in the rest of the string are expanded in the _C
   locale (that is in US English).

3.60. debug_file

   Type: path
   Default: "~/.neomuttdebug"

   Debug logging is controlled by the variables $$ddeebbuugg__ffiillee and
   $$ddeebbuugg__lleevveell. $$ddeebbuugg__ffiillee specifies the root of the filename. NeoMutt
   will add "0" to the end. Each time NeoMutt is run with logging enabled,
   the log files are rotated. A maximum of five log files are kept,
   numbered 0 (most recent) to 4 (oldest).

   This option can be enabled on the command line, "neomutt -l mylog"

   See also: $$ddeebbuugg__lleevveell

3.61. debug_level

   Type: number
   Default: 0

   Debug logging is controlled by the variables $$ddeebbuugg__ffiillee and
   $$ddeebbuugg__lleevveell.

   The debug level controls how much information is saved to the log file.
   If you have a problem with NeoMutt, then enabling logging may help find
   the cause. Levels 1-3 will usually provide enough information for
   writing a bug report. Levels 4,5 will be extremely verbose.

   Warning: Logging at high levels may save private information to the
   file.

   This option can be enabled on the command line, "neomutt -d 2"

   See also: $$ddeebbuugg__ffiillee

3.62. default_hook

   Type: string
   Default: "~f %s !~P | (~P ~C %s)"

   This variable controls how "mmeessssaaggee--hhooookk", "rreeppllyy--hhooookk", "sseenndd--hhooookk",
   "sseenndd22--hhooookk", "ssaavvee--hhooookk", and "ffcccc--hhooookk" will be interpreted if they
   are specified with only a simple regex, instead of a matching pattern.
   The hooks are expanded when they are declared, so a hook will be
   interpreted according to the value of this variable at the time the
   hook is declared.

   The default value matches if the message is either from a user matching
   the regular expression given, or if it is from you (if the from address
   matches "aalltteerrnnaatteess") and is to or cc'ed to a user matching the given
   regular expression.

3.63. delete

   Type: quadoption
   Default: ask-yes

   Controls whether or not messages are really deleted when closing or
   synchronizing a mailbox. If set to _y_e_s, messages marked for deleting
   will automatically be purged without prompting. If set to _n_o, messages
   marked for deletion will be kept in the mailbox.

3.64. delete_untag

   Type: boolean
   Default: yes

   If this option is _s_e_t, NeoMutt will untag messages when marking them
   for deletion. This applies when you either explicitly delete a message,
   or when you save it to another folder.

3.65. digest_collapse

   Type: boolean
   Default: yes

   If this option is _s_e_t, NeoMutt's received-attachments menu will not
   show the subparts of individual messages in a multipart/digest. To see
   these subparts, press "v" on that menu.

3.66. display_filter

   Type: command
   Default: (empty)

   When set, specifies a command used to filter messages. When a message
   is viewed it is passed as standard input to $$ddiissppllaayy__ffiilltteerr, and the
   filtered message is read from the standard output.

   When preparing the message, NeoMutt inserts some escape sequences into
   the text. They are of the form: <esc>]9;XXX<bel> where "XXX" is a
   random 64-bit number.

   If these escape sequences interfere with your filter, they can be
   removed using a tool like ansifilter or sed 's/^\x1b]9;[0-9]\+\x7//'

   If they are removed, then PGP and MIME headers will no longer be
   coloured. This can be fixed by adding this to your config: color body
   magenta default '^\[-- .* --\]$'.

3.67. dsn_notify

   Type: string
   Default: (empty)

   This variable sets the request for when notification is returned. The
   string consists of a comma separated list (no spaces!) of one or more
   of the following: _n_e_v_e_r, to never request notification, _f_a_i_l_u_r_e, to
   request notification on transmission failure, _d_e_l_a_y, to be notified of
   message delays, _s_u_c_c_e_s_s, to be notified of successful transmission.

   Example:
set dsn_notify="failure,delay"

   _N_o_t_e_: when using $$sseennddmmaaiill for delivery, you should not enable this
   unless you are either using Sendmail 8.8.x or greater or a MTA
   providing a sendmail(1)-compatible interface supporting the -N option
   for DSN. For SMTP delivery, DSN support is auto-detected so that it
   depends on the server whether DSN will be used or not.

3.68. dsn_return

   Type: string
   Default: (empty)

   This variable controls how much of your message is returned in DSN
   messages. It may be set to either _h_d_r_s to return just the message
   header, or _f_u_l_l to return the full message.

   Example:
set dsn_return=hdrs

   _N_o_t_e_: when using $$sseennddmmaaiill for delivery, you should not enable this
   unless you are either using Sendmail 8.8.x or greater or a MTA
   providing a sendmail(1)-compatible interface supporting the -R option
   for DSN. For SMTP delivery, DSN support is auto-detected so that it
   depends on the server whether DSN will be used or not.

3.69. duplicate_threads

   Type: boolean
   Default: yes

   This variable controls whether NeoMutt, when $$ssoorrtt is set to _t_h_r_e_a_d_s,
   threads messages with the same Message-Id together. If it is _s_e_t, it
   will indicate that it thinks they are duplicates of each other with an
   equals sign in the thread tree.

3.70. edit_headers

   Type: boolean
   Default: no

   This option allows you to edit the header of your outgoing messages
   along with the body of your message.

   Although the compose menu may have localized header labels, the labels
   passed to your editor will be standard RFC2822 headers, (e.g. To:, Cc:,
   Subject:). Headers added in your editor must also be RFC2822 headers,
   or one of the pseudo headers listed in "eeddiitt--hheeaaddeerr". NeoMutt will not
   understand localized header labels, just as it would not when parsing
   an actual email.

   _N_o_t_e that changes made to the References: and Date: headers are ignored
   for interoperability reasons.

3.71. editor

   Type: command
   Default: "vi"

   This variable specifies which editor is used by NeoMutt. It defaults to
   the value of the $VISUAL, or $EDITOR, environment variable, or to the
   string "vi" if neither of those are set.

   The $$eeddiittoorr string may contain a _%_s escape, which will be replaced by
   the name of the file to be edited. If the _%_s escape does not appear in
   $$eeddiittoorr, a space and the name to be edited are appended.

   The resulting string is then executed by running
sh -c 'string'

   where _s_t_r_i_n_g is the expansion of $$eeddiittoorr described above.

3.72. empty_subject

   Type: string
   Default: "Re: your mail"

   This variable specifies the subject to be used when replying to an
   email with an empty subject. It defaults to "Re: your mail".

3.73. encode_from

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will quoted-printable encode messages when they
   contain the string "From " (note the trailing space) in the beginning
   of a line. This is useful to avoid the tampering certain mail delivery
   and transport agents tend to do with messages (in order to prevent
   tools from misinterpreting the line as a mbox message separator).

3.74. entropy_file

   Type: path
   Default: (empty)

   The file which includes random data that is used to initialize SSL
   library functions.

3.75. envelope_from_address

   Type: e-mail address
   Default: (empty)

   Manually sets the _e_n_v_e_l_o_p_e sender for outgoing messages. This value is
   ignored if $$uussee__eennvveellooppee__ffrroomm is _u_n_s_e_t.

3.76. escape

   Type: string
   Default: "~"

   Escape character to use for functions in the built-in editor.

3.77. fast_reply

   Type: boolean
   Default: no

   When _s_e_t, the initial prompt for recipients and subject are skipped
   when replying to messages, and the initial prompt for subject is
   skipped when forwarding messages.

   _N_o_t_e_: this variable has no effect when the $$aauuttooeeddiitt variable is _s_e_t.

3.78. fcc_attach

   Type: quadoption
   Default: yes

   This variable controls whether or not attachments on outgoing messages
   are saved along with the main body of your message.

3.79. fcc_clear

   Type: boolean
   Default: no

   When this variable is _s_e_t, FCCs will be stored unencrypted and
   unsigned, even when the actual message is encrypted and/or signed. (PGP
   only)

3.80. flag_chars

   Type: string
   Default: "*!DdrONon- "

   Controls the characters used in several flags.
   _C_h_a_r_a_c_t_e_r _D_e_f_a_u_l_t _D_e_s_c_r_i_p_t_i_o_n
   1         *       The mail is tagged.
   2         !       The mail is flagged as important.
   3         D       The mail is marked for deletion.
   4         d       The mail has attachments marked for deletion.
   5         r       The mail has been replied to.
   6         O       The mail is Old (Unread but seen).
   7         N       The mail is New (Unread but not seen).
   8         o       The mail thread is Old (Unread but seen).
   9         n       The mail thread is New (Unread but not seen).
   10        -       The mail is read - %S expando.
   11        <space> The mail is read - %Z expando.

3.81. flag_safe

   Type: boolean
   Default: no

   If set, flagged messages cannot be deleted.

3.82. folder

   Type: path
   Default: "~/Mail"

   Specifies the default location of your mailboxes. A "+" or "=" at the
   beginning of a pathname will be expanded to the value of this variable.
   Note that if you change this variable (from the default) value you need
   to make sure that the assignment occurs _b_e_f_o_r_e you use "+" or "=" for
   any other variables since expansion takes place when handling the
   "mmaaiillbbooxxeess" command.

3.83. folder_format

   Type: string
   Default: "%2C %t %N %F %2l %-8.8u %-8.8g %8s %d %f"

   This variable allows you to customize the file browser display to your
   personal taste. This string is similar to $$iinnddeexx__ffoorrmmaatt, but has its
   own set of printf(3)-like sequences:
   %C Current file number
   %d Date/time folder was last modified
   %D Date/time folder was last modified using $$ddaattee__ffoorrmmaatt.
   %f Filename ("/" is appended to directory names, "@" to symbolic links
   and "*" to executable files)
   %F File permissions
   %g Group name (or numeric gid, if missing)
   %l Number of hard links
   %m Number of messages in the mailbox *
   %n Number of unread messages in the mailbox *
   %N "N" if mailbox has new mail, blank otherwise
   %s Size in bytes
   %t "*" if the file is tagged, blank otherwise
   %u Owner name (or numeric uid, if missing)
   %>X Right justify the rest of the string and pad with character "X"
   %|X Pad to the end of the line with character "X"
   %*X Soft-fill with character "X" as pad

   For an explanation of "soft-fill", see the $$iinnddeexx__ffoorrmmaatt documentation.

   * = can be optionally printed if nonzero

   %m, %n, and %N only work for monitored mailboxes. %m requires
   $$mmaaiill__cchheecckk__ssttaattss to be set. %n requires $$mmaaiill__cchheecckk__ssttaattss to be set
   (except for IMAP mailboxes).

3.84. followup_to

   Type: boolean
   Default: yes

   Controls whether or not the "Mail-Followup-To:" header field is
   generated when sending mail. When _s_e_t, NeoMutt will generate this field
   when you are replying to a known mailing list, specified with the
   "ssuubbssccrriibbee" or "lliissttss" commands.

   This field has two purposes. First, preventing you from receiving
   duplicate copies of replies to messages which you send to mailing
   lists, and second, ensuring that you do get a reply separately for any
   messages sent to known lists to which you are not subscribed.

   The header will contain only the list's address for subscribed lists,
   and both the list address and your own email address for unsubscribed
   lists. Without this header, a group reply to your message sent to a
   subscribed list will be sent to both the list and your address,
   resulting in two copies of the same email for you.

3.85. followup_to_poster

   Type: quadoption
   Default: ask-yes

   If this variable is _s_e_t and the keyword "poster" is present in
   _F_o_l_l_o_w_u_p_-_T_o header, follow-up to newsgroup function is not permitted.
   The message will be mailed to the submitter of the message via mail.

3.86. force_name

   Type: boolean
   Default: no

   This variable is similar to $$ssaavvee__nnaammee, except that NeoMutt will store
   a copy of your outgoing message by the username of the address you are
   sending to even if that mailbox does not exist.

   Also see the $$rreeccoorrdd variable.

3.87. forward_attribution_intro

   Type: string
   Default: "----- Forwarded message from %f -----"

   This is the string that will precede a message which has been forwarded
   in the main body of a message (when $$mmiimmee__ffoorrwwaarrdd is unset). For a full
   listing of defined printf(3)-like sequences see the section on
   $$iinnddeexx__ffoorrmmaatt. See also $$aattttrriibbuuttiioonn__llooccaallee.

3.88. forward_attribution_trailer

   Type: string
   Default: "----- End forwarded message -----"

   This is the string that will follow a message which has been forwarded
   in the main body of a message (when $$mmiimmee__ffoorrwwaarrdd is unset). For a full
   listing of defined printf(3)-like sequences see the section on
   $$iinnddeexx__ffoorrmmaatt. See also $$aattttrriibbuuttiioonn__llooccaallee.

3.89. forward_decode

   Type: boolean
   Default: yes

   Controls the decoding of complex MIME messages into text/plain when
   forwarding a message. The message header is also RFC2047 decoded. This
   variable is only used, if $$mmiimmee__ffoorrwwaarrdd is _u_n_s_e_t, otherwise
   $$mmiimmee__ffoorrwwaarrdd__ddeeccooddee is used instead.

3.90. forward_decrypt

   Type: boolean
   Default: yes

   Controls the handling of encrypted messages when forwarding a message.
   When _s_e_t, the outer layer of encryption is stripped off. This variable
   is only used if $$mmiimmee__ffoorrwwaarrdd is _s_e_t and $$mmiimmee__ffoorrwwaarrdd__ddeeccooddee is _u_n_s_e_t.
   (PGP only)

3.91. forward_edit

   Type: quadoption
   Default: yes

   This quadoption controls whether or not the user is automatically
   placed in the editor when forwarding messages. For those who always
   want to forward with no modification, use a setting of "no".

3.92. forward_format

   Type: string
   Default: "[%a: %s]"

   This variable controls the default subject when forwarding a message.
   It uses the same format sequences as the $$iinnddeexx__ffoorrmmaatt variable.

3.93. forward_quote

   Type: boolean
   Default: no

   When _s_e_t, forwarded messages included in the main body of the message
   (when $$mmiimmee__ffoorrwwaarrdd is _u_n_s_e_t) will be quoted using $$iinnddeenntt__ssttrriinngg.

3.94. forward_references

   Type: boolean
   Default: no

   When _s_e_t, forwarded messages set the "In-Reply-To:" and "References:"
   headers in the same way as normal replies would. Hence the forwarded
   message becomes part of the original thread instead of starting a new
   one.

3.95. from

   Type: e-mail address
   Default: (empty)

   When _s_e_t, this variable contains a default "from" address. It can be
   overridden using "mmyy__hhddrr" (including from a "sseenndd--hhooookk") and
   $$rreevveerrssee__nnaammee. This variable is ignored if $$uussee__ffrroomm is _u_n_s_e_t.

   If not specified, then it may be read from the environment variable
   $EMAIL.

3.96. from_chars

   Type: string
   Default: (empty)

   Controls the character used to prefix the %F and %L fields in the
   index.
   _C_h_a_r_a_c_t_e_r _D_e_s_c_r_i_p_t_i_o_n
   1 Mail is written by you and has a To address, or has a known mailing
   list in the To address.
   2 Mail is written by you and has a Cc address, or has a known mailing
   list in the Cc address.
   3 Mail is written by you and has a Bcc address.
   4 All remaining cases.

   If this is empty or unset (default), the traditional long "To ", "Cc "
   and "Bcc " prefixes are used. If set but too short to include a
   character for a particular case, a single space will be prepended to
   the field. To prevent any prefix at all from being added in a
   particular case, use the special value CR (aka ^M) for the
   corresponding character.

   This slightly odd interface is necessitated by NeoMutt's handling of
   string variables; one cannot tell a variable that is unset from one
   that is set to the empty string.

3.97. gecos_mask

   Type: regular expression
   Default: "^[^,]*"

   A regular expression used by NeoMutt to parse the GECOS field of a
   password entry when expanding the alias. The default value will return
   the string up to the first "," encountered. If the GECOS field contains
   a string like "lastname, firstname" then you should set it to ".*".

   This can be useful if you see the following behavior: you address an
   e-mail to user ID "stevef" whose full name is "Steve Franklin". If
   NeoMutt expands "stevef" to ""Franklin" stevef@foo.bar" then you should
   set the $$ggeeccooss__mmaasskk to a regular expression that will match the whole
   name so NeoMutt will expand "Franklin" to "Franklin, Steve".

3.98. group_index_format

   Type: string
   Default: "%4C %M%N %5s  %-45.45f %d"

   This variable allows you to customize the newsgroup browser display to
   your personal taste. This string is similar to "iinnddeexx__ffoorrmmaatt", but has
   its own set of printf()-like sequences:
   %C  Current newsgroup number
   %d  Description of newsgroup (becomes from server)
   %f  Newsgroup name
   %M  - if newsgroup not allowed for direct post (moderated for example)
   %N  N if newsgroup is new, u if unsubscribed, blank otherwise
   %n  Number of new articles in newsgroup
   %s  Number of unread articles in newsgroup
   %>X Right justify the rest of the string and pad with character "X"
   %|X Pad to the end of the line with character "X"

3.99. hdrs

   Type: boolean
   Default: yes

   When _u_n_s_e_t, the header fields normally added by the "mmyy__hhddrr" command
   are not created. This variable _m_u_s_t be unset before composing a new
   message or replying in order to take effect. If _s_e_t, the user defined
   header fields are added to every new message.

3.100. header

   Type: boolean
   Default: no

   When _s_e_t, this variable causes NeoMutt to include the header of the
   message you are replying to into the edit buffer. The $$wweeeedd setting
   applies.

3.101. header_cache

   Type: path
   Default: (empty)

   This variable points to the header cache database. If pointing to a
   directory NeoMutt will contain a header cache database file per folder,
   if pointing to a file that file will be a single global header cache.
   By default it is _u_n_s_e_t so no header caching will be used.

   Header caching can greatly improve speed when opening POP, IMAP MH or
   Maildir folders, see "ccaacchhiinngg" for details.

3.102. header_cache_backend

   Type: -none-
   Default: 0

   This variable specifies the header cache backend.

3.103. header_cache_compress

   Type: boolean
   Default: yes

   When NeoMutt is compiled with qdbm, tokyocabinet or kyotocabinet as
   header cache backend, this option determines whether the database will
   be compressed. Compression results in database files roughly being one
   fifth of the usual diskspace, but the decompression can result in a
   slower opening of cached folder(s) which in general is still much
   faster than opening non header cached folders.

3.104. header_cache_pagesize

   Type: string
   Default: "16384"

   When NeoMutt is compiled with either gdbm or bdb4 as the header cache
   backend, this option changes the database page size. Too large or too
   small values can waste space, memory, or CPU time. The default should
   be more or less optimal for most use cases.

3.105. header_color_partial

   Type: boolean
   Default: no

   When _s_e_t, color header regexes behave like color body regexes: color is
   applied to the exact text matched by the regex. When _u_n_s_e_t, color is
   applied to the entire header.

   One use of this option might be to apply color to just the header
   labels.

   See "ccoolloorr" for more details.

3.106. help

   Type: boolean
   Default: yes

   When _s_e_t, help lines describing the bindings for the major functions
   provided by each menu are displayed on the first line of the screen.

   _N_o_t_e_: The binding will not be displayed correctly if the function is
   bound to a sequence rather than a single keystroke. Also, the help line
   may not be updated if a binding is changed while NeoMutt is running.
   Since this variable is primarily aimed at new users, neither of these
   should present a major problem.

3.107. hidden_host

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will skip the host name part of $$hhoossttnnaammee variable
   when adding the domain part to addresses. This variable does not affect
   the generation of Message-IDs, and it will not lead to the cut-off of
   first-level domains.

3.108. hidden_tags

   Type: string
   Default: "unread,draft,flagged,passed,replied,attachment,signed,encrypt
   ed"

   This variable specifies private notmuch/imap tags which should not be
   printed on screen.

3.109. hide_limited

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will not show the presence of messages that are
   hidden by limiting, in the thread tree.

3.110. hide_missing

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will not show the presence of missing messages in the
   thread tree.

3.111. hide_thread_subject

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will not show the subject of messages in the thread
   tree that have the same subject as their parent or closest previously
   displayed sibling.

3.112. hide_top_limited

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will not show the presence of messages that are
   hidden by limiting, at the top of threads in the thread tree. Note that
   when $$hhiiddee__lliimmiitteedd is _s_e_t, this option will have no effect.

3.113. hide_top_missing

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will not show the presence of missing messages at the
   top of threads in the thread tree. Note that when $$hhiiddee__mmiissssiinngg is _s_e_t,
   this option will have no effect.

3.114. history

   Type: number
   Default: 10

   This variable controls the size (in number of strings remembered) of
   the string history buffer per category. The buffer is cleared each time
   the variable is set.

3.115. history_file

   Type: path
   Default: "~/.mutthistory"

   The file in which NeoMutt will save its history.

   Also see $$ssaavvee__hhiissttoorryy.

3.116. history_remove_dups

   Type: boolean
   Default: no

   When _s_e_t, all of the string history will be scanned for duplicates when
   a new entry is added. Duplicate entries in the $$hhiissttoorryy__ffiillee will also
   be removed when it is periodically compacted.

3.117. honor_disposition

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will not display attachments with a disposition of
   "attachment" inline even if it could render the part to plain text.
   These MIME parts can only be viewed from the attachment menu.

   If _u_n_s_e_t, NeoMutt will render all MIME parts it can properly transform
   to plain text.

3.118. honor_followup_to

   Type: quadoption
   Default: yes

   This variable controls whether or not a Mail-Followup-To header is
   honored when group-replying to a message.

3.119. hostname

   Type: string
   Default: (empty)

   Specifies the fully-qualified hostname of the system NeoMutt is running
   on containing the host's name and the DNS domain it belongs to. It is
   used as the domain part (after "@") for local email addresses as well
   as Message-Id headers.

   If not specified in a config file, then NeoMutt will try to determine
   the hostname itself.

   Optionally, NeoMutt can be compiled with a fixed domain name.

   Also see $$uussee__ddoommaaiinn and $$hhiiddddeenn__hhoosstt.

3.120. idn_decode

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will show you international domain names decoded.
   Note: You can use IDNs for addresses even if this is _u_n_s_e_t. This
   variable only affects decoding. (IDN only)

3.121. idn_encode

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will encode international domain names using IDN.
   Unset this if your SMTP server can handle newer (RFC6531) UTF-8 encoded
   domains. (IDN only)

3.122. ignore_list_reply_to

   Type: boolean
   Default: no

   Affects the behavior of the <reply> function when replying to messages
   from mailing lists (as defined by the "ssuubbssccrriibbee" or "lliissttss" commands).
   When _s_e_t, if the "Reply-To:" field is set to the same value as the
   "To:" field, NeoMutt assumes that the "Reply-To:" field was set by the
   mailing list to automate responses to the list, and will ignore this
   field. To direct a response to the mailing list when this option is
   _s_e_t, use the <<lliisstt--rreeppllyy>> function; <group-reply> will reply to both
   the sender and the list.

3.123. imap_authenticators

   Type: string
   Default: (empty)

   This is a colon-delimited list of authentication methods NeoMutt may
   attempt to use to log in to an IMAP server, in the order NeoMutt should
   try them. Authentication methods are either "login" or the right side
   of an IMAP "AUTH=xxx" capability string, e.g. "digest-md5", "gssapi" or
   "cram-md5". This option is case-insensitive. If it's _u_n_s_e_t (the
   default) NeoMutt will try all available methods, in order from
   most-secure to least-secure.

   Example:
set imap_authenticators="gssapi:cram-md5:login"

   _N_o_t_e_: NeoMutt will only fall back to other authentication methods if
   the previous methods are unavailable. If a method is available but
   authentication fails, NeoMutt will not connect to the IMAP server.

3.124. imap_check_subscribed

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will fetch the set of subscribed folders from your
   server whenever a mailbox is _s_e_l_e_c_t_e_d, and add them to the set of
   mailboxes it polls for new mail just as if you had issued individual
   "mmaaiillbbooxxeess" commands.

3.125. imap_delim_chars

   Type: string
   Default: "/."

   This contains the list of characters which you would like to treat as
   folder separators for displaying IMAP paths. In particular it helps in
   using the "=" shortcut for your _f_o_l_d_e_r variable.

3.126. imap_headers

   Type: string
   Default: (empty)

   NeoMutt requests these header fields in addition to the default headers
   ("Date:", "From:", "Subject:", "To:", "Cc:", "Message-Id:",
   "References:", "Content-Type:", "Content-Description:", "In-Reply-To:",
   "Reply-To:", "Lines:", "List-Post:", "X-Label:") from IMAP servers
   before displaying the index menu. You may want to add more headers for
   spam detection.

   _N_o_t_e_: This is a space separated list, items should be uppercase and not
   contain the colon, e.g. "X-BOGOSITY X-SPAM-STATUS" for the
   "X-Bogosity:" and "X-Spam-Status:" header fields.

3.127. imap_idle

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will attempt to use the IMAP IDLE extension to check
   for new mail in the current mailbox. Some servers (dovecot was the
   inspiration for this option) react badly to NeoMutt's implementation.
   If your connection seems to freeze up periodically, try unsetting this.

3.128. imap_keepalive

   Type: number
   Default: 300

   This variable specifies the maximum amount of time in seconds that
   NeoMutt will wait before polling open IMAP connections, to prevent the
   server from closing them before NeoMutt has finished with them. The
   default is well within the RFC-specified minimum amount of time (30
   minutes) before a server is allowed to do this, but in practice the RFC
   does get violated every now and then. Reduce this number if you find
   yourself getting disconnected from your IMAP server due to inactivity.

3.129. imap_list_subscribed

   Type: boolean
   Default: no

   This variable configures whether IMAP folder browsing will look for
   only subscribed folders or all folders. This can be toggled in the IMAP
   browser with the <toggle-subscribed> function.

3.130. imap_login

   Type: string
   Default: (empty)

   Your login name on the IMAP server.

   This variable defaults to the value of $$iimmaapp__uusseerr.

3.131. imap_pass

   Type: string
   Default: (empty)

   Specifies the password for your IMAP account. If _u_n_s_e_t, NeoMutt will
   prompt you for your password when you invoke the <imap-fetch-mail>
   function or try to open an IMAP folder.

   _W_a_r_n_i_n_g: you should only use this option when you are on a fairly
   secure machine, because the superuser can read your neomuttrc even if
   you are the only one who can read the file.

3.132. imap_passive

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will not open new IMAP connections to check for new
   mail. NeoMutt will only check for new mail over existing IMAP
   connections. This is useful if you don't want to be prompted to
   user/password pairs on NeoMutt invocation, or if opening the connection
   is slow.

3.133. imap_peek

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will avoid implicitly marking your mail as read
   whenever you fetch a message from the server. This is generally a good
   thing, but can make closing an IMAP folder somewhat slower. This option
   exists to appease speed freaks.

3.134. imap_pipeline_depth

   Type: number
   Default: 15

   Controls the number of IMAP commands that may be queued up before they
   are sent to the server. A deeper pipeline reduces the amount of time
   NeoMutt must wait for the server, and can make IMAP servers feel much
   more responsive. But not all servers correctly handle pipelined
   commands, so if you have problems you might want to try setting this
   variable to 0.

   _N_o_t_e_: Changes to this variable have no effect on open connections.

3.135. imap_poll_timeout

   Type: number
   Default: 15

   This variable specifies the maximum amount of time in seconds that
   NeoMutt will wait for a response when polling IMAP connections for new
   mail, before timing out and closing the connection. Set to 0 to disable
   timing out.

3.136. imap_servernoise

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will display warning messages from the IMAP server as
   error messages. Since these messages are often harmless, or generated
   due to configuration problems on the server which are out of the users'
   hands, you may wish to suppress them at some point.

3.137. imap_user

   Type: string
   Default: (empty)

   The name of the user whose mail you intend to access on the IMAP
   server.

   This variable defaults to your user name on the local machine.

3.138. implicit_autoview

   Type: boolean
   Default: no

   If set to "yes", NeoMutt will look for a mailcap entry with the
   "copiousoutput" flag set for _e_v_e_r_y MIME attachment it doesn't have an
   internal viewer defined for. If such an entry is found, NeoMutt will
   use the viewer defined in that entry to convert the body part to text
   form.

3.139. include

   Type: quadoption
   Default: ask-yes

   Controls whether or not a copy of the message(s) you are replying to is
   included in your reply.

3.140. include_onlyfirst

   Type: boolean
   Default: no

   Controls whether or not NeoMutt includes only the first attachment of
   the message you are replying.

3.141. indent_string

   Type: string
   Default: "> "

   Specifies the string to prepend to each line of text quoted in a
   message to which you are replying. You are strongly encouraged not to
   change this value, as it tends to agitate the more fanatical netizens.

   The value of this option is ignored if $$tteexxtt__fflloowweedd is set, because the
   quoting mechanism is strictly defined for format=flowed.

   This option is a format string, please see the description of
   $$iinnddeexx__ffoorrmmaatt for supported printf(3)-style sequences.

3.142. index_format

   Type: string
   Default: "%4C %Z %{%b %d} %-15.15L (%?l?%4l&%4c?) %s"

   This variable allows you to customize the message index display to your
   personal taste.

   "Format strings" are similar to the strings used in the C function
   printf(3) to format output (see the man page for more details). For an
   explanation of the %? construct, see the ssttaattuuss__ffoorrmmaatt description. The
   following sequences are defined in NeoMutt:
   %a Address of the author
   %A Reply-to address (if present; otherwise: address of author)
   %b Filename of the original message folder (think mailbox)
   %B The list to which the letter was sent, or else the folder name (%b).
   %C Current message number
   %c Number of characters (bytes) in the message
   %D Date and time of message using ddaattee__ffoorrmmaatt and local timezone
   %d Date and time of message using ddaattee__ffoorrmmaatt and sender's timezone
   %e Current message number in thread
   %E Number of messages in current thread
   %F Author name, or recipient name if the message is from you
   %f Sender (address + real name), either From: or Return-Path:
   %g Newsgroup name (if compiled with NNTP support)
   %g Message tags (e.g. notmuch tags/imap flags)
   %Gx Individual message tag (e.g. notmuch tags/imap flags)
   %H Spam attribute(s) of this message
   %I Initials of author
   %i Message-id of the current message
   %J Message tags (if present, tree unfolded, and != parent's tags)
   %K The list to which the letter was sent (if any; otherwise: empty)
   %L If an address in the "To:" or "Cc:" header field matches an address
   Defined by the users "ssuubbssccrriibbee" command, this displays "To
   <list-name>", otherwise the same as %F
   %l Number of lines in the message (does not work with maildir, Mh, and
   possibly IMAP folders)
   %M Number of hidden messages if the thread is collapsed
   %m Total number of message in the mailbox
   %N Message score
   %n Author's real name (or address if missing)
   %O Original save folder where NeoMutt would formerly have Stashed the
   message: list name or recipient name If not sent to a list
   %P Progress indicator for the built-in pager (how much of the file has
   been displayed)
   %q Newsgroup name (if compiled with NNTP support)
   %R Comma separated list of "Cc:" recipients
   %r Comma separated list of "To:" recipients
   %S Single character status of the message ("N"/"O"/"D"/"d"/"!"/"r"/"*")
   %s Subject of the message
   %T The appropriate character from the $$ttoo__cchhaarrss string
   %t "To:" field (recipients)
   %u User (login) name of the author
   %v First name of the author, or the recipient if the message is from
   you
   %W Name of organization of author ("Organization:" field)
   %x "X-Comment-To:" field (if present and compiled with NNTP support)
   %X Number of MIME attachments (please see the "aattttaacchhmmeennttss" section for
   possible speed effects)
   %Y "X-Label:" field, if present, and _(_1_) not at part of a thread tree,
   _(_2_) at the top of a thread, or _(_3_) "X-Label:" is different from
   Preceding message's "X-Label:"
   %y "X-Label:" field, if present
   %Z A three character set of message status flags. The first character
   is new/read/replied flags ("n"/"o"/"r"/"O"/"N"). The second is deleted
   or encryption flags ("D"/"d"/"S"/"P"/"s"/"K"). The third is either
   tagged/flagged ("*"/"!"), or one of the characters Listed in $$ttoo__cchhaarrss.
   %zc Message crypto flags
   %zs Message status flags
   %zt Message tag flags
   %{fmt} the date and time of the message is converted to sender's time
   zone, and "fmt" is expanded by the library function strftime(3); a
   leading bang disables locales
   %[fmt] the date and time of the message is converted to the local time
   zone, and "fmt" is expanded by the library function strftime(3); a
   leading bang disables locales
   %(fmt) the local date and time when the message was received. "fmt" is
   expanded by the library function strftime(3); a leading bang disables
   locales
   %>X right justify the rest of the string and pad with character "X"
   %|X pad to the end of the line with character "X"
   %*X soft-fill with character "X" as pad

   Date format expressions can be constructed based on relative dates.
   Using the date formatting operators along with nested conditionals, the
   date format can be modified based on how old a message is. See the
   section on "Conditional Dates" for an explanation and examples
   "Soft-fill" deserves some explanation: Normal right-justification will
   print everything to the left of the "%>", displaying padding and
   whatever lies to the right only if there's room. By contrast, soft-fill
   gives priority to the right-hand side, guaranteeing space to display it
   and showing padding only if there's still room. If necessary, soft-fill
   will eat text leftwards to make room for rightward text.

   Note that these expandos are supported in "ssaavvee--hhooookk", "ffcccc--hhooookk" and
   "ffcccc--ssaavvee--hhooookk", too.

3.143. inews

   Type: command
   Default: (empty)

   If set, specifies the program and arguments used to deliver news posted
   by NeoMutt. Otherwise, NeoMutt posts article using current connection
   to news server. The following printf-style sequence is understood:
   %a account url
   %p port
   %P port if specified
   %s news server name
   %S url schema
   %u username

   Example:
set inews="/usr/local/bin/inews -hS"

3.144. ispell

   Type: command
   Default: "ispell"

   How to invoke ispell (GNU's spell-checking software).

3.145. keep_flagged

   Type: boolean
   Default: no

   If _s_e_t, read messages marked as flagged will not be moved from your
   spool mailbox to your $$mmbbooxx mailbox, or as a result of a "mmbbooxx--hhooookk"
   command.

3.146. mail_check

   Type: number
   Default: 5

   This variable configures how often (in seconds) NeoMutt should look for
   new mail. Also see the $$ttiimmeeoouutt variable.

3.147. mail_check_recent

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will only notify you about new mail that has been
   received since the last time you opened the mailbox. When _u_n_s_e_t,
   NeoMutt will notify you if any new mail exists in the mailbox,
   regardless of whether you have visited it recently.

   When $$mmaarrkk__oolldd is set, NeoMutt does not consider the mailbox to contain
   new mail if only old messages exist.

3.148. mail_check_stats

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will periodically calculate message statistics of a
   mailbox while polling for new mail. It will check for unread, flagged,
   and total message counts. Because this operation is more performance
   intensive, it defaults to _u_n_s_e_t, and has a separate option,
   $$mmaaiill__cchheecckk__ssttaattss__iinntteerrvvaall, to control how often to update these
   counts.

   Message statistics can also be explicitly calculated by invoking the
   <check-stats> function.

3.149. mail_check_stats_interval

   Type: number
   Default: 60

   When $$mmaaiill__cchheecckk__ssttaattss is _s_e_t, this variable configures how often (in
   seconds) NeoMutt will update message counts.

3.150. mailcap_path

   Type: string
   Default: "~/.mailcap:/usr/share/neomutt/mailcap:/etc/mailcap:/etc/mailc
   ap:/usr/etc/mailcap:/usr/local/etc/mailcap"

   This variable specifies which files to consult when attempting to
   display MIME bodies not directly supported by NeoMutt.

   $$mmaaiillccaapp__ppaatthh is overridden by the environment variable $MAILCAPS.

   The default search path is from RFC1524.

3.151. mailcap_sanitize

   Type: boolean
   Default: yes

   If _s_e_t, NeoMutt will restrict possible characters in mailcap % expandos
   to a well-defined set of safe characters. This is the safe setting, but
   we are not sure it doesn't break some more advanced MIME stuff.

   _D_O_N_'_T_ _C_H_A_N_G_E_ _T_H_I_S_ _S_E_T_T_I_N_G_ _U_N_L_E_S_S_ _Y_O_U_ _A_R_E_ _R_E_A_L_L_Y_ _S_U_R_E_ _W_H_A_T_ _Y_O_U_ _A_R_E
   _D_O_I_N_G_!

3.152. maildir_check_cur

   Type: boolean
   Default: no

   If _s_e_t, NeoMutt will poll both the new and cur directories of a maildir
   folder for new messages. This might be useful if other programs
   interacting with the folder (e.g. dovecot) are moving new messages to
   the cur directory. Note that setting this option may slow down polling
   for new messages in large folders, since NeoMutt has to scan all cur
   messages.

3.153. maildir_header_cache_verify

   Type: boolean
   Default: yes

   Check for Maildir unaware programs other than NeoMutt having modified
   maildir files when the header cache is in use. This incurs one stat(2)
   per message every time the folder is opened (which can be very slow for
   NFS folders).

3.154. maildir_trash

   Type: boolean
   Default: no

   If _s_e_t, messages marked as deleted will be saved with the maildir
   trashed flag instead of unlinked. _N_o_t_e_: this only applies to
   maildir-style mailboxes. Setting it will have no effect on other
   mailbox types.

3.155. mark_macro_prefix

   Type: string
   Default: "'"

   Prefix for macros created using mark-message. A new macro automatically
   generated with _<_m_a_r_k_-_m_e_s_s_a_g_e_>_a will be composed from this prefix and
   the letter _a.

3.156. mark_old

   Type: boolean
   Default: yes

   Controls whether or not NeoMutt marks _n_e_w _u_n_r_e_a_d messages as _o_l_d if you
   exit a mailbox without reading them. With this option _s_e_t, the next
   time you start NeoMutt, the messages will show up with an "O" next to
   them in the index menu, indicating that they are old.

3.157. markers

   Type: boolean
   Default: yes

   Controls the display of wrapped lines in the internal pager. If set, a
   "+" marker is displayed at the beginning of wrapped lines.

   Also see the $$ssmmaarrtt__wwrraapp variable.

3.158. mask

   Type: regular expression
   Default: "&Mask,IP!^\.[^.]"

   A regular expression used in the file browser, optionally preceded by
   the _n_o_t operator "!". Only files whose names match this mask will be
   shown. The match is always case-sensitive.

3.159. mbox

   Type: path
   Default: "~/mbox"

   This specifies the folder into which read mail in your $$ssppoooollffiillee
   folder will be appended.

   Also see the $$mmoovvee variable.

3.160. mbox_type

   Type: folder magic
   Default: mbox

   The default mailbox type used when creating new folders. May be any of
   "mbox", "MMDF", "MH" or "Maildir".

   This can also be set using the -m command-line option.

3.161. menu_context

   Type: number
   Default: 0

   This variable controls the number of lines of context that are given
   when scrolling through menus. (Similar to $$ppaaggeerr__ccoonntteexxtt.)

3.162. menu_move_off

   Type: boolean
   Default: yes

   When _u_n_s_e_t, the bottom entry of menus will never scroll up past the
   bottom of the screen, unless there are less entries than lines. When
   _s_e_t, the bottom entry may move off the bottom.

3.163. menu_scroll

   Type: boolean
   Default: no

   When _s_e_t, menus will be scrolled up or down one line when you attempt
   to move across a screen boundary. If _u_n_s_e_t, the screen is cleared and
   the next or previous page of the menu is displayed (useful for slow
   links to avoid many redraws).

3.164. message_cache_clean

   Type: boolean
   Default: no

   If _s_e_t, NeoMutt will clean out obsolete entries from the message cache
   when the mailbox is synchronized. You probably only want to set it
   every once in a while, since it can be a little slow (especially for
   large folders).

3.165. message_cachedir

   Type: path
   Default: (empty)

   Set this to a directory and NeoMutt will cache copies of messages from
   your IMAP and POP servers here. You are free to remove entries at any
   time.

   When setting this variable to a directory, NeoMutt needs to fetch every
   remote message only once and can perform regular expression searches as
   fast as for local folders.

   Also see the $$mmeessssaaggee__ccaacchhee__cclleeaann variable.

3.166. message_format

   Type: string
   Default: "%s"

   This is the string displayed in the "attachment" menu for attachments
   of type message/rfc822. For a full listing of defined printf(3)-like
   sequences see the section on $$iinnddeexx__ffoorrmmaatt.

3.167. meta_key

   Type: boolean
   Default: no

   If _s_e_t, forces NeoMutt to interpret keystrokes with the high bit (bit
   8) set as if the user had pressed the Esc key and whatever key remains
   after having the high bit removed. For example, if the key pressed has
   an ASCII value of 0xf8, then this is treated as if the user had pressed
   Esc then "x". This is because the result of removing the high bit from
   0xf8 is 0x78, which is the ASCII character "x".

3.168. metoo

   Type: boolean
   Default: no

   If _u_n_s_e_t, NeoMutt will remove your address (see the "aalltteerrnnaatteess"
   command) from the list of recipients when replying to a message.

3.169. mh_purge

   Type: boolean
   Default: no

   When _u_n_s_e_t, NeoMutt will mimic mh's behavior and rename deleted
   messages to _,_<_o_l_d_ _f_i_l_e_ _n_a_m_e_> in mh folders instead of really deleting
   them. This leaves the message on disk but makes programs reading the
   folder ignore it. If the variable is _s_e_t, the message files will simply
   be deleted.

   This option is similar to $$mmaaiillddiirr__ttrraasshh for Maildir folders.

3.170. mh_seq_flagged

   Type: string
   Default: "flagged"

   The name of the MH sequence used for flagged messages.

3.171. mh_seq_replied

   Type: string
   Default: "replied"

   The name of the MH sequence used to tag replied messages.

3.172. mh_seq_unseen

   Type: string
   Default: "unseen"

   The name of the MH sequence used for unseen messages.

3.173. mime_forward

   Type: quadoption
   Default: no

   When _s_e_t, the message you are forwarding will be attached as a separate
   message/rfc822 MIME part instead of included in the main body of the
   message. This is useful for forwarding MIME messages so the receiver
   can properly view the message as it was delivered to you. If you like
   to switch between MIME and not MIME from mail to mail, set this
   variable to "ask-no" or "ask-yes".

   Also see $$ffoorrwwaarrdd__ddeeccooddee and $$mmiimmee__ffoorrwwaarrdd__ddeeccooddee.

3.174. mime_forward_decode

   Type: boolean
   Default: no

   Controls the decoding of complex MIME messages into text/plain when
   forwarding a message while $$mmiimmee__ffoorrwwaarrdd is _s_e_t. Otherwise
   $$ffoorrwwaarrdd__ddeeccooddee is used instead.

3.175. mime_forward_rest

   Type: quadoption
   Default: yes

   When forwarding multiple attachments of a MIME message from the
   attachment menu, attachments which cannot be decoded in a reasonable
   manner will be attached to the newly composed message if this option is
   _s_e_t.

3.176. mime_subject

   Type: boolean
   Default: yes

   If _u_n_s_e_t, 8-bit "subject:" line in article header will not be encoded
   according to RFC2047 to base64. This is useful when message is Usenet
   article, because MIME for news is nonstandard feature.

3.177. mime_type_query_command

   Type: command
   Default: (empty)

   This specifies a command to run, to determine the mime type of a new
   attachment when composing a message. Unless $$mmiimmee__ttyyppee__qquueerryy__ffiirrsstt is
   set, this will only be run if the attachment's extension is not found
   in the mime.types file.

   The string may contain a "%s", which will be substituted with the
   attachment filename. NeoMutt will add quotes around the string
   substituted for "%s" automatically according to shell quoting rules, so
   you should avoid adding your own. If no "%s" is found in the string,
   NeoMutt will append the attachment filename to the end of the string.

   The command should output a single line containing the attachment's
   mime type.

   Suggested values are "xdg-mime query filetype" or "file -bi".

3.178. mime_type_query_first

   Type: boolean
   Default: no

   When _s_e_t, the $$mmiimmee__ttyyppee__qquueerryy__ccoommmmaanndd will be run before the
   mime.types lookup.

3.179. move

   Type: quadoption
   Default: no

   Controls whether or not NeoMutt will move read messages from your spool
   mailbox to your $$mmbbooxx mailbox, or as a result of a "mmbbooxx--hhooookk" command.

3.180. narrow_tree

   Type: boolean
   Default: no

   This variable, when _s_e_t, makes the thread tree narrower, allowing
   deeper threads to fit on the screen.

3.181. net_inc

   Type: number
   Default: 10

   Operations that expect to transfer a large amount of data over the
   network will update their progress every $$nneett__iinncc kilobytes. If set to
   0, no progress messages will be displayed.

   See also $$rreeaadd__iinncc, $$wwrriittee__iinncc and $$nneett__iinncc.

3.182. new_mail_command

   Type: command
   Default: (empty)

   If _s_e_t, NeoMutt will call this command after a new message is received.
   See the $$ssttaattuuss__ffoorrmmaatt documentation for the values that can be
   formatted into this command.

3.183. news_cache_dir

   Type: path
   Default: "~/.neomutt"

   This variable pointing to directory where NeoMutt will save cached news
   articles and headers in. If _u_n_s_e_t, articles and headers will not be
   saved at all and will be reloaded from the server each time.

3.184. news_server

   Type: string
   Default: (empty)

   This variable specifies domain name or address of NNTP server.

   You can also specify username and an alternative port for each news
   server, e.g. [[s]news://][username[:password]@]server[:port]

   This option can also be set using the command line option "-g", the
   environment variable $NNTPSERVER, or putting the server name in the
   file "/etc/nntpserver".

3.185. newsgroups_charset

   Type: string
   Default: "utf-8"

   Character set of newsgroups descriptions.

3.186. newsrc

   Type: path
   Default: "~/.newsrc"

   The file, containing info about subscribed newsgroups - names and
   indexes of read articles. The following printf-style sequence is
   understood:
   %a Account url
   %p Port
   %P Port if specified
   %s News server name
   %S Url schema
   %u Username

3.187. nm_db_limit

   Type: number
   Default: 0

   This variable specifies the default limit used in notmuch queries.

3.188. nm_default_uri

   Type: string
   Default: (empty)

   This variable specifies the default Notmuch database in format
   notmuch://<absolute path>.

3.189. nm_exclude_tags

   Type: string
   Default: (empty)

   The messages tagged with these tags are excluded and not loaded from
   notmuch DB to NeoMutt unless specified explicitly.

3.190. nm_open_timeout

   Type: number
   Default: 5

   This variable specifies the timeout for database open in seconds.

3.191. nm_query_type

   Type: string
   Default: "messages"

   This variable specifies the default query type (threads or messages)
   used in notmuch queries.

3.192. nm_query_window_current_position

   Type: number
   Default: 0

   This variable contains the currently setup notmuch search for window
   based vfolder.

3.193. nm_query_window_current_search

   Type: string
   Default: (empty)

   This variable sets the time duration of a windowed notmuch query.
   Accepted values all non negative integers. A value of 0 disables the
   feature.

3.194. nm_query_window_duration

   Type: number
   Default: 0

   This variable sets the time duration of a windowed notmuch query.
   Accepted values all non negative integers. A value of 0 disables the
   feature.

3.195. nm_query_window_timebase

   Type: string
   Default: "week"

   This variable sets the time base of a windowed notmuch query. Accepted
   values are 'minute', 'hour', 'day', 'week', 'month', 'year'

3.196. nm_record

   Type: boolean
   Default: no

   This variable specifies if the NeoMutt record should indexed by
   notmuch.

3.197. nm_record_tags

   Type: string
   Default: (empty)

   This variable specifies the default tags applied to messages stored to
   the NeoMutt record. When set to 0 this variable disable the window
   feature.

3.198. nm_unread_tag

   Type: string
   Default: "unread"

   This variable specifies notmuch tag which is used for unread messages.
   The variable is used to count unread messages in DB only. All other
   NeoMutt commands use standard (e.g. maildir) flags.

3.199. nntp_authenticators

   Type: string
   Default: (empty)

   This is a colon-delimited list of authentication methods NeoMutt may
   attempt to use to log in to a news server, in the order NeoMutt should
   try them. Authentication methods are either "user" or any SASL
   mechanism, e.g. "digest-md5", "gssapi" or "cram-md5". This option is
   case-insensitive. If it's _u_n_s_e_t (the default) NeoMutt will try all
   available methods, in order from most-secure to least-secure.

   Example:
set nntp_authenticators="digest-md5:user"

   _N_o_t_e_: NeoMutt will only fall back to other authentication methods if
   the previous methods are unavailable. If a method is available but
   authentication fails, NeoMutt will not connect to the IMAP server.

3.200. nntp_context

   Type: number
   Default: 1000

   This variable defines number of articles which will be in index when
   newsgroup entered. If active newsgroup have more articles than this
   number, oldest articles will be ignored. Also controls how many
   articles headers will be saved in cache when you quit newsgroup.

3.201. nntp_listgroup

   Type: boolean
   Default: yes

   This variable controls whether or not existence of each article is
   checked when newsgroup is entered.

3.202. nntp_load_description

   Type: boolean
   Default: yes

   This variable controls whether or not descriptions for each newsgroup
   must be loaded when newsgroup is added to list (first time list loading
   or new newsgroup adding).

3.203. nntp_pass

   Type: string
   Default: (empty)

   Your password for NNTP account.

3.204. nntp_poll

   Type: number
   Default: 60

   The time in seconds until any operations on newsgroup except post new
   article will cause recheck for new news. If set to 0, NeoMutt will
   recheck newsgroup on each operation in index (stepping, read article,
   etc.).

3.205. nntp_user

   Type: string
   Default: (empty)

   Your login name on the NNTP server. If _u_n_s_e_t and NNTP server requires
   authentication, NeoMutt will prompt you for your account name when you
   connect to news server.

3.206. pager

   Type: command
   Default: "builtin"

   This variable specifies which pager you would like to use to view
   messages. The value "builtin" means to use the built-in pager,
   otherwise this variable should specify the pathname of the external
   pager you would like to use.

   Using an external pager may have some disadvantages: Additional
   keystrokes are necessary because you can't call NeoMutt functions
   directly from the pager, and screen resizes cause lines longer than the
   screen width to be badly formatted in the help menu.

3.207. pager_context

   Type: number
   Default: 0

   This variable controls the number of lines of context that are given
   when displaying the next or previous page in the internal pager. By
   default, NeoMutt will display the line after the last one on the screen
   at the top of the next page (0 lines of context).

   This variable also specifies the amount of context given for search
   results. If positive, this many lines will be given before a match, if
   0, the match will be top-aligned.

3.208. pager_format

   Type: string
   Default: "-%Z- %C/%m: %-20.20n   %s%*  -- (%P)"

   This variable controls the format of the one-line message "status"
   displayed before each message in either the internal or an external
   pager. The valid sequences are listed in the $$iinnddeexx__ffoorrmmaatt section.

3.209. pager_index_lines

   Type: number
   Default: 0

   Determines the number of lines of a mini-index which is shown when in
   the pager. The current message, unless near the top or bottom of the
   folder, will be roughly one third of the way down this mini-index,
   giving the reader the context of a few messages before and after the
   message. This is useful, for example, to determine how many messages
   remain to be read in the current thread. One of the lines is reserved
   for the status bar from the index, so a setting of 6 will only show 5
   lines of the actual index. A value of 0 results in no index being
   shown. If the number of messages in the current folder is less than
   $$ppaaggeerr__iinnddeexx__lliinneess, then the index will only use as many lines as it
   needs.

3.210. pager_stop

   Type: boolean
   Default: no

   When _s_e_t, the internal-pager will _n_o_t move to the next message when you
   are at the end of a message and invoke the <next-page> function.

3.211. pgp_auto_decode

   Type: boolean
   Default: no

   If _s_e_t, NeoMutt will automatically attempt to decrypt traditional PGP
   messages whenever the user performs an operation which ordinarily would
   result in the contents of the message being operated on. For example,
   if the user displays a pgp-traditional message which has not been
   manually checked with the <<cchheecckk--ttrraaddiittiioonnaall--ppggpp>> function, NeoMutt
   will automatically check the message for traditional pgp.

3.212. pgp_autoinline

   Type: boolean
   Default: no

   This option controls whether NeoMutt generates old-style inline
   (traditional) PGP encrypted or signed messages under certain
   circumstances. This can be overridden by use of the pgp menu, when
   inline is not required. The GPGME backend does not support this option.

   Note that NeoMutt might automatically use PGP/MIME for messages which
   consist of more than a single MIME part. NeoMutt can be configured to
   ask before sending PGP/MIME messages when inline (traditional) would
   not work.

   Also see the $$ppggpp__mmiimmee__aauuttoo variable.

   Also note that using the old-style PGP message format is _s_t_r_o_n_g_l_y
   _d_e_p_r_e_c_a_t_e_d. (PGP only)

3.213. pgp_check_exit

   Type: boolean
   Default: yes

   If _s_e_t, NeoMutt will check the exit code of the PGP subprocess when
   signing or encrypting. A non-zero exit code means that the subprocess
   failed. (PGP only)

3.214. pgp_check_gpg_decrypt_status_fd

   Type: boolean
   Default: yes

   If _s_e_t, mutt will check the status file descriptor output of
   $$ppggpp__ddeeccrryypptt__ccoommmmaanndd for GnuPG status codes indicating successful
   decryption. This will check for the presence of DECRYPTION_OKAY,
   absence of DECRYPTION_FAILED, and that all PLAINTEXT occurs between the
   BEGIN_DECRYPTION and END_DECRYPTION status codes.

   If _u_n_s_e_t, mutt will instead match the status fd output against
   $$ppggpp__ddeeccrryyppttiioonn__ookkaayy. (PGP only)

3.215. pgp_clearsign_command

   Type: command
   Default: (empty)

   This format is used to create an old-style "clearsigned" PGP message.
   Note that the use of this format is _s_t_r_o_n_g_l_y _d_e_p_r_e_c_a_t_e_d.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.216. pgp_decode_command

   Type: command
   Default: (empty)

   This format strings specifies a command which is used to decode
   application/pgp attachments.

   The PGP command formats have their own set of printf(3)-like sequences:
   %p Expands to PGPPASSFD=0 when a pass phrase is needed, to an empty
   string otherwise. Note: This may be used with a %? construct.
   %f Expands to the name of a file containing a message.
   %s Expands to the name of a file containing the signature part of a
   multipart/signed attachment when verifying it.
   %a The value of $$ppggpp__ssiiggnn__aass if set, otherwise the value of
   $$ppggpp__ddeeffaauulltt__kkeeyy.
   %r One or more key IDs (or fingerprints if available).

   For examples on how to configure these formats for the various versions
   of PGP which are floating around, see the pgp and gpg sample
   configuration files in the samples/ subdirectory which has been
   installed on your system alongside the documentation. (PGP only)

3.217. pgp_decrypt_command

   Type: command
   Default: (empty)

   This command is used to decrypt a PGP encrypted message.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.218. pgp_decryption_okay

   Type: regular expression
   Default: (empty)

   If you assign text to this variable, then an encrypted PGP message is
   only considered successfully decrypted if the output from
   $$ppggpp__ddeeccrryypptt__ccoommmmaanndd contains the text. This is used to protect against
   a spoofed encrypted message, with multipart/encrypted headers but
   containing a block that is not actually encrypted. (e.g. simply signed
   and ascii armored text).

   Note that if $$ppggpp__cchheecckk__ggppgg__ddeeccrryypptt__ssttaattuuss__ffdd is set, this variable is
   ignored. (PGP only)

3.219. pgp_default_key

   Type: string
   Default: (empty)

   This is the default key-pair to use for PGP operations. It will be used
   for encryption (see $$ppoossttppoonnee__eennccrryypptt and $$ppggpp__sseellff__eennccrryypptt).

   It will also be used for signing unless $$ppggpp__ssiiggnn__aass is set.

   The (now deprecated) _p_g_p___s_e_l_f___e_n_c_r_y_p_t___a_s is an alias for this variable,
   and should no longer be used. (PGP only)

3.220. pgp_encrypt_only_command

   Type: command
   Default: (empty)

   This command is used to encrypt a body part without signing it.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.221. pgp_encrypt_sign_command

   Type: command
   Default: (empty)

   This command is used to both sign and encrypt a body part.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.222. pgp_entry_format

   Type: string
   Default: "%4n %t%f %4l/0x%k %-4a %2c %u"

   This variable allows you to customize the PGP key selection menu to
   your personal taste. This string is similar to $$iinnddeexx__ffoorrmmaatt, but has
   its own set of printf(3)-like sequences:
   %a     Algorithm
   %c     Capabilities
   %f     Flags
   %k     Key id
   %l     Key length
   %n     Number
   %p     Protocol
   %t     Trust/validity of the key-uid association
   %u     User id
   %[<s>] Date of the key where <s> is an strftime(3) expression

   (PGP only)

3.223. pgp_export_command

   Type: command
   Default: (empty)

   This command is used to export a public key from the user's key ring.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.224. pgp_getkeys_command

   Type: command
   Default: (empty)

   This command is invoked whenever NeoMutt needs to fetch the public key
   associated with an email address. Of the sequences supported by
   $$ppggpp__ddeeccooddee__ccoommmmaanndd, %r is the only printf(3)-like sequence used with
   this format. Note that in this case, %r expands to the email address,
   not the public key ID (the key ID is unknown, which is why NeoMutt is
   invoking this command). (PGP only)

3.225. pgp_good_sign

   Type: regular expression
   Default: (empty)

   If you assign a text to this variable, then a PGP signature is only
   considered verified if the output from $$ppggpp__vveerriiffyy__ccoommmmaanndd contains the
   text. Use this variable if the exit code from the command is 0 even for
   bad signatures. (PGP only)

3.226. pgp_ignore_subkeys

   Type: boolean
   Default: yes

   Setting this variable will cause NeoMutt to ignore OpenPGP subkeys.
   Instead, the principal key will inherit the subkeys' capabilities.
   _U_n_s_e_t this if you want to play interesting key selection games. (PGP
   only)

3.227. pgp_import_command

   Type: command
   Default: (empty)

   This command is used to import a key from a message into the user's
   public key ring.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.228. pgp_list_pubring_command

   Type: command
   Default: (empty)

   This command is used to list the public key ring's contents. The output
   format must be analogous to the one used by
gpg --list-keys --with-colons --with-fingerprint

   Note: gpg's fixed-list-mode option should not be used. It produces a
   different date format which may result in NeoMutt showing incorrect key
   generation dates.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.229. pgp_list_secring_command

   Type: command
   Default: (empty)

   This command is used to list the secret key ring's contents. The output
   format must be analogous to the one used by:
gpg --list-keys --with-colons --with-fingerprint

   Note: gpg's fixed-list-mode option should not be used. It produces a
   different date format which may result in NeoMutt showing incorrect key
   generation dates.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.230. pgp_long_ids

   Type: boolean
   Default: yes

   If _s_e_t, use 64 bit PGP key IDs, if _u_n_s_e_t use the normal 32 bit key IDs.
   NOTE: Internally, NeoMutt has transitioned to using fingerprints (or
   long key IDs as a fallback). This option now only controls the display
   of key IDs in the key selection menu and a few other places. (PGP only)

3.231. pgp_mime_auto

   Type: quadoption
   Default: ask-yes

   This option controls whether NeoMutt will prompt you for automatically
   sending a (signed/encrypted) message using PGP/MIME when inline
   (traditional) fails (for any reason).

   Also note that using the old-style PGP message format is _s_t_r_o_n_g_l_y
   _d_e_p_r_e_c_a_t_e_d. (PGP only)

3.232. pgp_replyinline

   Type: boolean
   Default: no

   Setting this variable will cause NeoMutt to always attempt to create an
   inline (traditional) message when replying to a message which is PGP
   encrypted/signed inline. This can be overridden by use of the pgp menu,
   when inline is not required. This option does not automatically detect
   if the (replied-to) message is inline; instead it relies on NeoMutt
   internals for previously checked/flagged messages.

   Note that NeoMutt might automatically use PGP/MIME for messages which
   consist of more than a single MIME part. NeoMutt can be configured to
   ask before sending PGP/MIME messages when inline (traditional) would
   not work.

   Also see the $$ppggpp__mmiimmee__aauuttoo variable.

   Also note that using the old-style PGP message format is _s_t_r_o_n_g_l_y
   _d_e_p_r_e_c_a_t_e_d. (PGP only)

3.233. pgp_retainable_sigs

   Type: boolean
   Default: no

   If _s_e_t, signed and encrypted messages will consist of nested
   multipart/signed and multipart/encrypted body parts.

   This is useful for applications like encrypted and signed mailing
   lists, where the outer layer (multipart/encrypted) can be easily
   removed, while the inner multipart/signed part is retained. (PGP only)

3.234. pgp_self_encrypt

   Type: boolean
   Default: yes

   When _s_e_t, PGP encrypted messages will also be encrypted using the key
   in $$ppggpp__ddeeffaauulltt__kkeeyy. (PGP only)

3.235. pgp_show_unusable

   Type: boolean
   Default: yes

   If _s_e_t, NeoMutt will display non-usable keys on the PGP key selection
   menu. This includes keys which have been revoked, have expired, or have
   been marked as "disabled" by the user. (PGP only)

3.236. pgp_sign_as

   Type: string
   Default: (empty)

   If you have a different key pair to use for signing, you should set
   this to the signing key. Most people will only need to set
   $$ppggpp__ddeeffaauulltt__kkeeyy. It is recommended that you use the keyid form to
   specify your key (e.g. 0x00112233). (PGP only)

3.237. pgp_sign_command

   Type: command
   Default: (empty)

   This command is used to create the detached PGP signature for a
   multipart/signed PGP/MIME body part.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.238. pgp_sort_keys

   Type: sort order
   Default: address

   Specifies how the entries in the pgp menu are sorted. The following are
   legal values:
   address sort alphabetically by user id
   keyid   sort alphabetically by key id
   date    sort by key creation date
   trust   sort by the trust of the key

   If you prefer reverse order of the above values, prefix it with
   "reverse-". (PGP only)

3.239. pgp_strict_enc

   Type: boolean
   Default: yes

   If _s_e_t, NeoMutt will automatically encode PGP/MIME signed messages as
   quoted-printable. Please note that unsetting this variable may lead to
   problems with non-verifyable PGP signatures, so only change this if you
   know what you are doing. (PGP only)

3.240. pgp_timeout

   Type: number (long)
   Default: 300

   The number of seconds after which a cached passphrase will expire if
   not used. (PGP only)

3.241. pgp_use_gpg_agent

   Type: boolean
   Default: no

   If _s_e_t, NeoMutt will use a possibly-running gpg-agent(1) process. Note
   that as of version 2.1, GnuPG no longer exports GPG_AGENT_INFO, so
   NeoMutt no longer verifies if the agent is running. (PGP only)

3.242. pgp_verify_command

   Type: command
   Default: (empty)

   This command is used to verify PGP signatures.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.243. pgp_verify_key_command

   Type: command
   Default: (empty)

   This command is used to verify key information from the key selection
   menu.

   This is a format string, see the $$ppggpp__ddeeccooddee__ccoommmmaanndd command for
   possible printf(3)-like sequences. (PGP only)

3.244. pipe_decode

   Type: boolean
   Default: no

   Used in connection with the <pipe-message> command. When _u_n_s_e_t, NeoMutt
   will pipe the messages without any preprocessing. When _s_e_t, NeoMutt
   will weed headers and will attempt to decode the messages first.

3.245. pipe_sep

   Type: string
   Default: "\n"

   The separator to add between messages when piping a list of tagged
   messages to an external Unix command.

3.246. pipe_split

   Type: boolean
   Default: no

   Used in connection with the <pipe-message> function following
   <tag-prefix>. If this variable is _u_n_s_e_t, when piping a list of tagged
   messages NeoMutt will concatenate the messages and will pipe them all
   concatenated. When _s_e_t, NeoMutt will pipe the messages one by one. In
   both cases the messages are piped in the current sorted order, and the
   $$ppiippee__sseepp separator is added after each message.

3.247. pop_auth_try_all

   Type: boolean
   Default: yes

   If _s_e_t, NeoMutt will try all available authentication methods. When
   _u_n_s_e_t, NeoMutt will only fall back to other authentication methods if
   the previous methods are unavailable. If a method is available but
   authentication fails, NeoMutt will not connect to the POP server.

3.248. pop_authenticators

   Type: string
   Default: (empty)

   This is a colon-delimited list of authentication methods NeoMutt may
   attempt to use to log in to an POP server, in the order NeoMutt should
   try them. Authentication methods are either "user", "apop" or any SASL
   mechanism, e.g. "digest-md5", "gssapi" or "cram-md5". This option is
   case-insensitive. If this option is _u_n_s_e_t (the default) NeoMutt will
   try all available methods, in order from most-secure to least-secure.

   Example:
set pop_authenticators="digest-md5:apop:user"

3.249. pop_checkinterval

   Type: number
   Default: 60

   This variable configures how often (in seconds) NeoMutt should look for
   new mail in the currently selected mailbox if it is a POP mailbox.

3.250. pop_delete

   Type: quadoption
   Default: ask-no

   If _s_e_t, NeoMutt will delete successfully downloaded messages from the
   POP server when using the <<ffeettcchh--mmaaiill>> function. When _u_n_s_e_t, NeoMutt
   will download messages but also leave them on the POP server.

3.251. pop_host

   Type: string
   Default: (empty)

   The name of your POP server for the <<ffeettcchh--mmaaiill>> function. You can also
   specify an alternative port, username and password, i.e.:
[pop[s]://][username[:password]@]popserver[:port]

   where "[...]" denotes an optional part.

3.252. pop_last

   Type: boolean
   Default: no

   If this variable is _s_e_t, NeoMutt will try to use the "LAST" POP command
   for retrieving only unread messages from the POP server when using the
   <<ffeettcchh--mmaaiill>> function.

3.253. pop_pass

   Type: string
   Default: (empty)

   Specifies the password for your POP account. If _u_n_s_e_t, NeoMutt will
   prompt you for your password when you open a POP mailbox.

   _W_a_r_n_i_n_g: you should only use this option when you are on a fairly
   secure machine, because the superuser can read your neomuttrc even if
   you are the only one who can read the file.

3.254. pop_reconnect

   Type: quadoption
   Default: ask-yes

   Controls whether or not NeoMutt will try to reconnect to the POP server
   if the connection is lost.

3.255. pop_user

   Type: string
   Default: (empty)

   Your login name on the POP server.

   This variable defaults to your user name on the local machine.

3.256. post_indent_string

   Type: string
   Default: (empty)

   Similar to the $$aattttrriibbuuttiioonn variable, NeoMutt will append this string
   after the inclusion of a message which is being replied to.

3.257. post_moderated

   Type: quadoption
   Default: ask-yes

   If set to _y_e_s, NeoMutt will post article to newsgroup that have not
   permissions to posting (e.g. moderated). _N_o_t_e_: if news server does not
   support posting to that newsgroup or totally read-only, that posting
   will not have an effect.

3.258. postpone

   Type: quadoption
   Default: ask-yes

   Controls whether or not messages are saved in the $$ppoossttppoonneedd mailbox
   when you elect not to send immediately.

   Also see the $$rreeccaallll variable.

3.259. postpone_encrypt

   Type: boolean
   Default: no

   When _s_e_t, postponed messages that are marked for encryption will be
   self-encrypted. NeoMutt will first try to encrypt using the value
   specified in $$ppggpp__ddeeffaauulltt__kkeeyy or $$ssmmiimmee__ddeeffaauulltt__kkeeyy. If those are not
   set, it will try the deprecated $$ppoossttppoonnee__eennccrryypptt__aass. (Crypto only)

3.260. postpone_encrypt_as

   Type: string
   Default: (empty)

   This is a deprecated fall-back variable for $$ppoossttppoonnee__eennccrryypptt. Please
   use $$ppggpp__ddeeffaauulltt__kkeeyy or $$ssmmiimmee__ddeeffaauulltt__kkeeyy. (Crypto only)

3.261. postponed

   Type: path
   Default: "~/postponed"

   NeoMutt allows you to indefinitely "ppoossttppoonnee sending a message" which
   you are editing. When you choose to postpone a message, NeoMutt saves
   it in the mailbox specified by this variable.

   Also see the $$ppoossttppoonnee variable.

3.262. preconnect

   Type: string
   Default: (empty)

   If _s_e_t, a shell command to be executed if NeoMutt fails to establish a
   connection to the server. This is useful for setting up secure
   connections, e.g. with ssh(1). If the command returns a nonzero status,
   NeoMutt gives up opening the server. Example:
set preconnect="ssh -f -q -L 1234:mailhost.net:143 mailhost.net \
sleep 20 < /dev/null > /dev/null"

   Mailbox "foo" on "mailhost.net" can now be reached as
   "{localhost:1234}foo".

   Note: For this example to work, you must be able to log in to the
   remote machine without having to enter a password.

3.263. preferred_languages

   Type: string
   Default: (empty)

   RFC8255 : user preferred languages to be search in parts and display
   Ex. : set preferred_languages="en,fr,de"

3.264. print

   Type: quadoption
   Default: ask-no

   Controls whether or not NeoMutt really prints messages. This is set to
   "ask-no" by default, because some people accidentally hit "p" often.

3.265. print_command

   Type: command
   Default: "lpr"

   This specifies the command pipe that should be used to print messages.

3.266. print_decode

   Type: boolean
   Default: yes

   Used in connection with the <print-message> command. If this option is
   _s_e_t, the message is decoded before it is passed to the external command
   specified by $$pprriinntt__ccoommmmaanndd. If this option is _u_n_s_e_t, no processing
   will be applied to the message when printing it. The latter setting may
   be useful if you are using some advanced printer filter which is able
   to properly format e-mail messages for printing.

3.267. print_split

   Type: boolean
   Default: no

   Used in connection with the <print-message> command. If this option is
   _s_e_t, the command specified by $$pprriinntt__ccoommmmaanndd is executed once for each
   message which is to be printed. If this option is _u_n_s_e_t, the command
   specified by $$pprriinntt__ccoommmmaanndd is executed only once, and all the messages
   are concatenated, with a form feed as the message separator.

   Those who use the enscript(1) program's mail-printing mode will most
   likely want to _s_e_t this option.

3.268. prompt_after

   Type: boolean
   Default: yes

   If you use an _e_x_t_e_r_n_a_l $$ppaaggeerr, setting this variable will cause NeoMutt
   to prompt you for a command when the pager exits rather than returning
   to the index menu. If _u_n_s_e_t, NeoMutt will return to the index menu when
   the external pager exits.

3.269. query_command

   Type: command
   Default: (empty)

   This specifies the command NeoMutt will use to make external address
   queries. The string may contain a "%s", which will be substituted with
   the query string the user types. NeoMutt will add quotes around the
   string substituted for "%s" automatically according to shell quoting
   rules, so you should avoid adding your own. If no "%s" is found in the
   string, NeoMutt will append the user's query to the end of the string.
   See "qquueerryy" for more information.

3.270. query_format

   Type: string
   Default: "%4c %t %-25.25a %-25.25n %?e?(%e)?"

   This variable describes the format of the "query" menu. The following
   printf(3)-style sequences are understood:
   %a  Destination address
   %c  Current entry number
   %e  Extra information *
   %n  Destination name
   %t  "*" if current entry is tagged, a space otherwise
   %>X Right justify the rest of the string and pad with "X"
   %|X Pad to the end of the line with "X"
   %*X Soft-fill with character "X" as pad

   For an explanation of "soft-fill", see the $$iinnddeexx__ffoorrmmaatt documentation.

   * = can be optionally printed if nonzero, see the $$ssttaattuuss__ffoorrmmaatt
   documentation.

3.271. quit

   Type: quadoption
   Default: yes

   This variable controls whether "quit" and "exit" actually quit from
   NeoMutt. If this option is _s_e_t, they do quit, if it is _u_n_s_e_t, they have
   no effect, and if it is set to _a_s_k_-_y_e_s or _a_s_k_-_n_o, you are prompted for
   confirmation when you try to quit.

3.272. quote_regex

   Type: regular expression
   Default: "^([ \t]*[|>:}#])+"

   A regular expression used in the internal pager to determine quoted
   sections of text in the body of a message. Quoted text may be filtered
   out using the <toggle-quoted> command, or colored according to the
   "color quoted" family of directives.

   Higher levels of quoting may be colored differently ("color quoted1",
   "color quoted2", etc.). The quoting level is determined by removing the
   last character from the matched text and recursively reapplying the
   regular expression until it fails to produce a match.

   Match detection may be overridden by the $$ssmmiilleeyyss regular expression.

3.273. read_inc

   Type: number
   Default: 10

   If set to a value greater than 0, NeoMutt will display which message it
   is currently on when reading a mailbox or when performing search
   actions such as search and limit. The message is printed after this
   many messages have been read or searched (e.g., if set to 25, NeoMutt
   will print a message when it is at message 25, and then again when it
   gets to message 50). This variable is meant to indicate progress when
   reading or searching large mailboxes which may take some time. When set
   to 0, only a single message will appear before the reading the mailbox.

   Also see the $$wwrriittee__iinncc, $$nneett__iinncc and $$ttiimmee__iinncc variables and the
   "ttuunniinngg" section of the manual for performance considerations.

3.274. read_only

   Type: boolean
   Default: no

   If _s_e_t, all folders are opened in read-only mode.

3.275. realname

   Type: string
   Default: (empty)

   This variable specifies what "real" or "personal" name should be used
   when sending messages.

   If not specified, then the user's "real name" will be read from
   /etc/passwd. This option will not be used, if "$$ffrroomm" is set.

3.276. recall

   Type: quadoption
   Default: ask-yes

   Controls whether or not NeoMutt recalls postponed messages when
   composing a new message.

   Setting this variable to _y_e_s is not generally useful, and thus not
   recommended. Note that the <recall-message> function can be used to
   manually recall postponed messages.

   Also see $$ppoossttppoonneedd variable.

3.277. record

   Type: path
   Default: "~/sent"

   This specifies the file into which your outgoing messages should be
   appended. (This is meant as the primary method for saving a copy of
   your messages, but another way to do this is using the "mmyy__hhddrr" command
   to create a "Bcc:" field with your email address in it.)

   The value of $$rreeccoorrdd is overridden by the $$ffoorrccee__nnaammee and $$ssaavvee__nnaammee
   variables, and the "ffcccc--hhooookk" command. Also see $$ccooppyy.

3.278. reflow_space_quotes

   Type: boolean
   Default: yes

   This option controls how quotes from format=flowed messages are
   displayed in the pager and when replying (with $$tteexxtt__fflloowweedd _u_n_s_e_t).
   When set, this option adds spaces after each level of quote marks,
   turning ">>>foo" into "> > > foo".

   _N_o_t_e_: If $$rreeffllooww__tteexxtt is _u_n_s_e_t, this option has no effect. Also, this
   option does not affect replies when $$tteexxtt__fflloowweedd is _s_e_t.

3.279. reflow_text

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will reformat paragraphs in text/plain parts marked
   format=flowed. If _u_n_s_e_t, NeoMutt will display paragraphs unaltered from
   how they appear in the message body. See RFC3676 for details on the
   _f_o_r_m_a_t_=_f_l_o_w_e_d format.

   Also see $$rreeffllooww__wwrraapp, and $$wwrraapp.

3.280. reflow_wrap

   Type: number
   Default: 78

   This variable controls the maximum paragraph width when reformatting
   text/plain parts when $$rreeffllooww__tteexxtt is _s_e_t. When the value is 0,
   paragraphs will be wrapped at the terminal's right margin. A positive
   value sets the paragraph width relative to the left margin. A negative
   value set the paragraph width relative to the right margin.

   Also see $$wwrraapp.

3.281. reply_regex

   Type: regular expression
   Default: "^((re|aw|sv)(\[[0-9]+\])*:[ \t]*)*"

   A regular expression used to recognize reply messages when threading
   and replying. The default value corresponds to the English "Re:", the
   German "Aw:" and the Swedish "Sv:".

3.282. reply_self

   Type: boolean
   Default: no

   If _u_n_s_e_t and you are replying to a message sent by you, NeoMutt will
   assume that you want to reply to the recipients of that message rather
   than to yourself.

   Also see the "aalltteerrnnaatteess" command.

3.283. reply_to

   Type: quadoption
   Default: ask-yes

   If _s_e_t, when replying to a message, NeoMutt will use the address listed
   in the Reply-to: header as the recipient of the reply. If _u_n_s_e_t, it
   will use the address in the From: header field instead. This option is
   useful for reading a mailing list that sets the Reply-To: header field
   to the list address and you want to send a private message to the
   author of a message.

3.284. reply_with_xorig

   Type: boolean
   Default: no

   This variable provides a toggle. When active, the From: header will be
   extracted from the current mail's `X-Original-To:' header. This setting
   does not have precedence over "rreevveerrssee__rreeaallnnaammee".

   Assuming `fast_reply' is disabled, this option will prompt the user
   with a prefilled From: header.

3.285. resolve

   Type: boolean
   Default: yes

   When _s_e_t, the cursor will be automatically advanced to the next
   (possibly undeleted) message whenever a command that modifies the
   current message is executed.

3.286. resume_draft_files

   Type: boolean
   Default: no

   If _s_e_t, draft files (specified by -H on the command line) are processed
   similarly to when resuming a postponed message. Recipients are not
   prompted for; send-hooks are not evaluated; no alias expansion takes
   place; user-defined headers and signatures are not added to the
   message.

3.287. resume_edited_draft_files

   Type: boolean
   Default: yes

   If _s_e_t, draft files previously edited (via -E -H on the command line)
   will have $$rreessuummee__ddrraafftt__ffiilleess automatically set when they are used as a
   draft file again.

   The first time a draft file is saved, NeoMutt will add a header,
   X-Mutt-Resume-Draft to the saved file. The next time the draft file is
   read in, if NeoMutt sees the header, it will set $$rreessuummee__ddrraafftt__ffiilleess.

   This option is designed to prevent multiple signatures, user-defined
   headers, and other processing effects from being made multiple times to
   the draft file.

3.288. reverse_alias

   Type: boolean
   Default: no

   This variable controls whether or not NeoMutt will display the
   "personal" name from your aliases in the index menu if it finds an
   alias that matches the message's sender. For example, if you have the
   following alias:
alias juser abd30425@somewhere.net (Joe User)

   and then you receive mail which contains the following header:
From: abd30425@somewhere.net

   It would be displayed in the index menu as "Joe User" instead of
   "abd30425@somewhere.net." This is useful when the person's e-mail
   address is not human friendly.

3.289. reverse_name

   Type: boolean
   Default: no

   It may sometimes arrive that you receive mail to a certain machine,
   move the messages to another machine, and reply to some the messages
   from there. If this variable is _s_e_t, the default _F_r_o_m_: line of the
   reply messages is built using the address where you received the
   messages you are replying to _i_f that address matches your "aalltteerrnnaatteess".
   If the variable is _u_n_s_e_t, or the address that would be used doesn't
   match your "aalltteerrnnaatteess", the _F_r_o_m_: line will use your address on the
   current machine.

   Also see the "aalltteerrnnaatteess" command.

3.290. reverse_realname

   Type: boolean
   Default: yes

   This variable fine-tunes the behavior of the $$rreevveerrssee__nnaammee feature.
   When it is _s_e_t, NeoMutt will use the address from incoming messages
   as-is, possibly including eventual real names. When it is _u_n_s_e_t,
   NeoMutt will override any such real names with the setting of the
   $$rreeaallnnaammee variable.

3.291. rfc2047_parameters

   Type: boolean
   Default: no

   When this variable is _s_e_t, NeoMutt will decode RFC2047-encoded MIME
   parameters. You want to set this variable when NeoMutt suggests you to
   save attachments to files named like:
=?iso-8859-1?Q?file=5F=E4=5F991116=2Ezip?=

   When this variable is _s_e_t interactively, the change won't be active
   until you change folders.

   Note that this use of RFC2047's encoding is explicitly prohibited by
   the standard, but nevertheless encountered in the wild.

   Also note that setting this parameter will _n_o_t have the effect that
   NeoMutt _g_e_n_e_r_a_t_e_s this kind of encoding. Instead, NeoMutt will
   unconditionally use the encoding specified in RFC2231.

3.292. save_address

   Type: boolean
   Default: no

   If _s_e_t, NeoMutt will take the sender's full address when choosing a
   default folder for saving a mail. If $$ssaavvee__nnaammee or $$ffoorrccee__nnaammee is _s_e_t
   too, the selection of the Fcc folder will be changed as well.

3.293. save_empty

   Type: boolean
   Default: yes

   When _u_n_s_e_t, mailboxes which contain no saved messages will be removed
   when closed (the exception is $$ssppoooollffiillee which is never removed). If
   _s_e_t, mailboxes are never removed.

   _N_o_t_e_: This only applies to mbox and MMDF folders, NeoMutt does not
   delete MH and Maildir directories.

3.294. save_history

   Type: number
   Default: 0

   This variable controls the size of the history (per category) saved in
   the $$hhiissttoorryy__ffiillee file.

3.295. save_name

   Type: boolean
   Default: no

   This variable controls how copies of outgoing messages are saved. When
   _s_e_t, a check is made to see if a mailbox specified by the recipient
   address exists (this is done by searching for a mailbox in the $$ffoollddeerr
   directory with the _u_s_e_r_n_a_m_e part of the recipient address). If the
   mailbox exists, the outgoing message will be saved to that mailbox,
   otherwise the message is saved to the $$rreeccoorrdd mailbox.

   Also see the $$ffoorrccee__nnaammee variable.

3.296. save_unsubscribed

   Type: boolean
   Default: no

   When _s_e_t, info about unsubscribed newsgroups will be saved into
   "newsrc" file and into cache.

3.297. score

   Type: boolean
   Default: yes

   When this variable is _u_n_s_e_t, scoring is turned off. This can be useful
   to selectively disable scoring for certain folders when the
   $$ssccoorree__tthhrreesshhoolldd__ddeelleettee variable and related are used.

3.298. score_threshold_delete

   Type: number
   Default: -1

   Messages which have been assigned a score equal to or lower than the
   value of this variable are automatically marked for deletion by
   NeoMutt. Since NeoMutt scores are always greater than or equal to zero,
   the default setting of this variable will never mark a message for
   deletion.

3.299. score_threshold_flag

   Type: number
   Default: 9999

   Messages which have been assigned a score greater than or equal to this
   variable's value are automatically marked "flagged".

3.300. score_threshold_read

   Type: number
   Default: -1

   Messages which have been assigned a score equal to or lower than the
   value of this variable are automatically marked as read by NeoMutt.
   Since NeoMutt scores are always greater than or equal to zero, the
   default setting of this variable will never mark a message read.

3.301. search_context

   Type: number
   Default: 0

   For the pager, this variable specifies the number of lines shown before
   search results. By default, search results will be top-aligned.

3.302. send_charset

   Type: string
   Default: "us-ascii:iso-8859-1:utf-8"

   A colon-delimited list of character sets for outgoing messages. NeoMutt
   will use the first character set into which the text can be converted
   exactly. If your $$cchhaarrsseett is not "iso-8859-1" and recipients may not
   understand "UTF-8", it is advisable to include in the list an
   appropriate widely used standard character set (such as "iso-8859-2",
   "koi8-r" or "iso-2022-jp") either instead of or after "iso-8859-1".

   In case the text cannot be converted into one of these exactly, NeoMutt
   uses $$cchhaarrsseett as a fallback.

3.303. sendmail

   Type: command
   Default: "/usr/sbin/sendmail -oem -oi"

   Specifies the program and arguments used to deliver mail sent by
   NeoMutt. NeoMutt expects that the specified program interprets
   additional arguments as recipient addresses. NeoMutt appends all
   recipients after adding a -- delimiter (if not already present).
   Additional flags, such as for $$uussee__88bbiittmmiimmee, $$uussee__eennvveellooppee__ffrroomm,
   $$ddssnn__nnoottiiffyy, or $$ddssnn__rreettuurrnn will be added before the delimiter.

3.304. sendmail_wait

   Type: number
   Default: 0

   Specifies the number of seconds to wait for the $$sseennddmmaaiill process to
   finish before giving up and putting delivery in the background.

   NeoMutt interprets the value of this variable as follows:
   >0 number of seconds to wait for sendmail to finish before continuing
   0  wait forever for sendmail to finish
   <0 always put sendmail in the background without waiting

   Note that if you specify a value other than 0, the output of the child
   process will be put in a temporary file. If there is some error, you
   will be informed as to where to find the output.

3.305. shell

   Type: command
   Default: (empty)

   Command to use when spawning a subshell. If not specified, then the
   user's login shell from /etc/passwd is used.

3.306. show_multipart_alternative

   Type: string
   Default: (empty)

   When _s_e_t to info, the multipart/alternative information is shown. When
   _s_e_t to inline, all of the alternatives are displayed. When not set, the
   default behavior is to show only the chosen alternative.

3.307. show_new_news

   Type: boolean
   Default: yes

   If _s_e_t, news server will be asked for new newsgroups on entering the
   browser. Otherwise, it will be done only once for a news server. Also
   controls whether or not number of new articles of subscribed newsgroups
   will be then checked.

3.308. show_only_unread

   Type: boolean
   Default: no

   If _s_e_t, only subscribed newsgroups that contain unread articles will be
   displayed in browser.

3.309. sidebar_component_depth

   Type: number
   Default: 0

   By default the sidebar will show the mailbox's path, relative to the
   $$ffoollddeerr variable. This specifies the number of parent directories to
   hide from display in the sidebar. For example: If a maildir is normally
   displayed in the sidebar as dir1/dir2/dir3/maildir, setting
   sidebar_component_depth=2 will display it as dir3/maildir, having
   truncated the 2 highest directories.

   _S_e_e_ _a_l_s_o_: $$ssiiddeebbaarr__sshhoorrtt__ppaatthh

3.310. sidebar_delim_chars

   Type: string
   Default: "/."

   This contains the list of characters which you would like to treat as
   folder separators for displaying paths in the sidebar.

   Local mail is often arranged in directories: `dir1/dir2/mailbox'.
set sidebar_delim_chars='/'

   IMAP mailboxes are often named: `folder1.folder2.mailbox'.
set sidebar_delim_chars='.'

   _S_e_e_ _a_l_s_o_: $$ssiiddeebbaarr__sshhoorrtt__ppaatthh, $$ssiiddeebbaarr__ffoollddeerr__iinnddeenntt,
   $$ssiiddeebbaarr__iinnddeenntt__ssttrriinngg.

3.311. sidebar_divider_char

   Type: string
   Default: (empty)

   This specifies the characters to be drawn between the sidebar (when
   visible) and the other NeoMutt panels. ASCII and Unicode line-drawing
   characters are supported.

3.312. sidebar_folder_indent

   Type: boolean
   Default: no

   Set this to indent mailboxes in the sidebar.

   _S_e_e_ _a_l_s_o_: $$ssiiddeebbaarr__sshhoorrtt__ppaatthh, $$ssiiddeebbaarr__iinnddeenntt__ssttrriinngg,
   $$ssiiddeebbaarr__ddeelliimm__cchhaarrss.

3.313. sidebar_format

   Type: string
   Default: "%B%*  %n"

   This variable allows you to customize the sidebar display. This string
   is similar to $$iinnddeexx__ffoorrmmaatt, but has its own set of printf(3)-like
   sequences:
   %B Name of the mailbox
   %S * Size of mailbox (total number of messages)
   %N * Number of unread messages in the mailbox
   %n N if mailbox has new mail, blank otherwise
   %F * Number of Flagged messages in the mailbox
   %! "!" : one flagged message; "!!" : two flagged messages; "n!" : n
   flagged messages (for n > 2). Otherwise prints nothing.
   %d * @ Number of deleted messages
   %L * @ Number of messages after limiting
   %t * @ Number of tagged messages
   %>X right justify the rest of the string and pad with "X"
   %|X pad to the end of the line with "X"
   %*X soft-fill with character "X" as pad

   * = Can be optionally printed if nonzero @ = Only applicable to the
   current folder

   In order to use %S, %N, %F, and %!, $$mmaaiill__cchheecckk__ssttaattss must be _s_e_t. When
   thus set, a suggested value for this option is "%B%?F? [%F]?%*
   %?N?%N/?%S".

3.314. sidebar_indent_string

   Type: string
   Default: "  "

   This specifies the string that is used to indent mailboxes in the
   sidebar. It defaults to two spaces.

   _S_e_e_ _a_l_s_o_: $$ssiiddeebbaarr__sshhoorrtt__ppaatthh, $$ssiiddeebbaarr__ffoollddeerr__iinnddeenntt,
   $$ssiiddeebbaarr__ddeelliimm__cchhaarrss.

3.315. sidebar_new_mail_only

   Type: boolean
   Default: no

   When set, the sidebar will only display mailboxes containing new, or
   flagged, mail.

   _S_e_e_ _a_l_s_o_: ssiiddeebbaarr__wwhhiitteelliisstt.

3.316. sidebar_next_new_wrap

   Type: boolean
   Default: no

   When set, the <sidebar-next-new> command will not stop and the end of
   the list of mailboxes, but wrap around to the beginning. The
   <sidebar-prev-new> command is similarly affected, wrapping around to
   the end of the list.

3.317. sidebar_on_right

   Type: boolean
   Default: no

   When set, the sidebar will appear on the right-hand side of the screen.

3.318. sidebar_short_path

   Type: boolean
   Default: no

   By default the sidebar will show the mailbox's path, relative to the
   $$ffoollddeerr variable. Setting sidebar_shortpath=yes will shorten the names
   relative to the previous name. Here's an example:
   _s_h_o_r_t_p_a_t_h_=_n_o _s_h_o_r_t_p_a_t_h_=_y_e_s _s_h_o_r_t_p_a_t_h_=_y_e_s_,_ _f_o_l_d_e_r_i_n_d_e_n_t_=_y_e_s_,
   _i_n_d_e_n_t_s_t_r_=_"_._._"
   fruit fruit fruit
   fruit.apple apple ..apple
   fruit.banana banana ..banana
   fruit.cherry cherry ..cherry

   _S_e_e_ _a_l_s_o_: $$ssiiddeebbaarr__ddeelliimm__cchhaarrss, $$ssiiddeebbaarr__ffoollddeerr__iinnddeenntt,
   $$ssiiddeebbaarr__iinnddeenntt__ssttrriinngg, $$ssiiddeebbaarr__ccoommppoonneenntt__ddeepptthh.

3.319. sidebar_sort_method

   Type: sort order
   Default: order

   Specifies how to sort entries in the file browser. By default, the
   entries are sorted alphabetically. Valid values:
     * alpha (alphabetically)
     * count (all message count)
     * flagged (flagged message count)
     * name (alphabetically)
     * new (unread message count)
     * path (alphabetically)
     * unread (unread message count)
     * unsorted

   You may optionally use the "reverse-" prefix to specify reverse sorting
   order (example: "set sort_browser=reverse-date").

3.320. sidebar_visible

   Type: boolean
   Default: no

   This specifies whether or not to show sidebar. The sidebar shows a list
   of all your mailboxes.

   _S_e_e_ _a_l_s_o_: $$ssiiddeebbaarr__ffoorrmmaatt, $$ssiiddeebbaarr__wwiiddtthh

3.321. sidebar_width

   Type: number
   Default: 30

   This controls the width of the sidebar. It is measured in screen
   columns. For example: sidebar_width=20 could display 20 ASCII
   characters, or 10 Chinese characters.

3.322. sig_dashes

   Type: boolean
   Default: yes

   If _s_e_t, a line containing "-- " (note the trailing space) will be
   inserted before your $$ssiiggnnaattuurree. It is _s_t_r_o_n_g_l_y recommended that you
   not _u_n_s_e_t this variable unless your signature contains just your name.
   The reason for this is because many software packages use "-- \n" to
   detect your signature. For example, NeoMutt has the ability to
   highlight the signature in a different color in the built-in pager.

3.323. sig_on_top

   Type: boolean
   Default: no

   If _s_e_t, the signature will be included before any quoted or forwarded
   text. It is _s_t_r_o_n_g_l_y recommended that you do not set this variable
   unless you really know what you are doing, and are prepared to take
   some heat from netiquette guardians.

3.324. signature

   Type: path
   Default: "~/.signature"

   Specifies the filename of your signature, which is appended to all
   outgoing messages. If the filename ends with a pipe ("|"), it is
   assumed that filename is a shell command and input should be read from
   its standard output.

3.325. simple_search

   Type: string
   Default: "~f %s | ~s %s"

   Specifies how NeoMutt should expand a simple search into a real search
   pattern. A simple search is one that does not contain any of the "~"
   pattern operators. See "ppaatttteerrnnss" for more information on search
   patterns.

   For example, if you simply type "joe" at a search or limit prompt,
   NeoMutt will automatically expand it to the value specified by this
   variable by replacing "%s" with the supplied string. For the default
   value, "joe" would be expanded to: "~f joe | ~s joe".

3.326. skip_quoted_offset

   Type: number
   Default: 0

   Lines of quoted text that are displayed before the unquoted text after
   "skip to quoted" command (S)

3.327. sleep_time

   Type: number
   Default: 1

   Specifies time, in seconds, to pause while displaying certain
   informational messages, while moving from folder to folder and after
   expunging messages from the current folder. The default is to pause one
   second, so a value of zero for this option suppresses the pause.

3.328. smart_wrap

   Type: boolean
   Default: yes

   Controls the display of lines longer than the screen width in the
   internal pager. If _s_e_t, long lines are wrapped at a word boundary. If
   _u_n_s_e_t, lines are simply wrapped at the screen edge. Also see the
   $$mmaarrkkeerrss variable.

3.329. smileys

   Type: regular expression
   Default: "(>From )|(:[-^]?[][)(><}{|/DP])"

   The _p_a_g_e_r uses this variable to catch some common false positives of
   $$qquuoottee__rreeggeexx, most notably smileys and not consider a line quoted text
   if it also matches $$ssmmiilleeyyss. This mostly happens at the beginning of a
   line.

3.330. smime_ask_cert_label

   Type: boolean
   Default: yes

   This flag controls whether you want to be asked to enter a label for a
   certificate about to be added to the database or not. It is _s_e_t by
   default. (S/MIME only)

3.331. smime_ca_location

   Type: path
   Default: (empty)

   This variable contains the name of either a directory, or a file which
   contains trusted certificates for use with OpenSSL. (S/MIME only)

3.332. smime_certificates

   Type: path
   Default: (empty)

   Since for S/MIME there is no pubring/secring as with PGP, NeoMutt has
   to handle storage and retrieval of keys by itself. This is very basic
   right now, and keys and certificates are stored in two different
   directories, both named as the hash-value retrieved from OpenSSL. There
   is an index file which contains mailbox-address keyid pairs, and which
   can be manually edited. This option points to the location of the
   certificates. (S/MIME only)

3.333. smime_decrypt_command

   Type: command
   Default: (empty)

   This format string specifies a command which is used to decrypt
   application/x-pkcs7-mime attachments.

   The OpenSSL command formats have their own set of printf(3)-like
   sequences similar to PGP's:
   %f Expands to the name of a file containing a message.
   %s Expands to the name of a file containing the signature part of a
   multipart/signed attachment when verifying it.
   %k The key-pair specified with $$ssmmiimmee__ddeeffaauulltt__kkeeyy
   %i Intermediate certificates
   %c One or more certificate IDs.
   %a The algorithm used for encryption.
   %d The message digest algorithm specified with $$ssmmiimmee__ssiiggnn__ddiiggeesstt__aallgg.
   %C CA location: Depending on whether $$ssmmiimmee__ccaa__llooccaattiioonn points to a
   directory or file, this expands to "-CApath $$ssmmiimmee__ccaa__llooccaattiioonn" or
   "-CAfile $$ssmmiimmee__ccaa__llooccaattiioonn".

   For examples on how to configure these formats, see the smime.rc in the
   samples/ subdirectory which has been installed on your system alongside
   the documentation. (S/MIME only)

3.334. smime_decrypt_use_default_key

   Type: boolean
   Default: yes

   If _s_e_t (default) this tells NeoMutt to use the default key for
   decryption. Otherwise, if managing multiple certificate-key-pairs,
   NeoMutt will try to use the mailbox-address to determine the key to
   use. It will ask you to supply a key, if it can't find one. (S/MIME
   only)

3.335. smime_default_key

   Type: string
   Default: (empty)

   This is the default key-pair to use for S/MIME operations, and must be
   set to the keyid (the hash-value that OpenSSL generates) to work
   properly.

   It will be used for encryption (see $$ppoossttppoonnee__eennccrryypptt and
   $$ssmmiimmee__sseellff__eennccrryypptt).

   It will be used for decryption unless $$ssmmiimmee__ddeeccrryypptt__uussee__ddeeffaauulltt__kkeeyy is
   _u_n_s_e_t.

   It will also be used for signing unless $$ssmmiimmee__ssiiggnn__aass is set.

   The (now deprecated) _s_m_i_m_e___s_e_l_f___e_n_c_r_y_p_t___a_s is an alias for this
   variable, and should no longer be used. (S/MIME only)

3.336. smime_encrypt_command

   Type: command
   Default: (empty)

   This command is used to create encrypted S/MIME messages.

   This is a format string, see the $$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command for
   possible printf(3)-like sequences. (S/MIME only)

   Encrypt the message to $$ssmmiimmee__ddeeffaauulltt__kkeeyy too. (S/MIME only)

3.337. smime_encrypt_with

   Type: string
   Default: "aes256"

   This sets the algorithm that should be used for encryption. Valid
   choices are "aes128", "aes192", "aes256", "des", "des3", "rc2-40",
   "rc2-64", "rc2-128". (S/MIME only)

3.338. smime_get_cert_command

   Type: command
   Default: (empty)

   This command is used to extract X509 certificates from a PKCS7
   structure.

   This is a format string, see the $$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command for
   possible printf(3)-like sequences. (S/MIME only)

3.339. smime_get_cert_email_command

   Type: command
   Default: (empty)

   This command is used to extract the mail address(es) used for storing
   X509 certificates, and for verification purposes (to check whether the
   certificate was issued for the sender's mailbox).

   This is a format string, see the $$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command for
   possible printf(3)-like sequences. (S/MIME only)

3.340. smime_get_signer_cert_command

   Type: command
   Default: (empty)

   This command is used to extract only the signers X509 certificate from
   a S/MIME signature, so that the certificate's owner may get compared to
   the email's "From:" field.

   This is a format string, see the $$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command for
   possible printf(3)-like sequences. (S/MIME only)

3.341. smime_import_cert_command

   Type: command
   Default: (empty)

   This command is used to import a certificate via smime_keys.

   This is a format string, see the $$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command for
   possible printf(3)-like sequences. NOTE: %c and %k will default to
   $$ssmmiimmee__ssiiggnn__aass if set, otherwise $$ssmmiimmee__ddeeffaauulltt__kkeeyy. (S/MIME only)

3.342. smime_is_default

   Type: boolean
   Default: no

   The default behavior of NeoMutt is to use PGP on all
   auto-sign/encryption operations. To override and to use OpenSSL instead
   this must be _s_e_t. However, this has no effect while replying, since
   NeoMutt will automatically select the same application that was used to
   sign/encrypt the original message. (Note that this variable can be
   overridden by unsetting $$ccrryypptt__aauuttoossmmiimmee.) (S/MIME only)

3.343. smime_keys

   Type: path
   Default: (empty)

   Since for S/MIME there is no pubring/secring as with PGP, NeoMutt has
   to handle storage and retrieval of keys/certs by itself. This is very
   basic right now, and stores keys and certificates in two different
   directories, both named as the hash-value retrieved from OpenSSL. There
   is an index file which contains mailbox-address keyid pair, and which
   can be manually edited. This option points to the location of the
   private keys. (S/MIME only)

3.344. smime_pk7out_command

   Type: command
   Default: (empty)

   This command is used to extract PKCS7 structures of S/MIME signatures,
   in order to extract the public X509 certificate(s).

   This is a format string, see the $$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command for
   possible printf(3)-like sequences. (S/MIME only)

3.345. smime_self_encrypt

   Type: boolean
   Default: yes

   When _s_e_t, S/MIME encrypted messages will also be encrypted using the
   certificate in $$ssmmiimmee__ddeeffaauulltt__kkeeyy. (S/MIME only)

3.346. smime_sign_as

   Type: string
   Default: (empty)

   If you have a separate key to use for signing, you should set this to
   the signing key. Most people will only need to set $$ssmmiimmee__ddeeffaauulltt__kkeeyy.
   (S/MIME only)

3.347. smime_sign_command

   Type: command
   Default: (empty)

   This command is used to created S/MIME signatures of type
   multipart/signed, which can be read by all mail clients.

   This is a format string, see the $$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command for
   possible printf(3)-like sequences. (S/MIME only)

3.348. smime_sign_digest_alg

   Type: string
   Default: "sha256"

   This sets the algorithm that should be used for the signature message
   digest. Valid choices are "md5", "sha1", "sha224", "sha256", "sha384",
   "sha512". (S/MIME only)

3.349. smime_timeout

   Type: number (long)
   Default: 300

   The number of seconds after which a cached passphrase will expire if
   not used. (S/MIME only)

3.350. smime_verify_command

   Type: command
   Default: (empty)

   This command is used to verify S/MIME signatures of type
   multipart/signed.

   This is a format string, see the $$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command for
   possible printf(3)-like sequences. (S/MIME only)

3.351. smime_verify_opaque_command

   Type: command
   Default: (empty)

   This command is used to verify S/MIME signatures of type
   application/x-pkcs7-mime.

   This is a format string, see the $$ssmmiimmee__ddeeccrryypptt__ccoommmmaanndd command for
   possible printf(3)-like sequences. (S/MIME only)

3.352. smtp_authenticators

   Type: string
   Default: (empty)

   This is a colon-delimited list of authentication methods NeoMutt may
   attempt to use to log in to an SMTP server, in the order NeoMutt should
   try them. Authentication methods are any SASL mechanism, e.g. "plain",
   "digest-md5", "gssapi" or "cram-md5". This option is case-insensitive.
   If it is "unset" (the default) NeoMutt will try all available methods,
   in order from most-secure to least-secure. Support for the "plain"
   mechanism is bundled; other mechanisms are provided by an external SASL
   library (look for +USE_SASL in the output of neomutt -v).

   Example:
set smtp_authenticators="digest-md5:cram-md5"

3.353. smtp_pass

   Type: string
   Default: (empty)

   Specifies the password for your SMTP account. If _u_n_s_e_t, NeoMutt will
   prompt you for your password when you first send mail via SMTP. See
   $$ssmmttpp__uurrll to configure NeoMutt to send mail via SMTP.

   _W_a_r_n_i_n_g: you should only use this option when you are on a fairly
   secure machine, because the superuser can read your neomuttrc even if
   you are the only one who can read the file.

3.354. smtp_url

   Type: string
   Default: (empty)

   Defines the SMTP smarthost where sent messages should relayed for
   delivery. This should take the form of an SMTP URL, e.g.:
smtp[s]://[user[:pass]@]host[:port]

   where "[...]" denotes an optional part. Setting this variable overrides
   the value of the $$sseennddmmaaiill variable.

3.355. sort

   Type: sort order
   Default: date

   Specifies how to sort messages in the "index" menu. Valid values are:
     * date or date-sent
     * date-received
     * from
     * mailbox-order (unsorted)
     * score
     * size
     * spam
     * subject
     * threads
     * to

   You may optionally use the "reverse-" prefix to specify reverse sorting
   order.

   Example:
set sort=reverse-date-sent

3.356. sort_alias

   Type: sort order
   Default: alias

   Specifies how the entries in the "alias" menu are sorted. The following
   are legal values:
     * address (sort alphabetically by email address)
     * alias (sort alphabetically by alias name)
     * unsorted (leave in order specified in .neomuttrc)

3.357. sort_aux

   Type: sort order
   Default: date

   When sorting by threads, this variable controls how threads are sorted
   in relation to other threads, and how the branches of the thread trees
   are sorted. This can be set to any value that $$ssoorrtt can, except
   "threads" (in that case, NeoMutt will just use "date-sent"). You can
   also specify the "last-" prefix in addition to the "reverse-" prefix,
   but "last-" must come after "reverse-". The "last-" prefix causes
   messages to be sorted against its siblings by which has the last
   descendant, using the rest of $$ssoorrtt__aauuxx as an ordering. For instance,
set sort_aux=last-date-received

   would mean that if a new message is received in a thread, that thread
   becomes the last one displayed (or the first, if you have "set
   sort=reverse-threads".)

   Note: For reversed $$ssoorrtt order $$ssoorrtt__aauuxx is reversed again (which is
   not the right thing to do, but kept to not break any existing
   configuration setting).

3.358. sort_browser

   Type: sort order
   Default: alpha

   Specifies how to sort entries in the file browser. By default, the
   entries are sorted alphabetically. Valid values:
     * alpha (alphabetically)
     * count (all message count)
     * date
     * desc (description)
     * new (new message count)
     * size
     * unsorted

   You may optionally use the "reverse-" prefix to specify reverse sorting
   order (example: "set sort_browser=reverse-date").

3.359. sort_re

   Type: boolean
   Default: yes

   This variable is only useful when sorting by mailboxes in sidebar. By
   default, entries are unsorted. Valid values:
     * count (all message count)
     * desc (virtual mailbox description)
     * new (new message count)
     * path
     * unsorted

3.360. spam_separator

   Type: string
   Default: ","

   This variable controls what happens when multiple spam headers are
   matched: if _u_n_s_e_t, each successive header will overwrite any previous
   matches value for the spam label. If _s_e_t, each successive match will
   append to the previous, using this variable's value as a separator.

3.361. spoolfile

   Type: path
   Default: (empty)

   If your spool mailbox is in a non-default place where NeoMutt cannot
   find it, you can specify its location with this variable.

   If not specified, then the environment variables $MAIL and $MAILDIR
   will be checked.

3.362. ssl_ciphers

   Type: string
   Default: (empty)

   Contains a colon-separated list of ciphers to use when using SSL. For
   OpenSSL, see ciphers(1) for the syntax of the string.

   For GnuTLS, this option will be used in place of "NORMAL" at the start
   of the priority string. See gnutls_priority_init(3) for the syntax and
   more details. (Note: GnuTLS version 2.1.7 or higher is required.)

3.363. ssl_client_cert

   Type: path
   Default: (empty)

   The file containing a client certificate and its associated private
   key.

3.364. ssl_force_tls

   Type: boolean
   Default: no

   If this variable is _s_e_t, NeoMutt will require that all connections to
   remote servers be encrypted. Furthermore it will attempt to negotiate
   TLS even if the server does not advertise the capability, since it
   would otherwise have to abort the connection anyway. This option
   supersedes $$ssssll__ssttaarrttttllss.

3.365. ssl_starttls

   Type: quadoption
   Default: yes

   If _s_e_t (the default), NeoMutt will attempt to use STARTTLS on servers
   advertising the capability. When _u_n_s_e_t, NeoMutt will not attempt to use
   STARTTLS regardless of the server's capabilities.

3.366. ssl_use_sslv2

   Type: boolean
   Default: no

   This variable specifies whether to attempt to use SSLv2 in the SSL
   authentication process. Note that SSLv2 and SSLv3 are now considered
   fundamentally insecure and are no longer recommended. (OpenSSL only)

3.367. ssl_use_sslv3

   Type: boolean
   Default: no

   This variable specifies whether to attempt to use SSLv3 in the SSL
   authentication process. Note that SSLv2 and SSLv3 are now considered
   fundamentally insecure and are no longer recommended.

3.368. ssl_use_tlsv1

   Type: boolean
   Default: yes

   This variable specifies whether to attempt to use TLSv1.0 in the SSL
   authentication process.

3.369. ssl_use_tlsv1_1

   Type: boolean
   Default: yes

   This variable specifies whether to attempt to use TLSv1.1 in the SSL
   authentication process.

3.370. ssl_use_tlsv1_2

   Type: boolean
   Default: yes

   This variable specifies whether to attempt to use TLSv1.2 in the SSL
   authentication process.

3.371. ssl_usesystemcerts

   Type: boolean
   Default: yes

   If set to _y_e_s, NeoMutt will use CA certificates in the system-wide
   certificate store when checking if a server certificate is signed by a
   trusted CA. (OpenSSL only)

3.372. ssl_verify_dates

   Type: boolean
   Default: yes

   If _s_e_t (the default), NeoMutt will not automatically accept a server
   certificate that is either not yet valid or already expired. You should
   only unset this for particular known hosts, using the <<aaccccoouunntt--hhooookk>>
   function.

3.373. ssl_verify_host

   Type: boolean
   Default: yes

   If _s_e_t (the default), NeoMutt will not automatically accept a server
   certificate whose host name does not match the host used in your folder
   URL. You should only unset this for particular known hosts, using the
   <<aaccccoouunntt--hhooookk>> function.

3.374. ssl_verify_partial_chains

   Type: boolean
   Default: no

   This option should not be changed from the default unless you
   understand what you are doing.

   Setting this variable to _y_e_s will permit verifying partial
   certification chains, i. e. a certificate chain where not the root, but
   an intermediate certificate CA, or the host certificate, are marked
   trusted (in $$cceerrttiiffiiccaattee__ffiillee), without marking the root signing CA as
   trusted.

   (OpenSSL 1.0.2b and newer only).

3.375. status_chars

   Type: string
   Default: "-*%A"

   Controls the characters used by the "%r" indicator in $$ssttaattuuss__ffoorrmmaatt.
   _C_h_a_r_a_c_t_e_r _D_e_f_a_u_l_t _D_e_s_c_r_i_p_t_i_o_n
   1 - Mailbox is unchanged
   2 * Mailbox has been changed and needs to be resynchronized
   3 % Mailbox is read-only, or will not be written when exiting. (You can
   toggle whether to write changes to a mailbox with the <toggle-write>
   operation, bound by default to "%")
   4 A Folder opened in attach-message mode. (Certain operations like
   composing a new mail, replying, forwarding, etc. are not permitted in
   this mode)

3.376. status_format

   Type: string
   Default: "-%r-NeoMutt: %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d?
   Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l? %l?]---(%
   s/%S)-%>-(%P)---"

   Controls the format of the status line displayed in the "index" menu.
   This string is similar to $$iinnddeexx__ffoorrmmaatt, but has its own set of
   printf(3)-like sequences:
   %b Number of mailboxes with new mail *
   %d Number of deleted messages *
   %f The full pathname of the current mailbox
   %F Number of flagged messages *
   %h Local hostname
   %l Size (in bytes) of the current mailbox *
   %L Size (in bytes) of the messages shown (i.e., which match the current
   limit) *
   %m The number of messages in the mailbox *
   %M The number of messages shown (i.e., which match the current limit) *
   %n Number of new messages in the mailbox *
   %o Number of old unread messages *
   %p Number of postponed messages *
   %P Percentage of the way through the index
   %r Modified/read-only/won't-write/attach-message indicator, According
   to $$ssttaattuuss__cchhaarrss
   %R Number of read messages *
   %s Current sorting mode ($$ssoorrtt)
   %S Current aux sorting method ($$ssoorrtt__aauuxx)
   %t Number of tagged messages *
   %u Number of unread messages *
   %v NeoMutt version string
   %V Currently active limit pattern, if any *
   %>X Right justify the rest of the string and pad with "X"
   %|X Pad to the end of the line with "X"
   %*X Soft-fill with character "X" as pad

   For an explanation of "soft-fill", see the $$iinnddeexx__ffoorrmmaatt documentation.

   * = can be optionally printed if nonzero

   Some of the above sequences can be used to optionally print a string if
   their value is nonzero. For example, you may only want to see the
   number of flagged messages if such messages exist, since zero is not
   particularly meaningful. To optionally print a string based upon one of
   the above sequences, the following construct is used:

   %?<sequence_char>?<optional_string>?

   where _s_e_q_u_e_n_c_e___c_h_a_r is a character from the table above, and
   _o_p_t_i_o_n_a_l___s_t_r_i_n_g is the string you would like printed if _s_e_q_u_e_n_c_e___c_h_a_r
   is nonzero. _o_p_t_i_o_n_a_l___s_t_r_i_n_g _m_a_y contain other sequences as well as
   normal text, but you may _n_o_t nest optional strings.

   Here is an example illustrating how to optionally print the number of
   new messages in a mailbox:

   %?n?%n new messages.?

   You can also switch between two strings using the following construct:

   %?<sequence_char>?<if_string>&<else_string>?

   If the value of _s_e_q_u_e_n_c_e___c_h_a_r is non-zero, _i_f___s_t_r_i_n_g will be expanded,
   otherwise _e_l_s_e___s_t_r_i_n_g will be expanded.

   You can force the result of any printf(3)-like sequence to be lowercase
   by prefixing the sequence character with an underscore ("_") sign. For
   example, if you want to display the local hostname in lowercase, you
   would use: "%_h".

   If you prefix the sequence character with a colon (":") character,
   NeoMutt will replace any dots in the expansion by underscores. This
   might be helpful with IMAP folders that don't like dots in folder
   names.

3.377. status_on_top

   Type: boolean
   Default: no

   Setting this variable causes the "status bar" to be displayed on the
   first line of the screen rather than near the bottom. If $$hheellpp is _s_e_t,
   too it'll be placed at the bottom.

3.378. strict_threads

   Type: boolean
   Default: no

   If _s_e_t, threading will only make use of the "In-Reply-To" and
   "References:" fields when you $$ssoorrtt by message threads. By default,
   messages with the same subject are grouped together in "pseudo
   threads.". This may not always be desirable, such as in a personal
   mailbox where you might have several unrelated messages with the
   subjects like "hi" which will get grouped together. See also $$ssoorrtt__rree
   for a less drastic way of controlling this behavior.

3.379. suspend

   Type: boolean
   Default: yes

   When _u_n_s_e_t, NeoMutt won't stop when the user presses the terminal's
   _s_u_s_p key, usually "^Z". This is useful if you run NeoMutt inside an
   xterm using a command like "xterm -e neomutt".

3.380. text_flowed

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will generate "format=flowed" bodies with a content
   type of "text/plain; format=flowed". This format is easier to handle
   for some mailing software, and generally just looks like ordinary text.
   To actually make use of this format's features, you'll need support in
   your editor.

   Note that $$iinnddeenntt__ssttrriinngg is ignored when this option is _s_e_t.

3.381. thorough_search

   Type: boolean
   Default: yes

   Affects the ~b and ~h search operations described in section
   "ppaatttteerrnnss". If _s_e_t, the headers and body/attachments of messages to be
   searched are decoded before searching. If _u_n_s_e_t, messages are searched
   as they appear in the folder.

   Users searching attachments or for non-ASCII characters should _s_e_t this
   value because decoding also includes MIME parsing/decoding and possible
   character set conversions. Otherwise NeoMutt will attempt to match
   against the raw message received (for example quoted-printable encoded
   or with encoded headers) which may lead to incorrect search results.

3.382. thread_received

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt uses the date received rather than the date sent to
   thread messages by subject.

3.383. tilde

   Type: boolean
   Default: no

   When _s_e_t, the internal-pager will pad blank lines to the bottom of the
   screen with a tilde ("~").

3.384. time_inc

   Type: number
   Default: 0

   Along with $$rreeaadd__iinncc, $$wwrriittee__iinncc, and $$nneett__iinncc, this variable controls
   the frequency with which progress updates are displayed. It suppresses
   updates less than $$ttiimmee__iinncc milliseconds apart. This can improve
   throughput on systems with slow terminals, or when running NeoMutt on a
   remote system.

   Also see the "ttuunniinngg" section of the manual for performance
   considerations.

3.385. timeout

   Type: number
   Default: 600

   When NeoMutt is waiting for user input either idling in menus or in an
   interactive prompt, NeoMutt would block until input is present.
   Depending on the context, this would prevent certain operations from
   working, like checking for new mail or keeping an IMAP connection
   alive.

   This variable controls how many seconds NeoMutt will at most wait until
   it aborts waiting for input, performs these operations and continues to
   wait for input.

   A value of zero or less will cause NeoMutt to never time out.

3.386. tmpdir

   Type: path
   Default: "/tmp"

   This variable allows you to specify where NeoMutt will place its
   temporary files needed for displaying and composing messages.

   If this variable is not set, the environment variable $TMPDIR is used.
   Failing that, then "/tmp" is used.

3.387. to_chars

   Type: string
   Default: " +TCFL"

   Controls the character used to indicate mail addressed to you.
   _C_h_a_r_a_c_t_e_r _D_e_f_a_u_l_t _D_e_s_c_r_i_p_t_i_o_n
   1 <space> The mail is _n_o_t addressed to your address.
   2 + You are the only recipient of the message.
   3 T Your address appears in the "To:" header field, but you are not the
   only recipient of the message.
   4 C Your address is specified in the "Cc:" header field, but you are
   not the only recipient.
   5 F Indicates the mail that was sent by _y_o_u.
   6 L Indicates the mail was sent to a mailing-list you subscribe to.

3.388. trash

   Type: path
   Default: (empty)

   If set, this variable specifies the path of the trash folder where the
   mails marked for deletion will be moved, instead of being irremediably
   purged.

   NOTE: When you delete a message in the trash folder, it is really
   deleted, so that you have a way to clean the trash.

3.389. ts_enabled

   Type: boolean
   Default: no

   Controls whether NeoMutt tries to set the terminal status line and icon
   name. Most terminal emulators emulate the status line in the window
   title.

3.390. ts_icon_format

   Type: string
   Default: "M%?n?AIL&ail?"

   Controls the format of the icon title, as long as "$$ttss__eennaabblleedd" is set.
   This string is identical in formatting to the one used by
   "$$ssttaattuuss__ffoorrmmaatt".

3.391. ts_status_format

   Type: string
   Default: "NeoMutt with %?m?%m messages&no messages?%?n? [%n NEW]?"

   Controls the format of the terminal status line (or window title),
   provided that "$$ttss__eennaabblleedd" has been set. This string is identical in
   formatting to the one used by "$$ssttaattuuss__ffoorrmmaatt".

3.392. tunnel

   Type: string
   Default: (empty)

   Setting this variable will cause NeoMutt to open a pipe to a command
   instead of a raw socket. You may be able to use this to set up
   preauthenticated connections to your IMAP/POP3/SMTP server. Example:
set tunnel="ssh -q mailhost.net /usr/local/libexec/imapd"

   Note: For this example to work you must be able to log in to the remote
   machine without having to enter a password.

   When set, NeoMutt uses the tunnel for all remote connections. Please
   see "aaccccoouunntt--hhooookk" in the manual for how to use different tunnel
   commands per connection.

3.393. uncollapse_jump

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will jump to the next unread message, if any, when
   the current thread is _u_ncollapsed.

3.394. uncollapse_new

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will automatically uncollapse any collapsed thread
   that receives a new message. When _u_n_s_e_t, collapsed threads will remain
   collapsed. the presence of the new message will still affect index
   sorting, though.

3.395. use_8bitmime

   Type: boolean
   Default: no

   _W_a_r_n_i_n_g_: do not set this variable unless you are using a version of
   sendmail which supports the -B8BITMIME flag (such as sendmail 8.8.x) or
   you may not be able to send mail.

   When _s_e_t, NeoMutt will invoke $$sseennddmmaaiill with the -B8BITMIME flag when
   sending 8-bit messages to enable ESMTP negotiation.

3.396. use_domain

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will qualify all local addresses (ones without the
   "@host" portion) with the value of $$hhoossttnnaammee. If _u_n_s_e_t, no addresses
   will be qualified.

3.397. use_envelope_from

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will set the _e_n_v_e_l_o_p_e sender of the message. If
   $$eennvveellooppee__ffrroomm__aaddddrreessss is _s_e_t, it will be used as the sender address.
   If _u_n_s_e_t, NeoMutt will attempt to derive the sender from the "From:"
   header.

   Note that this information is passed to sendmail command using the -f
   command line switch. Therefore setting this option is not useful if the
   $$sseennddmmaaiill variable already contains -f or if the executable pointed to
   by $$sseennddmmaaiill doesn't support the -f switch.

3.398. use_from

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will generate the "From:" header field when sending
   messages. If _u_n_s_e_t, no "From:" header field will be generated unless
   the user explicitly sets one using the "mmyy__hhddrr" command.

3.399. use_ipv6

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will look for IPv6 addresses of hosts it tries to
   contact. If this option is _u_n_s_e_t, NeoMutt will restrict itself to IPv4
   addresses. Normally, the default should work.

3.400. user_agent

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will add a "User-Agent:" header to outgoing messages,
   indicating which version of NeoMutt was used for composing them.

3.401. vfolder_format

   Type: string
   Default: "%2C %?n?%4n/&     ?%4m %f"

   This variable allows you to customize the file browser display for
   virtual folders to your personal taste. This string uses many of the
   same expandos as $$ffoollddeerr__ffoorrmmaatt.

3.402. virtual_spoolfile

   Type: boolean
   Default: no

   When _s_e_t, NeoMutt will use the first defined virtual mailbox (see
   virtual-mailboxes) as a spool file.

3.403. visual

   Type: command
   Default: "vi"

   Specifies the visual editor to invoke when the "~v" command is given in
   the built-in editor.

   $$vviissuuaall is overridden by the environment variable $VISUAL or $EDITOR.

3.404. wait_key

   Type: boolean
   Default: yes

   Controls whether NeoMutt will ask you to press a key after an external
   command has been invoked by these functions: <shell-escape>,
   <pipe-message>, <pipe-entry>, <print-message>, and <print-entry>
   commands.

   It is also used when viewing attachments with "aauuttoo__vviieeww", provided
   that the corresponding mailcap entry has a _n_e_e_d_s_t_e_r_m_i_n_a_l flag, and the
   external program is interactive.

   When _s_e_t, NeoMutt will always ask for a key. When _u_n_s_e_t, NeoMutt will
   wait for a key only if the external command returned a non-zero status.

3.405. weed

   Type: boolean
   Default: yes

   When _s_e_t, NeoMutt will weed headers when displaying, forwarding,
   printing, or replying to messages.

3.406. wrap

   Type: number
   Default: 0

   When set to a positive value, NeoMutt will wrap text at $$wwrraapp
   characters. When set to a negative value, NeoMutt will wrap text so
   that there are $$wwrraapp characters of empty space on the right side of the
   terminal. Setting it to zero makes NeoMutt wrap at the terminal width.

   Also see $$rreeffllooww__wwrraapp.

3.407. wrap_headers

   Type: number
   Default: 78

   This option specifies the number of characters to use for wrapping an
   outgoing message's headers. Allowed values are between 78 and 998
   inclusive.

   _N_o_t_e_: This option usually shouldn't be changed. RFC5233 recommends a
   line length of 78 (the default), so _p_l_e_a_s_e_ _o_n_l_y_ _c_h_a_n_g_e_ _t_h_i_s_ _s_e_t_t_i_n_g
   _w_h_e_n_ _y_o_u_ _k_n_o_w_ _w_h_a_t_ _y_o_u_'_r_e_ _d_o_i_n_g.

3.408. wrap_search

   Type: boolean
   Default: yes

   Controls whether searches wrap around the end.

   When _s_e_t, searches will wrap around the first (or last) item. When
   _u_n_s_e_t, incremental searches will not wrap.

3.409. write_bcc

   Type: boolean
   Default: yes

   Controls whether NeoMutt writes out the "Bcc:" header when preparing
   messages to be sent. Exim users may wish to unset this. If NeoMutt is
   set to deliver directly via SMTP (see $$ssmmttpp__uurrll), this option does
   nothing: NeoMutt will never write out the "Bcc:" header in this case.

3.410. write_inc

   Type: number
   Default: 10

   When writing a mailbox, a message will be printed every $$wwrriittee__iinncc
   messages to indicate progress. If set to 0, only a single message will
   be displayed before writing a mailbox.

   Also see the $$rreeaadd__iinncc, $$nneett__iinncc and $$ttiimmee__iinncc variables and the
   "ttuunniinngg" section of the manual for performance considerations.

3.411. x_comment_to

   Type: boolean
   Default: no

   If _s_e_t, NeoMutt will add "X-Comment-To:" field (that contains full name
   of original article author) to article that followuped to newsgroup.

4. Functions

   The following is the list of available functions listed by the mapping
   in which they are available. The default key setting is given, and an
   explanation of what the function does. The key bindings of these
   functions can be changed with the bbiinndd command.

4.1. Generic Menu

   The _g_e_n_e_r_i_c menu is not a real menu, but specifies common functions
   (such as movement) available in all menus except for _p_a_g_e_r and _e_d_i_t_o_r.
   Changing settings for this menu will affect the default bindings for
   all menus (except as noted).

   _T_a_b_l_e_ _9_._2_._ _D_e_f_a_u_l_t_ _G_e_n_e_r_i_c_ _M_e_n_u_ _B_i_n_d_i_n_g_s
       Function      Default key                  Description
   <bottom-page>     L           move to the bottom of the page
   <check-stats>                 calculate message statistics for all mailboxes
   <current-bottom>              move entry to bottom of screen
   <current-middle>              move entry to middle of screen
   <current-top>                 move entry to top of screen
   <end-cond>                    end of conditional execution (noop)
   <enter-command>   :           enter a neomuttrc command
   <exit>            q           exit this menu
   <first-entry>     =           move to the first entry
   <half-down>       ]           scroll down 1/2 page
   <half-up>         [           scroll up 1/2 page
   <help>            ?           this screen
   <jump>                        jump to an index number
   <last-entry>      *           move to the last entry
   <middle-page>     M           move to the middle of the page
   <next-entry>      j           move to the next entry
   <next-line>       >           scroll down one line
   <next-page>       z           move to the next page
   <previous-entry>  k           move to the previous entry
   <previous-line>   <           scroll up one line
   <previous-page>   Z           move to the previous page
   <refresh>         ^L          clear and redraw the screen
   <search>          /           search for a regular expression
   <search-next>     n           search for next match
   <search-opposite>             search for next match in opposite direction
   <search-reverse>  Esc /       search backwards for a regular expression
   <select-entry>    <Enter>     select the current entry
   <select-entry>    <Return>    select the current entry
   <shell-escape>    !           invoke a command in a subshell
   <tag-entry>       t           tag the current entry
   <tag-prefix>      ;           apply next function to tagged messages
   <tag-prefix-cond>             apply next function ONLY to tagged messages
   <top-page>        H           move to the top of the page
   <what-key>                    display the keycode for a key press

4.2. Index Menu

   _T_a_b_l_e_ _9_._3_._ _D_e_f_a_u_l_t_ _I_n_d_e_x_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <bounce-message> b remail a message to another user
   <break-thread> # break the thread in two
   <buffy-list> . list mailboxes with new mail
   <catchup>   mark all articles in newsgroup as read
   <change-folder> c open a different folder
   <change-folder-readonly> Esc c open a different folder in read only
   mode
   <change-newsgroup>   open a different newsgroup
   <change-newsgroup-readonly>   open a different newsgroup in read only
   mode
   <change-vfolder>   open a different virtual folder
   <check-traditional-pgp> Esc P check for classic PGP
   <clear-flag> W clear a status flag from a message
   <collapse-all> Esc V collapse/uncollapse all threads
   <collapse-thread> Esc v collapse/uncollapse current thread
   <compose-to-sender>   compose a new message to the sender
   <copy-message> C copy a message to a file/mailbox
   <create-alias> a create an alias from a message sender
   <decode-copy> Esc C make decoded (text/plain) copy
   <decode-save> Esc s make decoded copy (text/plain) and delete
   <decrypt-copy>   make decrypted copy
   <decrypt-save>   make decrypted copy and delete
   <delete-message> d delete the current entry
   <delete-pattern> D delete messages matching a pattern
   <delete-subthread> Esc d delete all messages in subthread
   <delete-thread> ^D delete all messages in thread
   <display-address> @ display full address of sender
   <display-message> <Enter> display a message
   <display-message> <Return> display a message
   <display-toggle-weed> h display message and toggle header weeding
   <edit>   edit the raw message (edit and edit-raw-message are synonyms)
   <edit-label> Y add, change, or delete a message's label
   <edit-or-view-raw-message> e edit the raw message if the mailbox is not
   read-only, otherwise view it
   <edit-raw-message>   edit the raw message (edit and edit-raw-message
   are synonyms)
   <edit-type> ^E edit attachment content type
   <entire-thread>   read entire thread of the current message
   <extract-keys> ^K extract supported public keys
   <fetch-mail> G retrieve mail from POP server
   <flag-message> F toggle a message's 'important' flag
   <followup-message>   followup to newsgroup
   <forget-passphrase> ^F wipe passphrases from memory
   <forward-message> f forward a message with comments
   <forward-to-group>   forward to newsgroup
   <get-children>   get all children of the current message
   <get-message>   get message with Message-Id
   <get-parent>   get parent of the current message
   <group-reply> g reply to all recipients
   <imap-fetch-mail>   force retrieval of mail from IMAP server
   <imap-logout-all>   logout from all IMAP servers
   <limit> l show only messages matching a pattern
   <limit-current-thread>   limit view to current thread
   <link-threads> & link tagged message to the current one
   <list-reply> L reply to specified mailing list
   <mail> m compose a new mail message
   <mail-key> Esc k mail a PGP public key
   <mark-message> ~ create a hotkey macro for the current message
   <modify-labels>   modify (notmuch/imap) tags
   <modify-labels-then-hide>   modify (notmuch/imap) tags and then hide
   message
   <modify-tags>   modify (notmuch/imap) tags
   <modify-tags-then-hide>   modify (notmuch/imap) tags and then hide
   message
   <next-new>   jump to the next new message
   <next-new-then-unread> <Tab> jump to the next new or unread message
   <next-subthread> Esc n jump to the next subthread
   <next-thread> ^N jump to the next thread
   <next-undeleted> j move to the next undeleted message
   <next-unread>   jump to the next unread message
   <next-unread-mailbox>   open next mailbox with new mail
   <parent-message> P jump to parent message in thread
   <pipe-message> | pipe message/attachment to a shell command
   <post-message>   post message to newsgroup
   <previous-new>   jump to the previous new message
   <previous-new-then-unread> Esc <Tab> jump to the previous new or unread
   message
   <previous-subthread> Esc p jump to previous subthread
   <previous-thread> ^P jump to previous thread
   <previous-undeleted> k move to the previous undeleted message
   <previous-unread>   jump to the previous unread message
   <print-message> p print the current entry
   <purge-message>   delete the current entry, bypassing the trash folder
   <purge-thread>   delete the current thread, bypassing the trash folder
   <quasi-delete>   delete from NeoMutt, don't touch on disk
   <query> Q query external program for addresses
   <quit> q save changes to mailbox and quit
   <read-subthread> Esc r mark the current subthread as read
   <read-thread> ^R mark the current thread as read
   <recall-message> R recall a postponed message
   <reconstruct-thread>   reconstruct thread containing current message
   <reply> r reply to a message
   <resend-message> Esc e use the current message as a template for a new
   one
   <root-message>   jump to root message in thread
   <save-message> s save message/attachment to a mailbox/file
   <set-flag> w set a status flag on a message
   <show-limit> Esc l show currently active limit pattern
   <show-log-messages> M show log (and debug) messages
   <show-version> V show the NeoMutt version number and date
   <sidebar-next>   move the highlight to next mailbox
   <sidebar-next-new>   move the highlight to next mailbox with new mail
   <sidebar-open>   open highlighted mailbox
   <sidebar-page-down>   scroll the sidebar down 1 page
   <sidebar-page-up>   scroll the sidebar up 1 page
   <sidebar-prev>   move the highlight to previous mailbox
   <sidebar-prev-new>   move the highlight to previous mailbox with new
   mail
   <sidebar-toggle-virtual>   toggle between mailboxes and virtual
   mailboxes
   <sidebar-toggle-visible>   make the sidebar (in)visible
   <sort-mailbox> o sort messages
   <sort-reverse> O sort messages in reverse order
   <sync-mailbox> $ save changes to mailbox
   <tag-pattern> T tag messages matching a pattern
   <tag-subthread>   tag the current subthread
   <tag-thread> Esc t tag the current thread
   <toggle-new> N toggle a message's 'new' flag
   <toggle-read>   toggle view of read messages
   <toggle-write> % toggle whether the mailbox will be rewritten
   <undelete-message> u undelete the current entry
   <undelete-pattern> U undelete messages matching a pattern
   <undelete-subthread> Esc u undelete all messages in subthread
   <undelete-thread> ^U undelete all messages in thread
   <untag-pattern> ^T untag messages matching a pattern
   <vfolder-from-query>   generate virtual folder from query
   <vfolder-window-backward>   shifts virtual folder time window backwards
   <vfolder-window-forward>   shifts virtual folder time window forwards
   <view-attachments> v show MIME attachments
   <view-raw-message>   show the raw message

4.3. Pager Menu

   _T_a_b_l_e_ _9_._4_._ _D_e_f_a_u_l_t_ _P_a_g_e_r_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <bottom>   jump to the bottom of the message
   <bounce-message> b remail a message to another user
   <break-thread> # break the thread in two
   <buffy-list> . list mailboxes with new mail
   <change-folder> c open a different folder
   <change-folder-readonly> Esc c open a different folder in read only
   mode
   <change-newsgroup>   open a different newsgroup
   <change-newsgroup-readonly>   open a different newsgroup in read only
   mode
   <change-vfolder>   open a different virtual folder
   <check-stats>   calculate message statistics for all mailboxes
   <check-traditional-pgp> Esc P check for classic PGP
   <clear-flag> W clear a status flag from a message
   <compose-to-sender>   compose a new message to the sender
   <copy-message> C copy a message to a file/mailbox
   <create-alias> a create an alias from a message sender
   <decode-copy> Esc C make decoded (text/plain) copy
   <decode-save> Esc s make decoded copy (text/plain) and delete
   <decrypt-copy>   make decrypted copy
   <decrypt-save>   make decrypted copy and delete
   <delete-message> d delete the current entry
   <delete-subthread> Esc d delete all messages in subthread
   <delete-thread> ^D delete all messages in thread
   <display-address> @ display full address of sender
   <display-toggle-weed> h display message and toggle header weeding
   <edit>   edit the raw message (edit and edit-raw-message are synonyms)
   <edit-label> Y add, change, or delete a message's label
   <edit-or-view-raw-message> e edit the raw message if the mailbox is not
   read-only, otherwise view it
   <edit-raw-message>   edit the raw message (edit and edit-raw-message
   are synonyms)
   <edit-type> ^E edit attachment content type
   <enter-command> : enter a neomuttrc command
   <entire-thread>   read entire thread of the current message
   <exit> q exit this menu
   <extract-keys> ^K extract supported public keys
   <flag-message> F toggle a message's 'important' flag
   <followup-message>   followup to newsgroup
   <forget-passphrase> ^F wipe passphrases from memory
   <forward-message> f forward a message with comments
   <forward-to-group>   forward to newsgroup
   <group-reply> g reply to all recipients
   <half-down>   scroll down 1/2 page
   <half-up>   scroll up 1/2 page
   <help> ? this screen
   <imap-fetch-mail>   force retrieval of mail from IMAP server
   <imap-logout-all>   logout from all IMAP servers
   <jump>   jump to an index number
   <link-threads> & link tagged message to the current one
   <list-reply> L reply to specified mailing list
   <mail> m compose a new mail message
   <mail-key> Esc k mail a PGP public key
   <mark-as-new> N toggle a message's 'new' flag
   <modify-labels>   modify (notmuch/imap) tags
   <modify-labels-then-hide>   modify (notmuch/imap) tags and then hide
   message
   <modify-tags>   modify (notmuch/imap) tags
   <modify-tags-then-hide>   modify (notmuch/imap) tags and then hide
   message
   <next-entry> J move to the next entry
   <next-line> <Enter> scroll down one line
   <next-line> <Return> scroll down one line
   <next-new>   jump to the next new message
   <next-new-then-unread> <Tab> jump to the next new or unread message
   <next-page> <Space> move to the next page
   <next-subthread> Esc n jump to the next subthread
   <next-thread> ^N jump to the next thread
   <next-undeleted> j move to the next undeleted message
   <next-unread>   jump to the next unread message
   <next-unread-mailbox>   open next mailbox with new mail
   <parent-message> P jump to parent message in thread
   <pipe-message> | pipe message/attachment to a shell command
   <post-message>   post message to newsgroup
   <previous-entry> K move to the previous entry
   <previous-line>   scroll up one line
   <previous-new>   jump to the previous new message
   <previous-new-then-unread>   jump to the previous new or unread message
   <previous-page> - move to the previous page
   <previous-subthread> Esc p jump to previous subthread
   <previous-thread> ^P jump to previous thread
   <previous-undeleted> k move to the previous undeleted message
   <previous-unread>   jump to the previous unread message
   <print-message> p print the current entry
   <purge-message>   delete the current entry, bypassing the trash folder
   <purge-thread>   delete the current thread, bypassing the trash folder
   <quasi-delete>   delete from NeoMutt, don't touch on disk
   <quit> Q save changes to mailbox and quit
   <read-subthread> Esc r mark the current subthread as read
   <read-thread> ^R mark the current thread as read
   <recall-message> R recall a postponed message
   <reconstruct-thread>   reconstruct thread containing current message
   <redraw-screen> ^L clear and redraw the screen
   <reply> r reply to a message
   <resend-message> Esc e use the current message as a template for a new
   one
   <root-message>   jump to root message in thread
   <save-message> s save message/attachment to a mailbox/file
   <search> / search for a regular expression
   <search-next> n search for next match
   <search-opposite>   search for next match in opposite direction
   <search-reverse> Esc / search backwards for a regular expression
   <search-toggle> \\ toggle search pattern coloring
   <set-flag> w set a status flag on a message
   <shell-escape> ! invoke a command in a subshell
   <show-version> V show the NeoMutt version number and date
   <sidebar-next>   move the highlight to next mailbox
   <sidebar-next-new>   move the highlight to next mailbox with new mail
   <sidebar-open>   open highlighted mailbox
   <sidebar-page-down>   scroll the sidebar down 1 page
   <sidebar-page-up>   scroll the sidebar up 1 page
   <sidebar-prev>   move the highlight to previous mailbox
   <sidebar-prev-new>   move the highlight to previous mailbox with new
   mail
   <sidebar-toggle-virtual>   toggle between mailboxes and virtual
   mailboxes
   <sidebar-toggle-visible>   make the sidebar (in)visible
   <skip-quoted> S skip beyond quoted text
   <sort-mailbox> o sort messages
   <sort-reverse> O sort messages in reverse order
   <sync-mailbox> $ save changes to mailbox
   <tag-message> t tag the current entry
   <toggle-quoted> T toggle display of quoted text
   <top> ^ jump to the top of the message
   <undelete-message> u undelete the current entry
   <undelete-subthread> Esc u undelete all messages in subthread
   <undelete-thread> ^U undelete all messages in thread
   <vfolder-from-query>   generate virtual folder from query
   <view-attachments> v show MIME attachments
   <view-raw-message>   show the raw message
   <what-key>   display the keycode for a key press

4.4. Alias Menu

   _T_a_b_l_e_ _9_._5_._ _D_e_f_a_u_l_t_ _A_l_i_a_s_ _M_e_n_u_ _B_i_n_d_i_n_g_s
       Function     Default key        Description
   <delete-entry>   d           delete the current entry
   <undelete-entry> u           undelete the current entry

4.5. Query Menu

   _T_a_b_l_e_ _9_._6_._ _D_e_f_a_u_l_t_ _Q_u_e_r_y_ _M_e_n_u_ _B_i_n_d_i_n_g_s
      Function    Default key                 Description
   <create-alias> a           create an alias from a message sender
   <mail>         m           compose a new mail message
   <query>        Q           query external program for addresses
   <query-append> A           append new query results to current results

4.6. Attachment Menu

   _T_a_b_l_e_ _9_._7_._ _D_e_f_a_u_l_t_ _A_t_t_a_c_h_m_e_n_t_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <bounce-message> b remail a message to another user
   <check-traditional-pgp> Esc P check for classic PGP
   <collapse-parts> v toggle display of subparts
   <delete-entry> d delete the current entry
   <display-toggle-weed> h display message and toggle header weeding
   <edit-type> ^E edit attachment content type
   <extract-keys> ^K extract supported public keys
   <followup-message>   followup to newsgroup
   <forget-passphrase> ^F wipe passphrases from memory
   <forward-message> f forward a message with comments
   <forward-to-group>   forward to newsgroup
   <group-reply> g reply to all recipients
   <list-reply> L reply to specified mailing list
   <pipe-entry> | pipe message/attachment to a shell command
   <print-entry> p print the current entry
   <reply> r reply to a message
   <resend-message> Esc e use the current message as a template for a new
   one
   <save-entry> s save message/attachment to a mailbox/file
   <undelete-entry> u undelete the current entry
   <view-attach> <Enter> view attachment using mailcap entry if necessary
   <view-attach> <Return> view attachment using mailcap entry if necessary
   <view-mailcap> m force viewing of attachment using mailcap
   <view-text> T view attachment as text

4.7. Compose Menu

   _T_a_b_l_e_ _9_._8_._ _D_e_f_a_u_l_t_ _C_o_m_p_o_s_e_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <attach-file> a attach files to this message
   <attach-key> Esc k attach a PGP public key
   <attach-message> A attach messages to this message
   <attach-news-message>   attach news articles to this message
   <copy-file> C save message/attachment to a mailbox/file
   <detach-file> D delete the current entry
   <display-toggle-weed> h display message and toggle header weeding
   <edit-bcc> b edit the BCC list
   <edit-cc> c edit the CC list
   <edit-description> d edit attachment description
   <edit-encoding> ^E edit attachment transfer-encoding
   <edit-fcc> f enter a file to save a copy of this message in
   <edit-file> ^X e edit the file to be attached
   <edit-followup-to>   edit the Followup-To field
   <edit-from> Esc f edit the from field
   <edit-headers> E edit the message with headers
   <edit-language> ^L edit the Content-Language of the attachment
   <edit-message> e edit the message
   <edit-mime> m edit attachment using mailcap entry
   <edit-newsgroups>   edit the newsgroups list
   <edit-reply-to> r edit the Reply-To field
   <edit-subject> s edit the subject of this message
   <edit-to> t edit the TO list
   <edit-type> ^T edit attachment content type
   <edit-x-comment-to>   edit the X-Comment-To field
   <filter-entry> F filter attachment through a shell command
   <forget-passphrase> ^F wipe passphrases from memory
   <get-attachment> G get a temporary copy of an attachment
   <group-alternatives> & group tagged attachments as
   multipart/alternative
   <group-multilingual> ^ group tagged attachments as
   multipart/multilingual
   <ispell> i run ispell on the message
   <move-down> + move an attachment down in the attachment list
   <move-up> - move an attachment up in the attachment list
   <new-mime> n compose new attachment using mailcap entry
   <pgp-menu> p show PGP options
   <pipe-entry> | pipe message/attachment to a shell command
   <postpone-message> P save this message to send later
   <print-entry> l print the current entry
   <rename-attachment> ^O send attachment with a different name
   <rename-file> R rename/move an attached file
   <send-message> y send the message
   <smime-menu> S show S/MIME options
   <toggle-disposition> ^D toggle disposition between inline/attachment
   <toggle-recode>   toggle recoding of this attachment
   <toggle-unlink> u toggle whether to delete file after sending it
   <update-encoding> U update an attachment's encoding info
   <view-attach> <Enter> view attachment using mailcap entry if necessary
   <view-attach> <Return> view attachment using mailcap entry if necessary
   <write-fcc> w write the message to a folder

4.8. Postpone Menu

   _T_a_b_l_e_ _9_._9_._ _D_e_f_a_u_l_t_ _P_o_s_t_p_o_n_e_ _M_e_n_u_ _B_i_n_d_i_n_g_s
       Function     Default key        Description
   <delete-entry>   d           delete the current entry
   <undelete-entry> u           undelete the current entry

4.9. Browser Menu

   _T_a_b_l_e_ _9_._1_0_._ _D_e_f_a_u_l_t_ _B_r_o_w_s_e_r_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <buffy-list> . list mailboxes with new mail
   <catchup>   mark all articles in newsgroup as read
   <change-dir> c change directories
   <check-new>   check mailboxes for new mail
   <create-mailbox> C create a new mailbox (IMAP only)
   <delete-mailbox> d delete the current mailbox (IMAP only)
   <display-filename> @ display the currently selected file's name
   <enter-mask> m enter a file mask
   <goto-folder> = swap the current folder position with $folder if it
   exists
   <goto-parent> p go to parent directory
   <reload-active>   load list of all newsgroups from NNTP server
   <rename-mailbox> r rename the current mailbox (IMAP only)
   <select-new> N select a new file in this directory
   <sort> o sort messages
   <sort-reverse> O sort messages in reverse order
   <subscribe> s subscribe to current mbox (IMAP/NNTP only)
   <subscribe-pattern>   subscribe to newsgroups matching a pattern
   <toggle-mailboxes> <Tab> toggle whether to browse mailboxes or all
   files
   <toggle-subscribed> T toggle view all/subscribed mailboxes (IMAP only)
   <uncatchup>   mark all articles in newsgroup as unread
   <unsubscribe> u unsubscribe from current mbox (IMAP/NNTP only)
   <unsubscribe-pattern>   unsubscribe from newsgroups matching a pattern
   <view-file> <Space> view file

4.10. Pgp Menu

   _T_a_b_l_e_ _9_._1_1_._ _D_e_f_a_u_l_t_ _P_g_p_ _M_e_n_u_ _B_i_n_d_i_n_g_s
     Function   Default key       Description
   <verify-key> c           verify a PGP public key
   <view-name>  %           view the key's user id

4.11. Smime Menu

   _T_a_b_l_e_ _9_._1_2_._ _D_e_f_a_u_l_t_ _S_m_i_m_e_ _M_e_n_u_ _B_i_n_d_i_n_g_s
     Function   Default key       Description
   <verify-key> c           verify a PGP public key
   <view-name>  %           view the key's user id

4.12. Editor Menu

   _T_a_b_l_e_ _9_._1_3_._ _D_e_f_a_u_l_t_ _E_d_i_t_o_r_ _M_e_n_u_ _B_i_n_d_i_n_g_s
   Function Default key Description
   <backspace> <Backspace> delete the char in front of the cursor
   <backward-char> ^B move the cursor one character to the left
   <backward-word> Esc b move the cursor to the beginning of the word
   <bol> ^A jump to the beginning of the line
   <buffy-cycle> <Space> cycle among incoming mailboxes
   <capitalize-word> Esc c capitalize the word
   <complete> <Tab> complete filename or alias
   <complete-query> ^T complete address with query
   <delete-char> ^D delete the char under the cursor
   <downcase-word> Esc l convert the word to lower case
   <eol> ^E jump to the end of the line
   <forward-char> ^F move the cursor one character to the right
   <forward-word> Esc f move the cursor to the end of the word
   <history-down>   scroll down through the history list
   <history-search> ^R search through the history list
   <history-up>   scroll up through the history list
   <kill-eol> ^K delete chars from cursor to end of line
   <kill-eow> Esc d delete chars from the cursor to the end of the word
   <kill-line> ^U delete all chars on the line
   <kill-word> ^W delete the word in front of the cursor
   <quote-char> ^V quote the next typed key
   <transpose-chars>   transpose character under cursor with previous
   <upcase-word> Esc u convert the word to upper case

Chapter 10. Miscellany

   _T_a_b_l_e_ _o_f_ _C_o_n_t_e_n_t_s

   11..  AAcckknnoowwlleeddggeemmeennttss
   22..  AAbboouutt  TThhiiss  DDooccuummeenntt

1. Acknowledgements

   Kari Hurtta <kkaarrii..hhuurrttttaa@@ffmmii..ffii> co-developed the original MIME parsing
   code back in the ELM-ME days.

   The following people have been very helpful to the development of Mutt:
     * Vikas Agnihotri <vviikkaassaa@@wwrriitteemmee..ccoomm>
     * Francois Berjon <FFrraannccooiiss..BBeerrjjoonn@@aaaarr..aallccaatteell--aallsstthhoomm..ffrr>
     * Aric Blumer <aarriicc@@ffoorree..ccoomm>
     * John Capo <jjcc@@iirrbbss..ccoomm>
     * David Champion <ddggcc@@uucchhiiccaaggoo..eedduu>
     * Brendan Cully <bbrreennddaann@@kkuubbllaaii..ccoomm>
     * Liviu Daia <ddaaiiaa@@ssttooiillooww..iimmaarr..rroo>
     * Thomas E. Dickey <ddiicckkeeyy@@hheerrnnddoonn44..hhiiss..ccoomm>
     * David DeSimone <ffooxx@@ccoonnvveexx..hhpp..ccoomm>
     * Nickolay N. Dudorov <nnnndd@@wwiinntt..iittffss..nnsskk..ssuu>
     * Ruslan Ermilov <rruu@@ffrreeeebbssdd..oorrgg>
     * Edmund Grimley Evans <eeddmmuunnddoo@@rraannoo..oorrgg>
     * Michael Finken <ffiinnkkeenn@@ccoonnwwaarree..ddee>
     * Sven Guckes <gguucckkeess@@mmaatthh..ffuu--bbeerrlliinn..ddee>
     * Lars Hecking <llhheecckkiinngg@@nnmmrrcc..iiee>
     * Mark Holloman <hhoolllloommaann@@nnaannddoo..nneett>
     * Andreas Holzmann <hhoollzzmmaannnn@@ffmmii..uunnii--ppaassssaauu..ddee>
     * Marco d'Itri <mmdd@@lliinnuuxx..iitt>
     * Bjoern Jacke <bbjjaacckkee@@ssuussee..ccoomm>
     * Byrial Jensen <bbyyrriiaall@@iimmaaggee..ddkk>
     * David Jeske <jjeesskkee@@iiggccoomm..nneett>
     * Christophe Kalt <kkaalltt@@hhuuggoo..iinntt--eevvrryy..ffrr>
     * Tommi Komulainen <TToommmmii..KKoommuullaaiinneenn@@iikkii..ffii>
     * Felix von Leitner (a.k.a "Fefe") <lleeiittnneerr@@mmaatthh..ffuu--bbeerrlliinn..ddee>
     * Brandon Long <bblloonngg@@ffiiccttiioonn..nneett>
     * Jimmy Maekelae <jjmmyy@@ffllaasshhbbaacckk..nneett>
     * Lars Marowsky-Bree <llmmbb@@ppooiinntteerr..iinn--mmiinnddeenn..ddee>
     * Thomas "Mike" Michlmayr <mmiikkee@@ccoossyy..ssbbgg..aacc..aatt>
     * Andrew W. Nosenko <aawwnn@@bbccss..zzpp..uuaa>
     * David O'Brien <oobbrriieenn@@NNuuxxii..ccss..uuccddaavviiss..eedduu>
     * Clint Olsen <oollsseenncc@@iicchhiippss..iinntteell..ccoomm>
     * Park Myeong Seok <ppmmss@@rroommaannccee..kkaaiisstt..aacc..kkrr>
     * Thomas Parmelan <ttoomm@@aannkkhh..ffrr..eeuu..oorrgg>
     * Ollivier Robert <rroobbeerrttoo@@kkeellttiiaa..ffrreeeenniixx..ffrr>
     * Thomas Roessler <rrooeesssslleerr@@ddooeess--nnoott--eexxiisstt..oorrgg>
     * Roland Rosenfeld <rroollaanndd@@ssppiinnnnaakkeerr..ddee>
     * Rocco Rutte <ppddmmeeff@@ggmmxx..nneett>
     * TAKIZAWA Takashi <ttaakkii@@lluunnaa..eemmaaiill..nnee..jjpp>
     * Allain Thivillon <AAllllaaiinn..TThhiivviilllloonn@@aallmmaa..ffrr>
     * Gero Treuner <ggeerroo@@7700tt..ddee>
     * Vsevolod Volkov <vvvvvv@@lluucckkyy..nneett>
     * Ken Weinert <kkeennww@@iihhss..ccoomm>

2. About This Document

   This document was written in DDooccBBooookk, and then rendered using the GGnnoommee
   XXSSLLTT  ttoooollkkiitt.
