From: Joey Pabalinas <joeypabalinas@gmail.com>
To: Secure Systems Lab Mailing List <securesystemslab@googlegroups.com>
Cc: Justin Cappos <jcappos@nyu.edu>,
	Brendan Dolan-Gavitt <brendandg@nyu.edu>,
	Li Yiwen <detectivelyw@gmail.com>,
	Preston Moore <pkm266@nyu.edu>,
	CrashSimulator Mailing List <crashsimulator-dev@googlegroups.com>,
	Joey Pabalinas <joeypabalinas@gmail.com>
Bcc:
Subject: [2018-08-29] Joey's Progress Report
Reply-To:
In-Reply-To:

/*
 * Joey's Progress Report
 *
 * (2018-08-29)
 */

This week was mostly spent fixing the last few smudges in our PR adding
single-process, thread-only emulation of the Linux fork() system call to
NaCl, as well as on assessing possible difficulties/issues in adding 64-bit
support to CrashSimulator.

        [CrashSimulator]

        Progress is slow, but so far there aren't any huge obstacles
        I've noticed standing in the way; syscallreplay had no issues
        whatsoever, so I am currently in the process of getting rr to
        compile without errors.

        I did run into one specific issue with glibc 2.26 adding
        a shadow stack pointer member to their ucontext_t structure.
        This ended up breaking the kernel ABI tests, and it took
        a bit of digging to find the upstream rr issue [1] about
        it (the static assertions failures are not very descriptive
        about _why_ they fail, which is something I plan to fix
        eventually).

        I've sort of just band-aided it for now by just adding the
        missing member; I think it's more important to just get rr
        built and revisit this in the future, as the upstream solution
        was to remove the ucontext_t structure completely and I don't
        yet actually know if CrashSimulator would still need it for
        anything.

        [Lind]

        The glibc PR has been running smoothly; the changes which were
        suggested during review were minor and easy to fix, so I've just
        merged that one in so I can concentrate on the NaCl PR (I have
        basically zero concerns about our glibc code).

        After double checking that I've addressed as many problems as
        I could brought up during review, I've spent the rest of the
        week cutting out everything except the absolutely minimum that
        both made sense and was required for fork() to work, and cleaned
        it up before condensing it into a final PR; I feel much more
        comfortable merging this one, mostly because of all the tiny
        errors which were caught and fixed during code review.

        I haven't triple checked all of it yet and won't be pinging specific
        people for review until I've had a chance to do so.

        That being said, you are more than welcome to take a look [2]
        or make any comments if you happen to be intrigued (or bored :).

/* Plans For Next Week */

        - Continue assessing the difficulty of porting CrashSimulator
          to x86_64.
        - Finish cleaning up my NaCl fork() PR, then ping a couple people
          for code review.

That's all for this week, thanks everyone.

[1] https://github.com/mozilla/rr/issues/2237
[2] https://github.com/Lind-Project/native_client/pull/6

-- 
Cheers,
Joey Pabalinas

# vi:ft=mail et:
