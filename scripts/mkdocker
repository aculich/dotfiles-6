#!/bin/bash

set -o errexit

push_flag=""
usage="usage: ${0##*/} -[hp]"

trap '{ printf "%s\n" "[$0:$LINENO] Docker build failed." >&2; exit 1; }' ERR

export LIND_PREFIX="${LIND_PREFIX:-$HOME}"
export LIND_BASE="${LIND_BASE:-$LIND_PREFIX/lind_project}"
export LIND_SRC="${LIND_SRC:-$LIND_BASE/lind}"
export LIND_MONITOR="${LIND_MONITOR:-$LIND_BASE/reference_monitor}"
export REPY_PATH="${REPY_PATH:-$LIND_SRC/repy}"
export NACL_SDK_ROOT="${NACL_SDK_ROOT:-$REPY_PATH/sdk}"
export PYTHON="${PYTHON:-python2}"
export PNACLPYTHON="${PNACLPYTHON:-python2}"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH:-/lib/glibc}"

cd "$LIND_BASE"

# option handling
while getopts :hp opt; do
	case "$opt" in
	# push docker images
	p)
		push_flag=1;;
	# show usage information
	h)
		printf '%s\n' "$usage" >&2
		exit;;
	# wtf ???
	:|?)
		printf 'illegal option: -%s\n' "$OPTARG" >&2
		printf '%s\n' "$usage" >&2
		false;;
	esac
done
shift "$((OPTIND - 1))"

for tag in base prebuiltsdk naclruntime; do
	docker image rm -f "alyptik/lind:$tag"
	docker build --no-cache -t "alyptik/lind:$tag" "./docker/$tag"
	if [[ -n "$push_flag" ]]; then
		docker push "alyptik/lind:$tag"
	fi
done

# special case "latest" tag
docker image rm -f "alyptik/lind:latest"
docker build --cache-from=alyptik/lind:naclruntime -t alyptik/lind:latest ./docker/naclruntime
if [[ -n "$push_flag" ]]; then
	docker push alyptik/lind:latest
fi
