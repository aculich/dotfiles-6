#!/bin/bash

set -o errexit

cwd="$PWD"

trap '{ cd "$cwd"; printf "%s\n" "Done." >&2; }' EXIT
trap '{ cd "$cwd"; printf "%s\n" "[$0:$LINENO] Docker build failed." >&2; }' ERR

export LIND_PREFIX="${LIND_PREFIX:-$HOME}"
export LIND_BASE="${LIND_BASE:-$LIND_PREFIX/lind_project}"
export LIND_SRC="${LIND_SRC:-$LIND_BASE/lind}"
export LIND_MONITOR="${LIND_MONITOR:-$LIND_BASE/reference_monitor}"
export REPY_PATH="${REPY_PATH:-$LIND_SRC/repy}"
export NACL_SDK_ROOT="${NACL_SDK_ROOT:-$REPY_PATH/sdk}"
export PYTHON="${PYTHON:-python2}"
export PNACLPYTHON="${PNACLPYTHON:-python2}"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH:-/lib/glibc}"

cd "$LIND_BASE"

for tag in base prebuiltsdk naclruntime; do
	docker image rm -f "alyptik/lind:$tag"
	docker build --no-cache -t "alyptik/lind:$tag" "./docker/$tag"
	docker push "alyptik/lind:$tag"
done
docker image rm -f "alyptik/lind:latest"
docker build --cache-from=alyptik/lind:naclruntime -t alyptik/lind:latest ./docker/naclruntime
docker push alyptik/lind:latest
